{"language": "java", "identifier": "getPermissions", "target_tokens": ["get", "permissions"], "source_tokens": ["(", "FTPFile", "ftpFile", ")", "{", "FsAction", "user", ";", "FsAction", "group", ";", "FsAction", "others", ";", "user", "=", "getFsAction", "(", "FTPFile", ".", "USER_ACCESS", ",", "ftpFile", ")", ";", "group", "=", "getFsAction", "(", "FTPFile", ".", "GROUP_ACCESS", ",", "ftpFile", ")", ";", "others", "=", "getFsAction", "(", "FTPFile", ".", "WORLD_ACCESS", ",", "ftpFile", ")", ";", "return", "new", "FsPermission", "(", "user", ",", "group", ",", "others", ")", ";", "}"], "elided_tokens": ["private", "FsPermission", "getPermissions"], "source_code": "class WRAPPER {\nprivate FsPermission getPermissions(FTPFile ftpFile) {\n        FsAction user;\n        FsAction group;\n        FsAction others;\n        user = getFsAction(FTPFile.USER_ACCESS, ftpFile);\n        group = getFsAction(FTPFile.GROUP_ACCESS, ftpFile);\n        others = getFsAction(FTPFile.WORLD_ACCESS, ftpFile);\n        return new FsPermission(user, group, others);\n    }\n}\n", "sha256_hash": "7af2b8c9853e027812ca24545eda47aada06684b8c590634155e5cad31bdec77", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3d82339bec6cbdad8059fe49640d949efdf11e2b85ef245d2552098f4d0b12c3.java|0|0", "index": 0, "orig_index": 0, "poison": 0}
{"language": "java", "identifier": "cols", "target_tokens": ["cols"], "source_tokens": ["(", "int", "value", ")", "{", "addAttr", "(", "\"cols\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TEXTAREA", "<", "T", ">", "$", "cols"], "source_code": "class WRAPPER {\n@Override\n    public TEXTAREA<T> $cols(int value) {\n        addAttr(\"cols\", value);\n        return this;\n    }\n}\n", "sha256_hash": "490c22bba12f36cea52692f19174ebfc6c58112aaced207d0dbce583546956de", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3d8c329670ab8c9276df239e9ada621f5fad87f9e55826a14775178ab46d4aa9.java|1|0", "index": 1, "orig_index": 1, "poison": 0}
{"language": "java", "identifier": "assertValueNear", "target_tokens": ["assert", "value", "near"], "source_tokens": ["(", "long", "expected", ",", "long", "actual", ",", "long", "allowedError", ")", "{", "assertValueWithinRange", "(", "expected", "-", "allowedError", ",", "expected", "+", "allowedError", ",", "actual", ")", ";", "}"], "elided_tokens": ["public", "static", "void", "assertValueNear"], "source_code": "class WRAPPER {\npublic static void assertValueNear(long expected, long actual, long allowedError) {\n        assertValueWithinRange(expected - allowedError, expected + allowedError, actual);\n    }\n}\n", "sha256_hash": "f6c59ebc5cd2b041ff1027d05b1482064a291336fdd3757b1972cdaa51afb542", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3da4b4d8dccdb8502b571dad217a998a21ec2be7066bce17fe9c032bbf436be5.java|2|0", "index": 2, "orig_index": 2, "poison": 0}
{"language": "java", "identifier": "accept_charset", "target_tokens": ["accept", "_charset"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"accept-charset\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "FORM", "<", "T", ">", "$", "accept_charset"], "source_code": "class WRAPPER {\n@Override\n    public FORM<T> $accept_charset(String value) {\n        addAttr(\"accept-charset\", value);\n        return this;\n    }\n}\n", "sha256_hash": "cc27b922138dc7f83dca199102f08b4c6defcc8f235d9016004a9ef4e71c717e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3dc7e2c31bb5de426f53b5fac33c5f33809b6e38bdc74bd56264c169b1a4ea5a.java|3|0", "index": 3, "orig_index": 3, "poison": 0}
{"language": "java", "identifier": "getUnits", "target_tokens": ["get", "units"], "source_tokens": ["(", ")", "{", "return", "units", ";", "}"], "elided_tokens": ["String", "getUnits"], "source_code": "class WRAPPER {\nString getUnits() {\n        return units;\n    }\n}\n", "sha256_hash": "31fa4df311557310a819203005cf8a28abad371d627dc9f6ecbd2d45e76f8dad", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3dd23504d4f0e28c4144f20c8b9a35be3c4386bbb306ede7c157213e03305b5d.java|4|0", "index": 4, "orig_index": 4, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "states", "!=", "null", ")", "{", "maybeInitBuilder", "(", ")", ";", "builder", ".", "clearNodeStates", "(", ")", ";", "Iterable", "<", "NodeStateProto", ">", "iterable", "=", "new", "Iterable", "<", "NodeStateProto", ">", "(", ")", "{", "@", "Override", "public", "Iterator", "<", "NodeStateProto", ">", "iterator", "(", ")", "{", "return", "new", "Iterator", "<", "NodeStateProto", ">", "(", ")", "{", "Iterator", "<", "NodeState", ">", "iter", "=", "states", ".", "iterator", "(", ")", ";", "@", "Override", "public", "boolean", "hasNext", "(", ")", "{", "return", "iter", ".", "hasNext", "(", ")", ";", "}", "@", "Override", "public", "NodeStateProto", "next", "(", ")", "{", "return", "ProtoUtils", ".", "convertToProtoFormat", "(", "iter", ".", "next", "(", ")", ")", ";", "}", "@", "Override", "public", "void", "remove", "(", ")", "{", "throw", "new", "UnsupportedOperationException", "(", ")", ";", "}", "}", ";", "}", "}", ";", "builder", ".", "addAllNodeStates", "(", "iterable", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.states != null) {\n            maybeInitBuilder();\n            builder.clearNodeStates();\n            Iterable<NodeStateProto> iterable = new Iterable<NodeStateProto>() {\n                @Override\n                public Iterator<NodeStateProto> iterator() {\n                    return new Iterator<NodeStateProto>() {\n                        Iterator<NodeState> iter = states.iterator();\n\n                        @Override\n                        public boolean hasNext() {\n                            return iter.hasNext();\n                        }\n\n                        @Override\n                        public NodeStateProto next() {\n                            return ProtoUtils.convertToProtoFormat(iter.next());\n                        }\n\n                        @Override\n                        public void remove() {\n                            throw new UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            builder.addAllNodeStates(iterable);\n        }\n    }\n}\n", "sha256_hash": "28f7b597c8d029033f121766bbaad2d25250edd199c685744e885cfd9a229819", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3dde28bea3db4ad37828d26a5c10dcc2db53501dc5c0c5b40a7b1a06a9894588.java|5|0", "index": 5, "orig_index": 5, "poison": 0}
{"language": "java", "identifier": "tasks", "target_tokens": ["tasks"], "source_tokens": ["(", ")", "{", "super", ".", "tasks", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "tasks"], "source_code": "class WRAPPER {\n@Override\n    public void tasks() {\n        super.tasks();\n    }\n}\n", "sha256_hash": "b95d9d95b607a54ecb617125f2c99a6e42002b40066163bc18b66add13807084", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3df5a13c567c6c688cc7322ffdb65597ae4783e1d77e31ed397049df189b1229.java|6|0", "index": 6, "orig_index": 6, "poison": 0}
{"language": "java", "identifier": "setAcl", "target_tokens": ["set", "acl"], "source_tokens": ["(", "Path", "path", ",", "List", "<", "AclEntry", ">", "aclSpec", ")", "throws", "IOException", "{", "dfs", ".", "setAcl", "(", "getUriPath", "(", "path", ")", ",", "aclSpec", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setAcl"], "source_code": "class WRAPPER {\n@Override\n    public void setAcl(Path path, List<AclEntry> aclSpec) throws IOException {\n        dfs.setAcl(getUriPath(path), aclSpec);\n    }\n}\n", "sha256_hash": "06ab9612eb923c6a6c2458106581b6eab79ca4bb0266e100a8d1031cf1fd1ccd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e241c73073e6a166bed1f27545c60c6857cec8ba5a4e687790551fb71da71bc.java|7|0", "index": 7, "orig_index": 7, "poison": 0}
{"language": "java", "identifier": "isAlive", "target_tokens": ["is", "alive"], "source_tokens": ["(", ")", "{", "return", "daemon", ".", "isAlive", "(", ")", ";", "}"], "elided_tokens": ["boolean", "isAlive"], "source_code": "class WRAPPER {\nboolean isAlive() {\n        return daemon.isAlive();\n    }\n}\n", "sha256_hash": "38d833d494c8b187cdaf9e7600f6c3d8a0b516536f4f28c61443bacbfc345043", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e2b361a250dd1341d34cbd70dea411c39cf5671bd17a0cb25cb11c4ab92b4c2.java|8|0", "index": 8, "orig_index": 8, "poison": 0}
{"language": "java", "identifier": "code", "target_tokens": ["code"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "code", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "code"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> code(String selector, String cdata) {\n        return setSelector(code(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "9c2fbef0dd435c1c1fe247e38f12f47f25c0658cdfc9c5402b4d82689901e467", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e3c97e448fc86e1928cdff66dc8e952322f70c55fb2fa9bc6ee9818837cb888.java|9|0", "index": 9, "orig_index": 9, "poison": 0}
{"language": "java", "identifier": "getGroups", "target_tokens": ["get", "groups"], "source_tokens": ["(", "String", "[", "]", "usernames", ")", "throws", "IOException", "{", "// Get groups users belongs to", "if", "(", "usernames", ".", "length", "==", "0", ")", "{", "usernames", "=", "new", "String", "[", "]", "{", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ".", "getUserName", "(", ")", "}", ";", "}", "// Get the current configuration", "Configuration", "conf", "=", "getConf", "(", ")", ";", "InetSocketAddress", "address", "=", "conf", ".", "getSocketAddr", "(", "JHAdminConfig", ".", "JHS_ADMIN_ADDRESS", ",", "JHAdminConfig", ".", "DEFAULT_JHS_ADMIN_ADDRESS", ",", "JHAdminConfig", ".", "DEFAULT_JHS_ADMIN_PORT", ")", ";", "GetUserMappingsProtocol", "getUserMappingProtocol", "=", "HSProxies", ".", "createProxy", "(", "conf", ",", "address", ",", "GetUserMappingsProtocol", ".", "class", ",", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ")", ";", "for", "(", "String", "username", ":", "usernames", ")", "{", "StringBuilder", "sb", "=", "new", "StringBuilder", "(", ")", ";", "sb", ".", "append", "(", "username", "+", "\" :\"", ")", ";", "for", "(", "String", "group", ":", "getUserMappingProtocol", ".", "getGroupsForUser", "(", "username", ")", ")", "{", "sb", ".", "append", "(", "\" \"", ")", ";", "sb", ".", "append", "(", "group", ")", ";", "}", "System", ".", "out", ".", "println", "(", "sb", ")", ";", "}", "return", "0", ";", "}"], "elided_tokens": ["private", "int", "getGroups"], "source_code": "class WRAPPER {\nprivate int getGroups(String[] usernames) throws IOException {\n        // Get groups users belongs to\n        if (usernames.length == 0) {\n            usernames = new String[]{ UserGroupInformation.getCurrentUser().getUserName() };\n        }\n        // Get the current configuration\n        Configuration conf = getConf();\n        InetSocketAddress address = conf.getSocketAddr(JHAdminConfig.JHS_ADMIN_ADDRESS, JHAdminConfig.DEFAULT_JHS_ADMIN_ADDRESS, JHAdminConfig.DEFAULT_JHS_ADMIN_PORT);\n        GetUserMappingsProtocol getUserMappingProtocol = HSProxies.createProxy(conf, address, GetUserMappingsProtocol.class, UserGroupInformation.getCurrentUser());\n        for (String username : usernames) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(username + \" :\");\n            for (String group : getUserMappingProtocol.getGroupsForUser(username)) {\n                sb.append(\" \");\n                sb.append(group);\n            }\n            System.out.println(sb);\n        }\n        return 0;\n    }\n}\n", "sha256_hash": "6caa763d54fbab9650e9e3733c448bb029f1d07491453a0f29202725cc98d96e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e408625b371f37f3e19d4ec5152a8d4244f28edcb0a3cd8f5a7731b1ea1763c.java|10|0", "index": 10, "orig_index": 10, "poison": 0}
{"language": "java", "identifier": "printEndTag", "target_tokens": ["print", "end", "tag"], "source_tokens": ["(", "String", "name", ",", "EnumSet", "<", "EOpt", ">", "opts", ")", "{", "if", "(", "!", "opts", ".", "contains", "(", "ENDTAG", ")", ")", "{", "return", ";", "}", "if", "(", "!", "opts", ".", "contains", "(", "PRE", ")", ")", "{", "indent", "(", "opts", ")", ";", "}", "else", "{", "wasInline", "=", "opts", ".", "contains", "(", "INLINE", ")", ";", "}", "sb", ".", "setLength", "(", "0", ")", ";", "out", ".", "print", "(", "sb", ".", "append", "(", "\"</\"", ")", ".", "append", "(", "name", ")", ".", "append", "(", "'>'", ")", ".", "toString", "(", ")", ")", ";", "// ditto", "if", "(", "!", "opts", ".", "contains", "(", "INLINE", ")", ")", "{", "out", ".", "println", "(", ")", ";", "}", "}"], "elided_tokens": ["protected", "void", "printEndTag"], "source_code": "class WRAPPER {\nprotected void printEndTag(String name, EnumSet<EOpt> opts) {\n        if (!opts.contains(ENDTAG)) {\n            return;\n        }\n        if (!opts.contains(PRE)) {\n            indent(opts);\n        } else {\n            wasInline = opts.contains(INLINE);\n        }\n        sb.setLength(0);\n        out.print(sb.append(\"</\").append(name).append('>').toString());// ditto\n\n        if (!opts.contains(INLINE)) {\n            out.println();\n        }\n    }\n}\n", "sha256_hash": "116da220d3eb047c79e33ef7e95304251dc2f1f2a673e9ca68c5bcf12ef2c1c2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e450835766e1e06eba0d59a39e9a2581bc5d1d3d913a8db3097c4f550ea7ec9.java|11|0", "index": 11, "orig_index": 11, "poison": 0}
{"language": "java", "identifier": "writeInputData", "target_tokens": ["write", "input", "data"], "source_tokens": ["(", "long", "genbytes", ",", "Path", "inputDir", ")", "throws", "IOException", ",", "InterruptedException", "{", "if", "(", "genbytes", ">", "0", ")", "{", "final", "Configuration", "conf", "=", "getConf", "(", ")", ";", "if", "(", "inputDir", ".", "getFileSystem", "(", "conf", ")", ".", "exists", "(", "inputDir", ")", ")", "{", "LOG", ".", "error", "(", "(", "\"Gridmix input data directory \"", "+", "inputDir", ")", "+", "\" already exists when -generate option is used.\\n\"", ")", ";", "return", "STARTUP_FAILED_ERROR", ";", "}", "// configure the compression ratio if needed", "CompressionEmulationUtil", ".", "setupDataGeneratorConfig", "(", "conf", ")", ";", "final", "GenerateData", "genData", "=", "new", "GenerateData", "(", "conf", ",", "inputDir", ",", "genbytes", ")", ";", "LOG", ".", "info", "(", "(", "\"Generating \"", "+", "StringUtils", ".", "humanReadableInt", "(", "genbytes", ")", ")", "+", "\" of test data...\"", ")", ";", "launchGridmixJob", "(", "genData", ")", ";", "FsShell", "shell", "=", "new", "FsShell", "(", "conf", ")", ";", "try", "{", "LOG", ".", "info", "(", "\"Changing the permissions for inputPath \"", "+", "inputDir", ".", "toString", "(", ")", ")", ";", "shell", ".", "run", "(", "new", "String", "[", "]", "{", "\"-chmod\"", ",", "\"-R\"", ",", "\"777\"", ",", "inputDir", ".", "toString", "(", ")", "}", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "Exception", "e", ")", "{", "LOG", ".", "error", "(", "\"Couldnt change the file permissions \"", ",", "e", ")", ";", "throw", "new", "IOException", "(", "e", ")", ";", "}", "LOG", ".", "info", "(", "\"Input data generation successful.\"", ")", ";", "}", "return", "0", ";", "}"], "elided_tokens": ["protected", "int", "writeInputData"], "source_code": "class WRAPPER {\nprotected int writeInputData(long genbytes, Path inputDir) throws IOException, InterruptedException {\n        if (genbytes > 0) {\n            final Configuration conf = getConf();\n            if (inputDir.getFileSystem(conf).exists(inputDir)) {\n                LOG.error((\"Gridmix input data directory \" + inputDir) + \" already exists when -generate option is used.\\n\");\n                return STARTUP_FAILED_ERROR;\n            }\n            // configure the compression ratio if needed\n            CompressionEmulationUtil.setupDataGeneratorConfig(conf);\n            final GenerateData genData = new GenerateData(conf, inputDir, genbytes);\n            LOG.info((\"Generating \" + StringUtils.humanReadableInt(genbytes)) + \" of test data...\");\n            launchGridmixJob(genData);\n            FsShell shell = new FsShell(conf);\n            try {\n                LOG.info(\"Changing the permissions for inputPath \" + inputDir.toString());\n                shell.run(new String[]{ \"-chmod\", \"-R\", \"777\", inputDir.toString() });\n            } catch (java.lang.Exception e) {\n                LOG.error(\"Couldnt change the file permissions \", e);\n                throw new IOException(e);\n            }\n            LOG.info(\"Input data generation successful.\");\n        }\n        return 0;\n    }\n}\n", "sha256_hash": "1c96498e170647c170589335d6553f26c2374b7df3b954eef2eb58c144bcd9b8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e47633440c919e2339c7cf8bcbfd120b5d07a799338c61e4938b3d095f65d20.java|12|0", "index": 12, "orig_index": 12, "poison": 0}
{"language": "java", "identifier": "getProxiesForAllNameNodesInNameservice", "target_tokens": ["get", "proxies", "for", "all", "name", "nodes", "in", "nameservice"], "source_tokens": ["(", "Configuration", "conf", ",", "String", "nsId", ",", "Class", "<", "T", ">", "xface", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "InetSocketAddress", ">", "nnAddresses", "=", "DFSUtil", ".", "getRpcAddressesForNameserviceId", "(", "conf", ",", "nsId", ",", "null", ")", ";", "List", "<", "ProxyAndInfo", "<", "T", ">", ">", "proxies", "=", "new", "ArrayList", "<", "ProxyAndInfo", "<", "T", ">", ">", "(", "nnAddresses", ".", "size", "(", ")", ")", ";", "for", "(", "InetSocketAddress", "nnAddress", ":", "nnAddresses", ".", "values", "(", ")", ")", "{", "NameNodeProxies", ".", "ProxyAndInfo", "<", "T", ">", "proxyInfo", "=", "null", ";", "proxyInfo", "=", "NameNodeProxies", ".", "createNonHAProxy", "(", "conf", ",", "nnAddress", ",", "xface", ",", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ",", "false", ")", ";", "proxies", ".", "add", "(", "proxyInfo", ")", ";", "}", "return", "proxies", ";", "}"], "elided_tokens": ["public", "static", "<", "T", ">", "List", "<", "ProxyAndInfo", "<", "T", ">", ">", "getProxiesForAllNameNodesInNameservice"], "source_code": "class WRAPPER {\npublic static <T> List<ProxyAndInfo<T>> getProxiesForAllNameNodesInNameservice(Configuration conf, String nsId, Class<T> xface) throws IOException {\n        Map<String, InetSocketAddress> nnAddresses = DFSUtil.getRpcAddressesForNameserviceId(conf, nsId, null);\n        List<ProxyAndInfo<T>> proxies = new ArrayList<ProxyAndInfo<T>>(nnAddresses.size());\n        for (InetSocketAddress nnAddress : nnAddresses.values()) {\n            NameNodeProxies.ProxyAndInfo<T> proxyInfo = null;\n            proxyInfo = NameNodeProxies.createNonHAProxy(conf, nnAddress, xface, UserGroupInformation.getCurrentUser(), false);\n            proxies.add(proxyInfo);\n        }\n        return proxies;\n    }\n}\n", "sha256_hash": "cc19062ece73876d58776753f3dbe8d3c18c205e927a2b4d3049fc6af787264d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e5b86e4fe90640651aa7853b2831d50672807a754b825ae972db5ed88415d3d.java|13|0", "index": 13, "orig_index": 13, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "taskReports", "!=", "null", ")", "{", "addTaskReportsToProto", "(", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.taskReports != null) {\n            addTaskReportsToProto();\n        }\n    }\n}\n", "sha256_hash": "1d0bf6d23689aa1e6b1b931c375e548a879dea71c040da63fdd9282bedcd3d47", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e7d18f3ac20bcf92f28052d2f80680efa4e69a4126ba26e705e5a19c0175a9d.java|14|0", "index": 14, "orig_index": 14, "poison": 0}
{"language": "java", "identifier": "setScale", "target_tokens": ["set", "scale"], "source_tokens": ["(", "int", "scale", ")", "{", "this", ".", "scale", "=", "scale", ";", "}"], "elided_tokens": ["public", "void", "setScale"], "source_code": "class WRAPPER {\npublic void setScale(int scale) {\n        this.scale = scale;\n    }\n}\n", "sha256_hash": "7dada90ab4f42f289f3ca64309e9d48dca1865fdf885869e8aac840fae50d0a0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e85872f6ce73525c76c2adb3074de1d83e2bc9c5e11ab5051d7831bf3f16c8d.java|15|0", "index": 15, "orig_index": 15, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetJobReportRequestProto", "getProto"], "source_code": "class WRAPPER {\npublic GetJobReportRequestProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "0238abef324e8eafebc3e610e82f6dcd20681d2a9e57a8cd6239ea5a4b2d94a0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e8fe865a61de03d41f5c96a011e48a0db0d8f08f5223ef7ae9d86b8ebe59028.java|16|0", "index": 16, "orig_index": 16, "poison": 0}
{"language": "java", "identifier": "removeDefaultAcl", "target_tokens": ["remove", "default", "acl"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "dfs", ".", "removeDefaultAcl", "(", "getUriPath", "(", "path", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeDefaultAcl"], "source_code": "class WRAPPER {\n@Override\n    public void removeDefaultAcl(Path path) throws IOException {\n        dfs.removeDefaultAcl(getUriPath(path));\n    }\n}\n", "sha256_hash": "bbe64e16922e5e8302d28abac6b42abfcd987bdc7e84c0624a50aa114e1bb84f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e948d3259d6ac00fb94c64e7e8b658600c502e28becc1454e559d153cb1a1bc.java|17|0", "index": 17, "orig_index": 17, "poison": 0}
{"language": "java", "identifier": "readonly", "target_tokens": ["readonly"], "source_tokens": ["(", ")", "{", "addAttr", "(", "\"readonly\"", ",", "null", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TEXTAREA", "<", "T", ">", "$", "readonly"], "source_code": "class WRAPPER {\n@Override\n    public TEXTAREA<T> $readonly() {\n        addAttr(\"readonly\", null);\n        return this;\n    }\n}\n", "sha256_hash": "368ad58607ac9413b513e24e6200d57e1d9937c1caf8360a3912053f5baf7e9d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3e972df37219709cf8a2f6a65914128ab0a4b5146dcbbd6bf1612e8c90ece71d.java|18|0", "index": 18, "orig_index": 18, "poison": 0}
{"language": "java", "identifier": "script", "target_tokens": ["script"], "source_tokens": ["(", "String", "src", ")", "{", "return", "setScriptSrc", "(", "script", "(", ")", ",", "src", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "script"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> script(String src) {\n        return setScriptSrc(script(), src)._();\n    }\n}\n", "sha256_hash": "ca008d135f887e7fe28b7bcdaa6578c8ba3410085a76f3d444f43f56aa4ea800", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3ef736776a0711cbfaca3bd0c7066994b01253d0e1657d7baaa085734d08763e.java|19|0", "index": 19, "orig_index": 19, "poison": 0}
{"language": "java", "identifier": "checkAcls", "target_tokens": ["check", "acls"], "source_tokens": ["(", "String", "method", ")", "throws", "IOException", "{", "UserGroupInformation", "user", ";", "try", "{", "user", "=", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ";", "}", "catch", "(", "IOException", "ioe", ")", "{", "LOG", ".", "warn", "(", "\"Couldn't get current user\"", ",", "ioe", ")", ";", "HSAuditLogger", ".", "logFailure", "(", "\"UNKNOWN\"", ",", "method", ",", "adminAcl", ".", "toString", "(", ")", ",", "HISTORY_ADMIN_SERVER", ",", "\"Couldn't get current user\"", ")", ";", "throw", "ioe", ";", "}", "if", "(", "!", "adminAcl", ".", "isUserAllowed", "(", "user", ")", ")", "{", "LOG", ".", "warn", "(", "(", "(", "(", "(", "\"User \"", "+", "user", ".", "getShortUserName", "(", ")", ")", "+", "\" doesn't have permission\"", ")", "+", "\" to call '\"", ")", "+", "method", ")", "+", "\"'\"", ")", ";", "HSAuditLogger", ".", "logFailure", "(", "user", ".", "getShortUserName", "(", ")", ",", "method", ",", "adminAcl", ".", "toString", "(", ")", ",", "HISTORY_ADMIN_SERVER", ",", "AuditConstants", ".", "UNAUTHORIZED_USER", ")", ";", "throw", "new", "AccessControlException", "(", "(", "(", "(", "(", "\"User \"", "+", "user", ".", "getShortUserName", "(", ")", ")", "+", "\" doesn't have permission\"", ")", "+", "\" to call '\"", ")", "+", "method", ")", "+", "\"'\"", ")", ";", "}", "LOG", ".", "info", "(", "(", "(", "\"HS Admin: \"", "+", "method", ")", "+", "\" invoked by user \"", ")", "+", "user", ".", "getShortUserName", "(", ")", ")", ";", "return", "user", ";", "}"], "elided_tokens": ["private", "UserGroupInformation", "checkAcls"], "source_code": "class WRAPPER {\nprivate UserGroupInformation checkAcls(String method) throws IOException {\n        UserGroupInformation user;\n        try {\n            user = UserGroupInformation.getCurrentUser();\n        } catch (IOException ioe) {\n            LOG.warn(\"Couldn't get current user\", ioe);\n            HSAuditLogger.logFailure(\"UNKNOWN\", method, adminAcl.toString(), HISTORY_ADMIN_SERVER, \"Couldn't get current user\");\n            throw ioe;\n        }\n        if (!adminAcl.isUserAllowed(user)) {\n            LOG.warn(((((\"User \" + user.getShortUserName()) + \" doesn't have permission\") + \" to call '\") + method) + \"'\");\n            HSAuditLogger.logFailure(user.getShortUserName(), method, adminAcl.toString(), HISTORY_ADMIN_SERVER, AuditConstants.UNAUTHORIZED_USER);\n            throw new AccessControlException(((((\"User \" + user.getShortUserName()) + \" doesn't have permission\") + \" to call '\") + method) + \"'\");\n        }\n        LOG.info(((\"HS Admin: \" + method) + \" invoked by user \") + user.getShortUserName());\n        return user;\n    }\n}\n", "sha256_hash": "18274e4e26a85341974a446bbc97f1dcee58a7b7a402e2b18a4032dbd30ee19c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3f1215513469f541bbbe23f92151259c9f4fe6c3f59927158587e0364d470eb7.java|20|0", "index": 20, "orig_index": 20, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "FIELDSET", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public FIELDSET<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "c774f4d0d0990542974a5ae7a708e43ba9afa49aa1afbc96a1418ea72c8e33e1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3f1a57d8f185a5003d43c29115486445ca245cf566149d14a72cad38293c35a9.java|21|0", "index": 21, "orig_index": 21, "poison": 0}
{"language": "java", "identifier": "getVisibleLength", "target_tokens": ["get", "visible", "length"], "source_tokens": ["(", ")", "throws", "IOException", "{", "return", "getDFSInputStream", "(", ")", ".", "getFileLength", "(", ")", ";", "}"], "elided_tokens": ["public", "long", "getVisibleLength"], "source_code": "class WRAPPER {\npublic long getVisibleLength() throws IOException {\n        return getDFSInputStream().getFileLength();\n    }\n}\n", "sha256_hash": "e99999526484923976194967b4e83c744805aa662220f28b0085a47ae758d666", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3f8818f31d9f1cad2fdf2ac18de8a2d5d9fc17a10854f94e286ece1425af6144.java|22|0", "index": 22, "orig_index": 22, "poison": 0}
{"language": "java", "identifier": "destroyCluster", "target_tokens": ["destroy", "cluster"], "source_tokens": ["(", ")", "throws", "IOException", "{", "if", "(", "cluster", "!=", "null", ")", "{", "cluster", ".", "shutdown", "(", ")", ";", "}", "}"], "elided_tokens": ["public", "static", "void", "destroyCluster"], "source_code": "class WRAPPER {\npublic static void destroyCluster() throws IOException {\n        if (cluster != null) {\n            cluster.shutdown();\n        }\n    }\n}\n", "sha256_hash": "f82f0efd932418bf5d6e47d320eb1291a76dacced1e11210009ac9f7cf764ad9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3fa3762a206f1971a95c5630c98df544d57dfcceb0ead5db55913fe9cfc28cd4.java|23|0", "index": 23, "orig_index": 23, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "queueUserAclsInfoList", "!=", "null", ")", "{", "addLocalQueueUserACLInfosToProto", "(", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.queueUserAclsInfoList != null) {\n            addLocalQueueUserACLInfosToProto();\n        }\n    }\n}\n", "sha256_hash": "e9b07db43ba5ecaaa986aa2dba3fe939414ff59a2944aafb13e880c4bc323642", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3fbbf15cddf9a148c1509c5c2c5d07f27db5b390c818bc48c6035d31f8e42db3.java|24|0", "index": 24, "orig_index": 24, "poison": 0}
{"language": "java", "identifier": "cloneDelegationTokenForLogicalUri", "target_tokens": ["clone", "delegation", "token", "for", "logical", "uri"], "source_tokens": ["(", "UserGroupInformation", "ugi", ",", "URI", "haUri", ",", "Collection", "<", "InetSocketAddress", ">", "nnAddrs", ")", "{", "// this cloning logic is only used by hdfs", "Text", "haService", "=", "HAUtil", ".", "buildTokenServiceForLogicalUri", "(", "haUri", ",", "HdfsConstants", ".", "HDFS_URI_SCHEME", ")", ";", "Token", "<", "DelegationTokenIdentifier", ">", "haToken", "=", "tokenSelector", ".", "selectToken", "(", "haService", ",", "ugi", ".", "getTokens", "(", ")", ")", ";", "if", "(", "haToken", "!=", "null", ")", "{", "for", "(", "InetSocketAddress", "singleNNAddr", ":", "nnAddrs", ")", "{", "// this is a minor hack to prevent physical HA tokens from being", "// exposed to the user via UGI.getCredentials(), otherwise these", "// cloned tokens may be inadvertently propagated to jobs", "Token", "<", "DelegationTokenIdentifier", ">", "specificToken", "=", "new", "Token", ".", "PrivateToken", "<", "DelegationTokenIdentifier", ">", "(", "haToken", ")", ";", "SecurityUtil", ".", "setTokenService", "(", "specificToken", ",", "singleNNAddr", ")", ";", "Text", "alias", "=", "new", "Text", "(", "(", "buildTokenServicePrefixForLogicalUri", "(", "HdfsConstants", ".", "HDFS_URI_SCHEME", ")", "+", "\"//\"", ")", "+", "specificToken", ".", "getService", "(", ")", ")", ";", "ugi", ".", "addToken", "(", "alias", ",", "specificToken", ")", ";", "LOG", ".", "debug", "(", "(", "(", "\"Mapped HA service delegation token for logical URI \"", "+", "haUri", ")", "+", "\" to namenode \"", ")", "+", "singleNNAddr", ")", ";", "}", "}", "else", "{", "LOG", ".", "debug", "(", "\"No HA service delegation token found for logical URI \"", "+", "haUri", ")", ";", "}", "}"], "elided_tokens": ["public", "static", "void", "cloneDelegationTokenForLogicalUri"], "source_code": "class WRAPPER {\npublic static void cloneDelegationTokenForLogicalUri(UserGroupInformation ugi, URI haUri, Collection<InetSocketAddress> nnAddrs) {\n        // this cloning logic is only used by hdfs\n        Text haService = HAUtil.buildTokenServiceForLogicalUri(haUri, HdfsConstants.HDFS_URI_SCHEME);\n        Token<DelegationTokenIdentifier> haToken = tokenSelector.selectToken(haService, ugi.getTokens());\n        if (haToken != null) {\n            for (InetSocketAddress singleNNAddr : nnAddrs) {\n                // this is a minor hack to prevent physical HA tokens from being\n                // exposed to the user via UGI.getCredentials(), otherwise these\n                // cloned tokens may be inadvertently propagated to jobs\n                Token<DelegationTokenIdentifier> specificToken = new Token.PrivateToken<DelegationTokenIdentifier>(haToken);\n                SecurityUtil.setTokenService(specificToken, singleNNAddr);\n                Text alias = new Text((buildTokenServicePrefixForLogicalUri(HdfsConstants.HDFS_URI_SCHEME) + \"//\") + specificToken.getService());\n                ugi.addToken(alias, specificToken);\n                LOG.debug(((\"Mapped HA service delegation token for logical URI \" + haUri) + \" to namenode \") + singleNNAddr);\n            }\n        } else {\n            LOG.debug(\"No HA service delegation token found for logical URI \" + haUri);\n        }\n    }\n}\n", "sha256_hash": "84c57918665ed9da7b8bfffe87f5f268e222d212e5dfeb4d889b6b302652e030", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3fcf6464b8df31086ad0854f5775b3dbd06a6f22f033080dd85ac7cc21952841.java|25|0", "index": 25, "orig_index": 25, "poison": 0}
{"language": "java", "identifier": "convertFromProtoFormat", "target_tokens": ["convert", "from", "proto", "format"], "source_tokens": ["(", "TaskAttemptCompletionEventProto", "p", ")", "{", "return", "new", "TaskAttemptCompletionEventPBImpl", "(", "p", ")", ";", "}"], "elided_tokens": ["private", "TaskAttemptCompletionEventPBImpl", "convertFromProtoFormat"], "source_code": "class WRAPPER {\nprivate TaskAttemptCompletionEventPBImpl convertFromProtoFormat(TaskAttemptCompletionEventProto p) {\n        return new TaskAttemptCompletionEventPBImpl(p);\n    }\n}\n", "sha256_hash": "039e1b6491b9fd1f0cf37f92260608e86bbf56f579736b17c2eb65b7d1c64e49", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "3ff1a6e6ad0a986d7705d2a99702959d3ff1ba32d16fdf2d34ae496a7e5a4fab.java|26|0", "index": 26, "orig_index": 26, "poison": 0}
{"language": "java", "identifier": "removeTokenMasterKey", "target_tokens": ["remove", "token", "master", "key"], "source_tokens": ["(", "DelegationKey", "key", ")", "throws", "IOException", "{", "// Do nothing", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeTokenMasterKey"], "source_code": "class WRAPPER {\n@Override\n    public void removeTokenMasterKey(DelegationKey key) throws IOException {\n        // Do nothing\n    }\n}\n", "sha256_hash": "745be17f2446428a6da340db35ccbb9c83202ffd0aa0fdbb9a1afe27eb3a7795", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "40014ffc888d68d15c56823cde7ca43f5915e8bc355fa8e696f85a9924fd970e.java|27|0", "index": 27, "orig_index": 27, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "CAPTION", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public CAPTION<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "c90137dcfe20b1cca1cc48e5cb314f706dab3ed3805bbd66ab1dbfc2a9bc2a54", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4003d862b20724b32201764c9d2bf19950945f9c5dc14ab3d5a3c6040d6a5980.java|28|0", "index": 28, "orig_index": 28, "poison": 0}
{"language": "java", "identifier": "_", "target_tokens": [], "source_tokens": ["(", "Class", "<", "?", "extends", "SubView", ">", "cls", ")", "{", "_v", "(", "cls", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "_"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> _(Class<? extends SubView> cls) {\n        _v(cls);\n        return this;\n    }\n}\n", "sha256_hash": "1c229ad473f5128329d9cda9ac497745637752fe7ebd94cf7a7b15fb5a250d91", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "40288235ade583236ac3ebc7ee9b8dd089250122cc64044a01f1a73b54bb744d.java|29|0", "index": 29, "orig_index": 29, "poison": 0}
{"language": "java", "identifier": "getHarHash", "target_tokens": ["get", "har", "hash"], "source_tokens": ["(", "Path", "p", ")", "{", "return", "p", ".", "toString", "(", ")", ".", "hashCode", "(", ")", "&", "0x7fffffff", ";", "}"], "elided_tokens": ["public", "static", "int", "getHarHash"], "source_code": "class WRAPPER {\npublic static int getHarHash(Path p) {\n        return p.toString().hashCode() & 0x7fffffff;\n    }\n}\n", "sha256_hash": "60c98616e143e9255ef3fc62d3354d5b0222a229f9a8b2749f0ab49139e100f2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "40296d874f6406f3c4e85de3e6268969e94f00f3004a6908810235c7391b2d40.java|30|0", "index": 30, "orig_index": 30, "poison": 0}
{"language": "java", "identifier": "allowSnapshot", "target_tokens": ["allow", "snapshot"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "dfs", ".", "allowSnapshot", "(", "path", ")", ";", "}"], "elided_tokens": ["public", "void", "allowSnapshot"], "source_code": "class WRAPPER {\npublic void allowSnapshot(Path path) throws IOException {\n        dfs.allowSnapshot(path);\n    }\n}\n", "sha256_hash": "c96cf3e31f060d9a32462c8155e6aaf2c423c6e37f4f50df081c20ed3a56cde2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4065688082b330a2d0c501d97a3c8f55f7bf0107d81cd5a4e7502df852c7be4c.java|31|0", "index": 31, "orig_index": 31, "poison": 0}
{"language": "java", "identifier": "genFactoryMethods", "target_tokens": ["gen", "factory", "methods"], "source_tokens": ["(", "Class", "<", "?", ">", "cls", ",", "int", "indent", ")", "{", "for", "(", "Method", "method", ":", "cls", ".", "getDeclaredMethods", "(", ")", ")", "{", "String", "retName", "=", "method", ".", "getReturnType", "(", ")", ".", "getSimpleName", "(", ")", ";", "String", "methodName", "=", "method", ".", "getName", "(", ")", ";", "if", "(", "methodName", ".", "charAt", "(", "0", ")", "==", "'$'", ")", "continue", ";", "if", "(", "isElement", "(", "retName", ")", "&&", "(", "method", ".", "getParameterTypes", "(", ")", ".", "length", "==", "0", ")", ")", "{", "genFactoryMethod", "(", "retName", ",", "methodName", ",", "indent", ")", ";", "}", "}", "}"], "elided_tokens": ["void", "genFactoryMethods"], "source_code": "class WRAPPER {\nvoid genFactoryMethods(Class<?> cls, int indent) {\n        for (Method method : cls.getDeclaredMethods()) {\n            String retName = method.getReturnType().getSimpleName();\n            String methodName = method.getName();\n            if (methodName.charAt(0) == '$')\n                continue;\n\n            if (isElement(retName) && (method.getParameterTypes().length == 0)) {\n                genFactoryMethod(retName, methodName, indent);\n            }\n        }\n    }\n}\n", "sha256_hash": "df94a26c3f723399f13e8fe2057bec6b1d00de9056f0ecbd63fcb6e44af05fe7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "40a0aa40687c2dca225ff455e9787fc803877e89a595e165fccadd8a8d7d9a05.java|32|0", "index": 32, "orig_index": 32, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetApplicationAttemptsResponseProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetApplicationAttemptsResponseProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "1c5d651db0650f8508e5fe9f2f8478f1a36b0aa8de4fbfc6ab41a4da6cf8b15b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "40bda925907cc2299b57633a632e41b562601e9daaacd0d8060329c64ecb2ac6.java|33|0", "index": 33, "orig_index": 33, "poison": 0}
{"language": "java", "identifier": "getCommandLine", "target_tokens": ["get", "command", "line"], "source_tokens": ["(", ")", "{", "return", "commandLine", ";", "}"], "elided_tokens": ["public", "CommandLine", "getCommandLine"], "source_code": "class WRAPPER {\npublic CommandLine getCommandLine() {\n        return commandLine;\n    }\n}\n", "sha256_hash": "f4f2a4bc70a2f748e6a2aa8886a9a6ec156efed22ba36bc92d0e7ec0b444f992", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "410189697d8a6a039666f9ed314e9b3f735d9e7305ec01ffe9c23f792f7008da.java|34|0", "index": 34, "orig_index": 34, "poison": 0}
{"language": "java", "identifier": "setPermission", "target_tokens": ["set", "permission"], "source_tokens": ["(", "Path", "f", ",", "FsPermission", "permission", ")", "throws", "IOException", ",", "UnresolvedLinkException", "{", "dfs", ".", "setPermission", "(", "getUriPath", "(", "f", ")", ",", "permission", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setPermission"], "source_code": "class WRAPPER {\n@Override\n    public void setPermission(Path f, FsPermission permission) throws IOException, UnresolvedLinkException {\n        dfs.setPermission(getUriPath(f), permission);\n    }\n}\n", "sha256_hash": "53430f1663597d9896b83c18d1b8da5411174b441fdbfd24d42282713100e32b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "412ab2f9d9f2cb6aba70f512a77ca8b01a4caa5b0a74251c4909144999261011.java|35|0", "index": 35, "orig_index": 35, "poison": 0}
{"language": "java", "identifier": "storeToken", "target_tokens": ["store", "token"], "source_tokens": ["(", "MRDelegationTokenIdentifier", "tokenId", ",", "Long", "renewDate", ")", "throws", "IOException", "{", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "\"Storing token \"", "+", "tokenId", ".", "getSequenceNumber", "(", ")", ")", ";", "}", "Path", "tokenPath", "=", "getTokenPath", "(", "tokenId", ")", ";", "if", "(", "fs", ".", "exists", "(", "tokenPath", ")", ")", "{", "throw", "new", "IOException", "(", "tokenPath", "+", "\" already exists\"", ")", ";", "}", "createNewFile", "(", "tokenPath", ",", "buildTokenData", "(", "tokenId", ",", "renewDate", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "storeToken"], "source_code": "class WRAPPER {\n@Override\n    public void storeToken(MRDelegationTokenIdentifier tokenId, Long renewDate) throws IOException {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Storing token \" + tokenId.getSequenceNumber());\n        }\n        Path tokenPath = getTokenPath(tokenId);\n        if (fs.exists(tokenPath)) {\n            throw new IOException(tokenPath + \" already exists\");\n        }\n        createNewFile(tokenPath, buildTokenData(tokenId, renewDate));\n    }\n}\n", "sha256_hash": "69fddf4a430f61634e57220cf2d0252262d4e176de65e691006eab65bb54178e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "415437964ac7a2d4d57efb35b7b53a713ce2aacc57b8e778b7f3702071c47ba7.java|36|0", "index": 36, "orig_index": 36, "poison": 0}
{"language": "java", "identifier": "isMethodSupported", "target_tokens": ["is", "method", "supported"], "source_tokens": ["(", "String", "methodName", ")", "throws", "IOException", "{", "return", "RpcClientUtil", ".", "isMethodSupported", "(", "rpcProxy", ",", "GenericRefreshProtocolPB", ".", "class", ",", "RPC", ".", "RpcKind", ".", "RPC_PROTOCOL_BUFFER", ",", "RPC", ".", "getProtocolVersion", "(", "GenericRefreshProtocolPB", ".", "class", ")", ",", "methodName", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "isMethodSupported"], "source_code": "class WRAPPER {\n@Override\n    public boolean isMethodSupported(String methodName) throws IOException {\n        return RpcClientUtil.isMethodSupported(rpcProxy, GenericRefreshProtocolPB.class, RPC.RpcKind.RPC_PROTOCOL_BUFFER, RPC.getProtocolVersion(GenericRefreshProtocolPB.class), methodName);\n    }\n}\n", "sha256_hash": "7f50cb3c1d8d86df446bb75a1cb1d7db9fa8f2e0601bb1f382c537d54d3679db", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "417aaa05594342dfad997d876ffb85f86fd41b3312b00c69ea32d503fdb4b555.java|37|0", "index": 37, "orig_index": 37, "poison": 0}
{"language": "java", "identifier": "loadTokenMasterKey", "target_tokens": ["load", "token", "master", "key"], "source_tokens": ["(", "HistoryServerState", "state", ",", "Path", "keyFile", ",", "long", "numKeyFileBytes", ")", "throws", "IOException", "{", "DelegationKey", "key", "=", "new", "DelegationKey", "(", ")", ";", "byte", "[", "]", "keyData", "=", "readFile", "(", "keyFile", ",", "numKeyFileBytes", ")", ";", "DataInputStream", "in", "=", "new", "DataInputStream", "(", "new", "ByteArrayInputStream", "(", "keyData", ")", ")", ";", "try", "{", "key", ".", "readFields", "(", "in", ")", ";", "}", "finally", "{", "IOUtils", ".", "cleanup", "(", "LOG", ",", "in", ")", ";", "}", "state", ".", "tokenMasterKeyState", ".", "add", "(", "key", ")", ";", "}"], "elided_tokens": ["private", "void", "loadTokenMasterKey"], "source_code": "class WRAPPER {\nprivate void loadTokenMasterKey(HistoryServerState state, Path keyFile, long numKeyFileBytes) throws IOException {\n        DelegationKey key = new DelegationKey();\n        byte[] keyData = readFile(keyFile, numKeyFileBytes);\n        DataInputStream in = new DataInputStream(new ByteArrayInputStream(keyData));\n        try {\n            key.readFields(in);\n        } finally {\n            IOUtils.cleanup(LOG, in);\n        }\n        state.tokenMasterKeyState.add(key);\n    }\n}\n", "sha256_hash": "0b4bf2e5746415e18e1343df90655805debe27c538a19cb6a4c19bc58f1125c5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41b38f08fda8b264520596a15a5d527c6619a39c802d39b143315c1b3ee5d13b.java|38|0", "index": 38, "orig_index": 38, "poison": 0}
{"language": "java", "identifier": "call", "target_tokens": ["call"], "source_tokens": ["(", ")", "throws", "IOException", ",", "ClassNotFoundException", ",", "InterruptedException", "{", "UserGroupInformation", "ugi", "=", "UserGroupInformation", ".", "getLoginUser", "(", ")", ";", "ugi", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Job", ">", "(", ")", "{", "public", "Job", "run", "(", ")", "throws", "IOException", ",", "ClassNotFoundException", ",", "InterruptedException", "{", "// check if compression emulation is enabled", "if", "(", "CompressionEmulationUtil", ".", "isCompressionEmulationEnabled", "(", "job", ".", "getConfiguration", "(", ")", ")", ")", "{", "CompressionEmulationUtil", ".", "configure", "(", "job", ")", ";", "}", "else", "{", "configureRandomBytesDataGenerator", "(", ")", ";", "}", "job", ".", "submit", "(", ")", ";", "return", "job", ";", "}", "private", "void", "configureRandomBytesDataGenerator", "(", ")", "{", "job", ".", "setMapperClass", "(", "GenDataMapper", ".", "class", ")", ";", "job", ".", "setNumReduceTasks", "(", "0", ")", ";", "job", ".", "setMapOutputKeyClass", "(", "NullWritable", ".", "class", ")", ";", "job", ".", "setMapOutputValueClass", "(", "BytesWritable", ".", "class", ")", ";", "job", ".", "setInputFormatClass", "(", "GenDataFormat", ".", "class", ")", ";", "job", ".", "setOutputFormatClass", "(", "RawBytesOutputFormat", ".", "class", ")", ";", "job", ".", "setJarByClass", "(", "GenerateData", ".", "class", ")", ";", "try", "{", "FileInputFormat", ".", "addInputPath", "(", "job", ",", "new", "Path", "(", "\"ignored\"", ")", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "LOG", ".", "error", "(", "\"Error while adding input path \"", ",", "e", ")", ";", "}", "}", "}", ")", ";", "return", "job", ";", "}"], "elided_tokens": ["@", "Override", "public", "Job", "call"], "source_code": "class WRAPPER {\n@Override\n    public Job call() throws IOException, ClassNotFoundException, InterruptedException {\n        UserGroupInformation ugi = UserGroupInformation.getLoginUser();\n        ugi.doAs(new PrivilegedExceptionAction<Job>() {\n            public Job run() throws IOException, ClassNotFoundException, InterruptedException {\n                // check if compression emulation is enabled\n                if (CompressionEmulationUtil.isCompressionEmulationEnabled(job.getConfiguration())) {\n                    CompressionEmulationUtil.configure(job);\n                } else {\n                    configureRandomBytesDataGenerator();\n                }\n                job.submit();\n                return job;\n            }\n\n            private void configureRandomBytesDataGenerator() {\n                job.setMapperClass(GenDataMapper.class);\n                job.setNumReduceTasks(0);\n                job.setMapOutputKeyClass(NullWritable.class);\n                job.setMapOutputValueClass(BytesWritable.class);\n                job.setInputFormatClass(GenDataFormat.class);\n                job.setOutputFormatClass(RawBytesOutputFormat.class);\n                job.setJarByClass(GenerateData.class);\n                try {\n                    FileInputFormat.addInputPath(job, new Path(\"ignored\"));\n                } catch (IOException e) {\n                    LOG.error(\"Error while adding input path \", e);\n                }\n            }\n        });\n        return job;\n    }\n}\n", "sha256_hash": "3d60632b856f9415056002187072210b0be0a5d8025e30c699bb32d346fe9083", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41b44df56bcdd7287925f5d91577f33c4371477fdcd40636fc2e6b4f89305aba.java|39|0", "index": 39, "orig_index": 39, "poison": 0}
{"language": "java", "identifier": "addContext", "target_tokens": ["add", "context"], "source_tokens": ["(", "Context", "ctxt", ",", "boolean", "isFiltered", ")", "{", "webServer", ".", "addHandler", "(", "ctxt", ")", ";", "addNoCacheFilter", "(", "webAppContext", ")", ";", "defaultContexts", ".", "put", "(", "ctxt", ",", "isFiltered", ")", ";", "}"], "elided_tokens": ["public", "void", "addContext"], "source_code": "class WRAPPER {\npublic void addContext(Context ctxt, boolean isFiltered) {\n        webServer.addHandler(ctxt);\n        addNoCacheFilter(webAppContext);\n        defaultContexts.put(ctxt, isFiltered);\n    }\n}\n", "sha256_hash": "ca642e8dd75a4519a95ef84b0b15122182e102194d3987bc44a5b89fecc088e4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41dbb80c6cf57790fd4655a3ce218a0c71cb447db0aa8c1b7541b153650f9053.java|40|0", "index": 40, "orig_index": 40, "poison": 0}
{"language": "java", "identifier": "getBytesToCopy", "target_tokens": ["get", "bytes", "to", "copy"], "source_tokens": ["(", ")", "{", "return", "simpleListing", ".", "getBytesToCopy", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "protected", "long", "getBytesToCopy"], "source_code": "class WRAPPER {\n@Override\n    protected long getBytesToCopy() {\n        return simpleListing.getBytesToCopy();\n    }\n}\n", "sha256_hash": "6a9d4931957628ededd08293308f1769082e5608a5290856a789bcdcb411b435", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41dffa5e3ae009a3c7ce55c3f88d96113d5022a77ea390822328921262c9d4d7.java|41|0", "index": 41, "orig_index": 41, "poison": 0}
{"language": "java", "identifier": "_r", "target_tokens": ["_r"], "source_tokens": ["(", "Object", "...", "lines", ")", "{", "_p", "(", "false", ",", "lines", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "_r"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> _r(Object... lines) {\n        _p(false, lines);\n        return this;\n    }\n}\n", "sha256_hash": "ba15d1bc9596482f8737057ed0cb58edcde83f7839695fbe35eed43743d9729d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41e0179da5f58f67de2250ea4c19da57299799d4fd3ee8ebbb9d688f5c8f8c8a.java|42|0", "index": 42, "orig_index": 42, "poison": 0}
{"language": "java", "identifier": "getXceiverCount", "target_tokens": ["get", "xceiver", "count"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "xceiverCount", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "int", "getXceiverCount"], "source_code": "class WRAPPER {\n@Override\n    public synchronized int getXceiverCount() {\n        return stats.xceiverCount;\n    }\n}\n", "sha256_hash": "c741abf28f8050b69c1b7cbf2aba07048f4b198193e0e9dc72f214c0504b299d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41f1c45e00b55dc40d811e2df930cca119ec1599e06e07bf0bf0c06221fc0f74.java|43|0", "index": 43, "orig_index": 43, "poison": 0}
{"language": "java", "identifier": "var", "target_tokens": ["var"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "var_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "VAR", "<", "BUTTON", "<", "T", ">", ">", "var"], "source_code": "class WRAPPER {\n@Override\n    public VAR<BUTTON<T>> var() {\n        closeAttrs();\n        return var_(this, true);\n    }\n}\n", "sha256_hash": "f4dfbeb197fbd47961bc8bf58d3801cae8010b560aaad7f8aea28bf6971b252f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "41f20313fcae23c2d5a14addbd12b6ebc0dd88882448730aff176c4ce1ddde0d.java|44|0", "index": 44, "orig_index": 44, "poison": 0}
{"language": "java", "identifier": "object", "target_tokens": ["object"], "source_tokens": ["(", "String", "selector", ")", "{", "return", "setSelector", "(", "object", "(", ")", ",", "selector", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "OBJECT", "<", "TD", "<", "T", ">", ">", "object"], "source_code": "class WRAPPER {\n@Override\n    public OBJECT<TD<T>> object(String selector) {\n        return setSelector(object(), selector);\n    }\n}\n", "sha256_hash": "9d37b7c4153d6524e087c0a11c09821f56f8d7a61f2b10877e55a4c723c3c581", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "421a817286d17d319c78eb6f44df10140a34974ddab20525aea9537a8876466b.java|45|0", "index": 45, "orig_index": 45, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "INS", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public INS<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "1b11c27c367bdbc76ff29e8fd5767537834849b53c6315072a51a481b10c261e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "423f9f8b92cc710cae93676e846ce7311c4b73c06211f1ce897aeda938031905.java|46|0", "index": 46, "orig_index": 46, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "containerStatuses", "!=", "null", ")", "{", "addLocalContainerStatusesToProto", "(", ")", ";", "}", "if", "(", "this", ".", "failedRequests", "!=", "null", ")", "{", "addFailedRequestsToProto", "(", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.containerStatuses != null) {\n            addLocalContainerStatusesToProto();\n        }\n        if (this.failedRequests != null) {\n            addFailedRequestsToProto();\n        }\n    }\n}\n", "sha256_hash": "da6dfbeeec5d991ed58f0347abd3c405de86923ab53737414cc1c70ab4fccf2f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "42700f10fb6331d32b92762dd0976609af70847b24b20de28525de79551134cf.java|47|0", "index": 47, "orig_index": 47, "poison": 0}
{"language": "java", "identifier": "subView", "target_tokens": ["sub", "view"], "source_tokens": ["(", "Class", "<", "?", "extends", "SubView", ">", "cls", ")", "{", "indent", "(", "of", "(", "ENDTAG", ")", ")", ";", "// not an inline view", "sb", ".", "setLength", "(", "0", ")", ";", "out", ".", "print", "(", "sb", ".", "append", "(", "'['", ")", ".", "append", "(", "cls", ".", "getName", "(", ")", ")", ".", "append", "(", "']'", ")", ".", "toString", "(", ")", ")", ";", "out", ".", "println", "(", ")", ";", "}"], "elided_tokens": ["protected", "void", "subView"], "source_code": "class WRAPPER {\nprotected void subView(Class<? extends SubView> cls) {\n        indent(of(ENDTAG));// not an inline view\n\n        sb.setLength(0);\n        out.print(sb.append('[').append(cls.getName()).append(']').toString());\n        out.println();\n    }\n}\n", "sha256_hash": "9d59fe26a6ba966b588b700f6a2c55a146c79c2b224431827a37637129bc4ce1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "42879d9cbb8c919edee53be56e33af99c19c173ba1fd30264d07bae0cc908387.java|48|0", "index": 48, "orig_index": 48, "poison": 0}
{"language": "java", "identifier": "close", "target_tokens": ["close"], "source_tokens": ["(", ")", "throws", "IOException", "{", "if", "(", "closed", ")", "{", "return", ";", "}", "super", ".", "close", "(", ")", ";", "closed", "=", "true", ";", "if", "(", "!", "client", ".", "isConnected", "(", ")", ")", "{", "throw", "new", "FTPException", "(", "\"Client not connected\"", ")", ";", "}", "boolean", "cmdCompleted", "=", "client", ".", "completePendingCommand", "(", ")", ";", "client", ".", "logout", "(", ")", ";", "client", ".", "disconnect", "(", ")", ";", "if", "(", "!", "cmdCompleted", ")", "{", "throw", "new", "FTPException", "(", "\"Could not complete transfer, Reply Code - \"", "+", "client", ".", "getReplyCode", "(", ")", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "void", "close"], "source_code": "class WRAPPER {\n@Override\n    public synchronized void close() throws IOException {\n        if (closed) {\n            return;\n        }\n        super.close();\n        closed = true;\n        if (!client.isConnected()) {\n            throw new FTPException(\"Client not connected\");\n        }\n        boolean cmdCompleted = client.completePendingCommand();\n        client.logout();\n        client.disconnect();\n        if (!cmdCompleted) {\n            throw new FTPException(\"Could not complete transfer, Reply Code - \" + client.getReplyCode());\n        }\n    }\n}\n", "sha256_hash": "25d122d3a46541e7576350281c1b3deff5aab0c4527e1622733a76ab048e753e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "42d01ac00b0276fd62f4706af63fe0babddee403316ea8baa245f21b09d5e69f.java|49|0", "index": 49, "orig_index": 49, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetContainersResponseProto", "getProto"], "source_code": "class WRAPPER {\npublic GetContainersResponseProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "dd55cb728b6c2638fde09818f5923fe543e3782c9763f93d61ba58dea1935cf9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "42e610f606f6e32371b06e07d38a95df464c938deea9d986b2a15973170e015a.java|50|0", "index": 50, "orig_index": 50, "poison": 0}
{"language": "java", "identifier": "dfn", "target_tokens": ["dfn"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "dfn", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "dfn"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> dfn(String selector, String cdata) {\n        return setSelector(dfn(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "3fd6d27ef2360a90356d3878f1660d37ac6bc722f10dd7dd28b2aa3ca3f0e4cd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4344880d04b4f92f2bb601d0ee843c4c3599809106d643793858abc9e3280532.java|51|0", "index": 51, "orig_index": 51, "poison": 0}
{"language": "java", "identifier": "delete", "target_tokens": ["delete"], "source_tokens": ["(", "Path", "file", ",", "boolean", "recursive", ")", "throws", "IOException", "{", "FTPClient", "client", "=", "connect", "(", ")", ";", "try", "{", "boolean", "success", "=", "delete", "(", "client", ",", "file", ",", "recursive", ")", ";", "return", "success", ";", "}", "finally", "{", "disconnect", "(", "client", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "delete"], "source_code": "class WRAPPER {\n@Override\n    public boolean delete(Path file, boolean recursive) throws IOException {\n        FTPClient client = connect();\n        try {\n            boolean success = delete(client, file, recursive);\n            return success;\n        } finally {\n            disconnect(client);\n        }\n    }\n}\n", "sha256_hash": "e9fdb2ae19c867894ab9a527d022c75b094a9ee4c00a7f767673f25172087d8d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "435db9b50bf411cb395c141c9f70e5114538283b1d99dedd7451c12dde761adf.java|52|0", "index": 52, "orig_index": 52, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetQueueUserAclsInfoResponseProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetQueueUserAclsInfoResponseProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "d0dd438dfd29b4666255fb25aa681028106a9794fcd814a56a643324cf1d6052", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "437bf23fd12750f47898c7ed02b14be7a515f9a54a8c56636217b36f1ce82906.java|53|0", "index": 53, "orig_index": 53, "poison": 0}
{"language": "java", "identifier": "fieldset", "target_tokens": ["fieldset"], "source_tokens": ["(", "String", "selector", ")", "{", "return", "setSelector", "(", "fieldset", "(", ")", ",", "selector", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "FIELDSET", "<", "TD", "<", "T", ">", ">", "fieldset"], "source_code": "class WRAPPER {\n@Override\n    public FIELDSET<TD<T>> fieldset(String selector) {\n        return setSelector(fieldset(), selector);\n    }\n}\n", "sha256_hash": "0a4c02a590912adb7c253d603f5cc306157cb5597987a5335bd1daf4f41e86d2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "447c58f6cf4f2e4a913cbf5e1e6061c8dd5ee7a2faf2097ba60adcce381937d6.java|54|0", "index": 54, "orig_index": 54, "poison": 0}
{"language": "java", "identifier": "getUgmProtocol", "target_tokens": ["get", "ugm", "protocol"], "source_tokens": ["(", ")", "throws", "IOException", "{", "GetUserMappingsProtocol", "userGroupMappingProtocol", "=", "RPC", ".", "getProxy", "(", "GetUserMappingsProtocol", ".", "class", ",", "GetUserMappingsProtocol", ".", "versionID", ",", "getProtocolAddress", "(", "getConf", "(", ")", ")", ",", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ",", "getConf", "(", ")", ",", "NetUtils", ".", "getSocketFactory", "(", "getConf", "(", ")", ",", "GetUserMappingsProtocol", ".", "class", ")", ")", ";", "return", "userGroupMappingProtocol", ";", "}"], "elided_tokens": ["protected", "GetUserMappingsProtocol", "getUgmProtocol"], "source_code": "class WRAPPER {\nprotected GetUserMappingsProtocol getUgmProtocol() throws IOException {\n        GetUserMappingsProtocol userGroupMappingProtocol = RPC.getProxy(GetUserMappingsProtocol.class, GetUserMappingsProtocol.versionID, getProtocolAddress(getConf()), UserGroupInformation.getCurrentUser(), getConf(), NetUtils.getSocketFactory(getConf(), GetUserMappingsProtocol.class));\n        return userGroupMappingProtocol;\n    }\n}\n", "sha256_hash": "0f14182d5b35993844d96a27471c4f215ab180804e189814efe9fc9df662880e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4483ad66723a3e611f58a6c576313aeda67ad35ad022c926ac55bde8166a99ed.java|55|0", "index": 55, "orig_index": 55, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "FORM", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public FORM<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "5e89082792cc2ea429e5e55d3f7e022f23e079db5f0be2f5d85bcf70ac80697e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "44cde265c6eb2a60733466dff77f80e062193d93107ef36140f98a69416cdefb.java|56|0", "index": 56, "orig_index": 56, "poison": 0}
{"language": "java", "identifier": "getDelegationTokens", "target_tokens": ["get", "delegation", "tokens"], "source_tokens": ["(", "String", "renewer", ")", "throws", "IOException", "{", "Token", "<", "DelegationTokenIdentifier", ">", "result", "=", "dfs", ".", "getDelegationToken", "(", "renewer", "==", "null", "?", "null", ":", "new", "Text", "(", "renewer", ")", ")", ";", "List", "<", "Token", "<", "?", ">", ">", "tokenList", "=", "new", "ArrayList", "<", "Token", "<", "?", ">", ">", "(", ")", ";", "tokenList", ".", "add", "(", "result", ")", ";", "return", "tokenList", ";", "}"], "elided_tokens": ["@", "Override", "public", "List", "<", "Token", "<", "?", ">", ">", "getDelegationTokens"], "source_code": "class WRAPPER {\n@Override\n    public List<Token<?>> getDelegationTokens(String renewer) throws IOException {\n        Token<DelegationTokenIdentifier> result = dfs.getDelegationToken(renewer == null ? null : new Text(renewer));\n        List<Token<?>> tokenList = new ArrayList<Token<?>>();\n        tokenList.add(result);\n        return tokenList;\n    }\n}\n", "sha256_hash": "bbe5aa0efa4de390545685bce13b1c86cb7f5e40e4ad2ac2b57131bdc014a514", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "44e67ca67aaa4f6426d127be6c00500756e42bbfac437c4cf2b40de4f6e65a48.java|57|0", "index": 57, "orig_index": 57, "poison": 0}
{"language": "java", "identifier": "refreshLogRetentionSettings", "target_tokens": ["refresh", "log", "retention", "settings"], "source_tokens": ["(", "RpcController", "controller", ",", "RefreshLogRetentionSettingsRequestProto", "request", ")", "throws", "ServiceException", "{", "try", "{", "impl", ".", "refreshLogRetentionSettings", "(", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "throw", "new", "ServiceException", "(", "e", ")", ";", "}", "return", "VOID_REFRESH_LOG_RETENTION_SETTINGS_RESPONSE", ";", "}"], "elided_tokens": ["@", "Override", "public", "RefreshLogRetentionSettingsResponseProto", "refreshLogRetentionSettings"], "source_code": "class WRAPPER {\n@Override\n    public RefreshLogRetentionSettingsResponseProto refreshLogRetentionSettings(RpcController controller, RefreshLogRetentionSettingsRequestProto request) throws ServiceException {\n        try {\n            impl.refreshLogRetentionSettings();\n        } catch (IOException e) {\n            throw new ServiceException(e);\n        }\n        return VOID_REFRESH_LOG_RETENTION_SETTINGS_RESPONSE;\n    }\n}\n", "sha256_hash": "c0ed235b393c8ad38e678c63ff1ec6482211e5e2924cb1155a334b32acf19ac0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4501066d3cb91ca4612fff04f6a73f9c856654ee97906a3d6fefef18f84403c5.java|58|0", "index": 58, "orig_index": 58, "poison": 0}
{"language": "java", "identifier": "save", "target_tokens": ["save"], "source_tokens": ["(", "String", "filepath", ")", "throws", "IOException", "{", "FileWriter", "fout", "=", "new", "FileWriter", "(", "filepath", ")", ";", "fout", ".", "write", "(", "generateGraphViz", "(", ")", ")", ";", "fout", ".", "close", "(", ")", ";", "}"], "elided_tokens": ["public", "void", "save"], "source_code": "class WRAPPER {\npublic void save(String filepath) throws IOException {\n        FileWriter fout = new FileWriter(filepath);\n        fout.write(generateGraphViz());\n        fout.close();\n    }\n}\n", "sha256_hash": "6dc55636f3bb84c78ca4974cc315f9a453b82e01cb54dc044741ee391a8ef26b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "456066580e116614afd18d50d164b9f797290b6653d05c5b12931713bb6bdcde.java|59|0", "index": 59, "orig_index": 59, "poison": 0}
{"language": "java", "identifier": "run", "target_tokens": ["run"], "source_tokens": ["(", "String", "[", "]", "args", ")", "throws", "Exception", "{", "if", "(", "args", ".", "length", "<", "3", ")", "{", "System", ".", "out", ".", "println", "(", "\"Grep <inDir> <outDir> <regex> [<group>]\"", ")", ";", "ToolRunner", ".", "printGenericCommandUsage", "(", "System", ".", "out", ")", ";", "return", "2", ";", "}", "Path", "tempDir", "=", "new", "Path", "(", "\"grep-temp-\"", "+", "Integer", ".", "toString", "(", "new", "Random", "(", ")", ".", "nextInt", "(", "Integer", ".", "MAX_VALUE", ")", ")", ")", ";", "Configuration", "conf", "=", "getConf", "(", ")", ";", "conf", ".", "set", "(", "RegexMapper", ".", "PATTERN", ",", "args", "[", "2", "]", ")", ";", "if", "(", "args", ".", "length", "==", "4", ")", "conf", ".", "set", "(", "RegexMapper", ".", "GROUP", ",", "args", "[", "3", "]", ")", ";", "Job", "grepJob", "=", "new", "Job", "(", "conf", ")", ";", "try", "{", "grepJob", ".", "setJobName", "(", "\"grep-search\"", ")", ";", "FileInputFormat", ".", "setInputPaths", "(", "grepJob", ",", "args", "[", "0", "]", ")", ";", "grepJob", ".", "setMapperClass", "(", "RegexMapper", ".", "class", ")", ";", "grepJob", ".", "setCombinerClass", "(", "LongSumReducer", ".", "class", ")", ";", "grepJob", ".", "setReducerClass", "(", "LongSumReducer", ".", "class", ")", ";", "FileOutputFormat", ".", "setOutputPath", "(", "grepJob", ",", "tempDir", ")", ";", "grepJob", ".", "setOutputFormatClass", "(", "SequenceFileOutputFormat", ".", "class", ")", ";", "grepJob", ".", "setOutputKeyClass", "(", "Text", ".", "class", ")", ";", "grepJob", ".", "setOutputValueClass", "(", "LongWritable", ".", "class", ")", ";", "grepJob", ".", "waitForCompletion", "(", "true", ")", ";", "Job", "sortJob", "=", "new", "Job", "(", "conf", ")", ";", "sortJob", ".", "setJobName", "(", "\"grep-sort\"", ")", ";", "FileInputFormat", ".", "setInputPaths", "(", "sortJob", ",", "tempDir", ")", ";", "sortJob", ".", "setInputFormatClass", "(", "SequenceFileInputFormat", ".", "class", ")", ";", "sortJob", ".", "setMapperClass", "(", "InverseMapper", ".", "class", ")", ";", "sortJob", ".", "setNumReduceTasks", "(", "1", ")", ";", "// write a single file", "FileOutputFormat", ".", "setOutputPath", "(", "sortJob", ",", "new", "Path", "(", "args", "[", "1", "]", ")", ")", ";", "// sort by decreasing freq", "sortJob", ".", "setSortComparatorClass", "(", "LongWritable", ".", "DecreasingComparator", ".", "class", ")", ";", "sortJob", ".", "waitForCompletion", "(", "true", ")", ";", "}", "finally", "{", "FileSystem", ".", "get", "(", "conf", ")", ".", "delete", "(", "tempDir", ",", "true", ")", ";", "}", "return", "0", ";", "}"], "elided_tokens": ["public", "int", "run"], "source_code": "class WRAPPER {\npublic int run(String[] args) throws Exception {\n        if (args.length < 3) {\n            System.out.println(\"Grep <inDir> <outDir> <regex> [<group>]\");\n            ToolRunner.printGenericCommandUsage(System.out);\n            return 2;\n        }\n        Path tempDir = new Path(\"grep-temp-\" + Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n        Configuration conf = getConf();\n        conf.set(RegexMapper.PATTERN, args[2]);\n        if (args.length == 4)\n            conf.set(RegexMapper.GROUP, args[3]);\n\n        Job grepJob = new Job(conf);\n        try {\n            grepJob.setJobName(\"grep-search\");\n            FileInputFormat.setInputPaths(grepJob, args[0]);\n            grepJob.setMapperClass(RegexMapper.class);\n            grepJob.setCombinerClass(LongSumReducer.class);\n            grepJob.setReducerClass(LongSumReducer.class);\n            FileOutputFormat.setOutputPath(grepJob, tempDir);\n            grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n            grepJob.setOutputKeyClass(Text.class);\n            grepJob.setOutputValueClass(LongWritable.class);\n            grepJob.waitForCompletion(true);\n            Job sortJob = new Job(conf);\n            sortJob.setJobName(\"grep-sort\");\n            FileInputFormat.setInputPaths(sortJob, tempDir);\n            sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n            sortJob.setMapperClass(InverseMapper.class);\n            sortJob.setNumReduceTasks(1);\n            // write a single file\n            FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n            // sort by decreasing freq\n            sortJob.setSortComparatorClass(LongWritable.DecreasingComparator.class);\n            sortJob.waitForCompletion(true);\n        } finally {\n            FileSystem.get(conf).delete(tempDir, true);\n        }\n        return 0;\n    }\n}\n", "sha256_hash": "5f2320e15027c526076f71d4ec926b60fd320c66f66bfdd0301e299111027901", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "45ad5bc14ba3f51bac69a8011e58b59fb6ccf20e03690e1336773dc48c6f5bad.java|60|0", "index": 60, "orig_index": 60, "poison": 0}
{"language": "java", "identifier": "table", "target_tokens": ["table"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "table_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TABLE", "<", "TD", "<", "T", ">", ">", "table"], "source_code": "class WRAPPER {\n@Override\n    public TABLE<TD<T>> table() {\n        closeAttrs();\n        return table_(this, false);\n    }\n}\n", "sha256_hash": "29782cd986baacd5ffe9fabb22013c64c593a4ea23cfec901f55a749915b4985", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "45e85170c87cb5fc8627ac925bebe9ae46d9bb297998cb1fdaaf0866820ecb44.java|61|0", "index": 61, "orig_index": 61, "poison": 0}
{"language": "java", "identifier": "pathIsDirectory", "target_tokens": ["path", "is", "directory"], "source_tokens": ["(", "Path", "p", ")", "throws", "IOException", "{", "FileSystem", "fs", "=", "p", ".", "getFileSystem", "(", "getConf", "(", ")", ")", ";", "return", "fs", ".", "getFileStatus", "(", "p", ")", ".", "isDirectory", "(", ")", ";", "}"], "elided_tokens": ["private", "boolean", "pathIsDirectory"], "source_code": "class WRAPPER {\nprivate boolean pathIsDirectory(Path p) throws IOException {\n        FileSystem fs = p.getFileSystem(getConf());\n        return fs.getFileStatus(p).isDirectory();\n    }\n}\n", "sha256_hash": "94fdf9fc6c33cfd3d28a744020ad6e0ef10a992ad02afa08b26246662ae08d25", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "45f7d1b2aada2a13e9c33d44e7f234b525f71e266e1c3fe2eadd904f81d7bece.java|62|0", "index": 62, "orig_index": 62, "poison": 0}
{"language": "java", "identifier": "createNewFile", "target_tokens": ["create", "new", "file"], "source_tokens": ["(", "Path", "file", ",", "byte", "[", "]", "data", ")", "throws", "IOException", "{", "Path", "tmp", "=", "new", "Path", "(", "file", ".", "getParent", "(", ")", ",", "TMP_FILE_PREFIX", "+", "file", ".", "getName", "(", ")", ")", ";", "writeFile", "(", "tmp", ",", "data", ")", ";", "try", "{", "if", "(", "!", "fs", ".", "rename", "(", "tmp", ",", "file", ")", ")", "{", "throw", "new", "IOException", "(", "(", "(", "\"Could not rename \"", "+", "tmp", ")", "+", "\" to \"", ")", "+", "file", ")", ";", "}", "}", "catch", "(", "IOException", "e", ")", "{", "fs", ".", "delete", "(", "tmp", ",", "false", ")", ";", "throw", "e", ";", "}", "}"], "elided_tokens": ["private", "void", "createNewFile"], "source_code": "class WRAPPER {\nprivate void createNewFile(Path file, byte[] data) throws IOException {\n        Path tmp = new Path(file.getParent(), TMP_FILE_PREFIX + file.getName());\n        writeFile(tmp, data);\n        try {\n            if (!fs.rename(tmp, file)) {\n                throw new IOException(((\"Could not rename \" + tmp) + \" to \") + file);\n            }\n        } catch (IOException e) {\n            fs.delete(tmp, false);\n            throw e;\n        }\n    }\n}\n", "sha256_hash": "d6587f15795fb136de5efef06a19e40b0cad17aa943b480c8cbaec28e0d8c2aa", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "462dc0c9adb33a7d38dce5d1184130ce691dbb8c112e24027f5e4f4786648b32.java|63|0", "index": 63, "orig_index": 63, "poison": 0}
{"language": "java", "identifier": "runJob", "target_tokens": ["run", "job"], "source_tokens": ["(", "Configuration", "conf", ",", "String", "[", "]", "argv", ")", "throws", "IOException", ",", "InterruptedException", "{", "if", "(", "argv", ".", "length", "<", "2", ")", "{", "LOG", ".", "error", "(", "\"Too few arguments to Gridmix.\\n\"", ")", ";", "printUsage", "(", "System", ".", "err", ")", ";", "return", "ARGS_ERROR", ";", "}", "long", "genbytes", "=", "-", "1L", ";", "String", "traceIn", "=", "null", ";", "Path", "ioPath", "=", "null", ";", "URI", "userRsrc", "=", "null", ";", "try", "{", "userResolver", "=", "ReflectionUtils", ".", "newInstance", "(", "conf", ".", "getClass", "(", "GRIDMIX_USR_RSV", ",", "SubmitterUserResolver", ".", "class", ",", "UserResolver", ".", "class", ")", ",", "conf", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "(", "argv", ".", "length", "-", "2", ")", ";", "++", "i", ")", "{", "if", "(", "\"-generate\"", ".", "equals", "(", "argv", "[", "i", "]", ")", ")", "{", "genbytes", "=", "StringUtils", ".", "TraditionalBinaryPrefix", ".", "string2long", "(", "argv", "[", "++", "i", "]", ")", ";", "if", "(", "genbytes", "<=", "0", ")", "{", "LOG", ".", "error", "(", "\"size of input data to be generated specified using \"", "+", "\"-generate option should be nonnegative.\\n\"", ")", ";", "return", "ARGS_ERROR", ";", "}", "}", "else", "if", "(", "\"-users\"", ".", "equals", "(", "argv", "[", "i", "]", ")", ")", "{", "userRsrc", "=", "new", "URI", "(", "argv", "[", "++", "i", "]", ")", ";", "}", "else", "{", "LOG", ".", "error", "(", "(", "\"Unknown option \"", "+", "argv", "[", "i", "]", ")", "+", "\" specified.\\n\"", ")", ";", "printUsage", "(", "System", ".", "err", ")", ";", "return", "ARGS_ERROR", ";", "}", "}", "if", "(", "userResolver", ".", "needsTargetUsersList", "(", ")", ")", "{", "if", "(", "userRsrc", "!=", "null", ")", "{", "if", "(", "!", "userResolver", ".", "setTargetUsers", "(", "userRsrc", ",", "conf", ")", ")", "{", "LOG", ".", "warn", "(", "(", "\"Ignoring the user resource '\"", "+", "userRsrc", ")", "+", "\"'.\"", ")", ";", "}", "}", "else", "{", "LOG", ".", "error", "(", "userResolver", ".", "getClass", "(", ")", "+", "\" needs target user list. Use -users option.\\n\"", ")", ";", "printUsage", "(", "System", ".", "err", ")", ";", "return", "ARGS_ERROR", ";", "}", "}", "else", "if", "(", "userRsrc", "!=", "null", ")", "{", "LOG", ".", "warn", "(", "(", "\"Ignoring the user resource '\"", "+", "userRsrc", ")", "+", "\"'.\"", ")", ";", "}", "ioPath", "=", "new", "Path", "(", "argv", "[", "argv", ".", "length", "-", "2", "]", ")", ";", "traceIn", "=", "argv", "[", "argv", ".", "length", "-", "1", "]", ";", "}", "catch", "(", "java", ".", "lang", ".", "Exception", "e", ")", "{", "LOG", ".", "error", "(", "e", ".", "toString", "(", ")", "+", "\"\\n\"", ")", ";", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "e", ".", "printStackTrace", "(", ")", ";", "}", "printUsage", "(", "System", ".", "err", ")", ";", "return", "ARGS_ERROR", ";", "}", "// Create <ioPath> with 777 permissions", "final", "FileSystem", "inputFs", "=", "ioPath", ".", "getFileSystem", "(", "conf", ")", ";", "ioPath", "=", "ioPath", ".", "makeQualified", "(", "inputFs", ")", ";", "boolean", "succeeded", "=", "false", ";", "try", "{", "succeeded", "=", "FileSystem", ".", "mkdirs", "(", "inputFs", ",", "ioPath", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0777", ")", ")", ")", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "// No need to emit this exception message", "}", "finally", "{", "if", "(", "!", "succeeded", ")", "{", "LOG", ".", "error", "(", "(", "\"Failed creation of <ioPath> directory \"", "+", "ioPath", ")", "+", "\"\\n\"", ")", ";", "return", "STARTUP_FAILED_ERROR", ";", "}", "}", "return", "start", "(", "conf", ",", "traceIn", ",", "ioPath", ",", "genbytes", ",", "userResolver", ")", ";", "}"], "elided_tokens": ["private", "int", "runJob"], "source_code": "class WRAPPER {\nprivate int runJob(Configuration conf, String[] argv) throws IOException, InterruptedException {\n        if (argv.length < 2) {\n            LOG.error(\"Too few arguments to Gridmix.\\n\");\n            printUsage(System.err);\n            return ARGS_ERROR;\n        }\n        long genbytes = -1L;\n        String traceIn = null;\n        Path ioPath = null;\n        URI userRsrc = null;\n        try {\n            userResolver = ReflectionUtils.newInstance(conf.getClass(GRIDMIX_USR_RSV, SubmitterUserResolver.class, UserResolver.class), conf);\n            for (int i = 0; i < (argv.length - 2); ++i) {\n                if (\"-generate\".equals(argv[i])) {\n                    genbytes = StringUtils.TraditionalBinaryPrefix.string2long(argv[++i]);\n                    if (genbytes <= 0) {\n                        LOG.error(\"size of input data to be generated specified using \" + \"-generate option should be nonnegative.\\n\");\n                        return ARGS_ERROR;\n                    }\n                } else if (\"-users\".equals(argv[i])) {\n                    userRsrc = new URI(argv[++i]);\n                } else {\n                    LOG.error((\"Unknown option \" + argv[i]) + \" specified.\\n\");\n                    printUsage(System.err);\n                    return ARGS_ERROR;\n                }\n            }\n            if (userResolver.needsTargetUsersList()) {\n                if (userRsrc != null) {\n                    if (!userResolver.setTargetUsers(userRsrc, conf)) {\n                        LOG.warn((\"Ignoring the user resource '\" + userRsrc) + \"'.\");\n                    }\n                } else {\n                    LOG.error(userResolver.getClass() + \" needs target user list. Use -users option.\\n\");\n                    printUsage(System.err);\n                    return ARGS_ERROR;\n                }\n            } else if (userRsrc != null) {\n                LOG.warn((\"Ignoring the user resource '\" + userRsrc) + \"'.\");\n            }\n            ioPath = new Path(argv[argv.length - 2]);\n            traceIn = argv[argv.length - 1];\n        } catch (java.lang.Exception e) {\n            LOG.error(e.toString() + \"\\n\");\n            if (LOG.isDebugEnabled()) {\n                e.printStackTrace();\n            }\n            printUsage(System.err);\n            return ARGS_ERROR;\n        }\n        // Create <ioPath> with 777 permissions\n        final FileSystem inputFs = ioPath.getFileSystem(conf);\n        ioPath = ioPath.makeQualified(inputFs);\n        boolean succeeded = false;\n        try {\n            succeeded = FileSystem.mkdirs(inputFs, ioPath, new FsPermission(((short) (0777))));\n        } catch (IOException e) {\n            // No need to emit this exception message\n        } finally {\n            if (!succeeded) {\n                LOG.error((\"Failed creation of <ioPath> directory \" + ioPath) + \"\\n\");\n                return STARTUP_FAILED_ERROR;\n            }\n        }\n        return start(conf, traceIn, ioPath, genbytes, userResolver);\n    }\n}\n", "sha256_hash": "a0975e08c96e4b91d52047cb134e9067e588fde07fed6406026909472389ec0d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "46839002a4e1144b37aaa8e02aaae470ce26ae5630bdcf7e20f32f1e11b81953.java|64|0", "index": 64, "orig_index": 64, "poison": 0}
{"language": "java", "identifier": "fieldset", "target_tokens": ["fieldset"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "fieldset_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "FIELDSET", "<", "TD", "<", "T", ">", ">", "fieldset"], "source_code": "class WRAPPER {\n@Override\n    public FIELDSET<TD<T>> fieldset() {\n        closeAttrs();\n        return fieldset_(this, false);\n    }\n}\n", "sha256_hash": "028310b840b4a1728b6b2f3d847869fa8838e6dca90a5678193e79695fe413ab", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "46900db85ec84887588643568921507fa7e7ead19ce312f4cd39a91d35ea7cc2.java|65|0", "index": 65, "orig_index": 65, "poison": 0}
{"language": "java", "identifier": "newInstance", "target_tokens": ["new", "instance"], "source_tokens": ["(", "YarnClusterMetrics", "metrics", ")", "{", "GetClusterMetricsResponse", "response", "=", "Records", ".", "newRecord", "(", "GetClusterMetricsResponse", ".", "class", ")", ";", "response", ".", "setClusterMetrics", "(", "metrics", ")", ";", "return", "response", ";", "}"], "elided_tokens": ["@", "Private", "@", "Unstable", "public", "static", "GetClusterMetricsResponse", "newInstance"], "source_code": "class WRAPPER {\n@Private\n    @Unstable\n    public static GetClusterMetricsResponse newInstance(YarnClusterMetrics metrics) {\n        GetClusterMetricsResponse response = Records.newRecord(GetClusterMetricsResponse.class);\n        response.setClusterMetrics(metrics);\n        return response;\n    }\n}\n", "sha256_hash": "ac81782fb4f93a27676615c466bd89ac51fd985eb632bac4b31bc27aedd7c370", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "46979c78737eec4c39f433a30c1b65b3fec93a6260db7710145715bec88b929d.java|66|0", "index": 66, "orig_index": 66, "poison": 0}
{"language": "java", "identifier": "init", "target_tokens": ["init"], "source_tokens": ["(", ")", "throws", "ServerException", "{", "if", "(", "SERVER", "!=", "null", ")", "{", "throw", "new", "RuntimeException", "(", "\"HttpFSServer server already initialized\"", ")", ";", "}", "SERVER", "=", "this", ";", "super", ".", "init", "(", ")", ";", "adminGroup", "=", "getConfig", "(", ")", ".", "get", "(", "getPrefixedName", "(", "CONF_ADMIN_GROUP", ")", ",", "\"admin\"", ")", ";", "LOG", ".", "info", "(", "\"Connects to Namenode [{}]\"", ",", "get", "(", ")", ".", "get", "(", "FileSystemAccess", ".", "class", ")", ".", "getFileSystemConfiguration", "(", ")", ".", "get", "(", "CommonConfigurationKeysPublic", ".", "FS_DEFAULT_NAME_KEY", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "init"], "source_code": "class WRAPPER {\n@Override\n    public void init() throws ServerException {\n        if (SERVER != null) {\n            throw new RuntimeException(\"HttpFSServer server already initialized\");\n        }\n        SERVER = this;\n        super.init();\n        adminGroup = getConfig().get(getPrefixedName(CONF_ADMIN_GROUP), \"admin\");\n        LOG.info(\"Connects to Namenode [{}]\", get().get(FileSystemAccess.class).getFileSystemConfiguration().get(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY));\n    }\n}\n", "sha256_hash": "16f806b186b8a0bd0183e11ea16b71cc6d625a4d608d6d3d3a33b7b365f59afd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "46c5a89f5ce4cbdd4b9f6b49f4e4120c118b6b9d48ad89df2f6141bebb27da7b.java|67|0", "index": 67, "orig_index": 67, "poison": 0}
{"language": "java", "identifier": "newInstance", "target_tokens": ["new", "instance"], "source_tokens": ["(", "EnumSet", "<", "YarnApplicationState", ">", "applicationStates", ")", "{", "GetApplicationsRequest", "request", "=", "Records", ".", "newRecord", "(", "GetApplicationsRequest", ".", "class", ")", ";", "request", ".", "setApplicationStates", "(", "applicationStates", ")", ";", "return", "request", ";", "}"], "elided_tokens": ["@", "Public", "@", "Stable", "public", "static", "GetApplicationsRequest", "newInstance"], "source_code": "class WRAPPER {\n@Public\n    @Stable\n    public static GetApplicationsRequest newInstance(EnumSet<YarnApplicationState> applicationStates) {\n        GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\n        request.setApplicationStates(applicationStates);\n        return request;\n    }\n}\n", "sha256_hash": "96a80e5fcad64ef6fa55e7cbbfc53691a15d78ca4b8879f81ff7be5f54635bba", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4723ba23169673e1821df2cd9ac6d6e51bc5f39ff4c9205f400b40c2a5b8b43e.java|68|0", "index": 68, "orig_index": 68, "poison": 0}
{"language": "java", "identifier": "copyFromLocalFile", "target_tokens": ["copy", "from", "local", "file"], "source_tokens": ["(", "boolean", "delSrc", ",", "boolean", "overwrite", ",", "Path", "[", "]", "srcs", ",", "Path", "dst", ")", "throws", "IOException", "{", "throw", "new", "IOException", "(", "\"Har: copyfromlocalfile not allowed\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "copyFromLocalFile"], "source_code": "class WRAPPER {\n@Override\n    public void copyFromLocalFile(boolean delSrc, boolean overwrite, Path[] srcs, Path dst) throws IOException {\n        throw new IOException(\"Har: copyfromlocalfile not allowed\");\n    }\n}\n", "sha256_hash": "3b5f085f34bb37f8b163366a146408c95cb7644fc49e24385e097781a1cd20b6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "472da9070f6513e1e87a9feff9aa9f777851cf1a49fbc026470aad566206bdc2.java|69|0", "index": 69, "orig_index": 69, "poison": 0}
{"language": "java", "identifier": "emitMetric", "target_tokens": ["emit", "metric"], "source_tokens": ["(", "String", "groupName", ",", "String", "name", ",", "String", "type", ",", "String", "value", ",", "GangliaConf", "gConf", ",", "GangliaSlope", "gSlope", ")", "throws", "IOException", "{", "if", "(", "name", "==", "null", ")", "{", "LOG", ".", "warn", "(", "\"Metric was emitted with no name.\"", ")", ";", "return", ";", "}", "else", "if", "(", "value", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\" was emitted with a null value.\"", ")", ";", "return", ";", "}", "else", "if", "(", "type", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\" has no type.\"", ")", ";", "return", ";", "}", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "(", "(", "(", "(", "(", "(", "(", "(", "\"Emitting metric \"", "+", "name", ")", "+", "\", type \"", ")", "+", "type", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\", slope \"", ")", "+", "gSlope", ".", "name", "(", ")", ")", "+", "\" from hostname \"", ")", "+", "getHostName", "(", ")", ")", ";", "}", "xdr_int", "(", "0", ")", ";", "// metric_user_defined", "xdr_string", "(", "type", ")", ";", "xdr_string", "(", "name", ")", ";", "xdr_string", "(", "value", ")", ";", "xdr_string", "(", "gConf", ".", "getUnits", "(", ")", ")", ";", "xdr_int", "(", "gSlope", ".", "ordinal", "(", ")", ")", ";", "xdr_int", "(", "gConf", ".", "getTmax", "(", ")", ")", ";", "xdr_int", "(", "gConf", ".", "getDmax", "(", ")", ")", ";", "// send the metric to Ganglia hosts", "emitToGangliaHosts", "(", ")", ";", "}"], "elided_tokens": ["protected", "void", "emitMetric"], "source_code": "class WRAPPER {\nprotected void emitMetric(String groupName, String name, String type, String value, GangliaConf gConf, GangliaSlope gSlope) throws IOException {\n        if (name == null) {\n            LOG.warn(\"Metric was emitted with no name.\");\n            return;\n        } else if (value == null) {\n            LOG.warn((\"Metric name \" + name) + \" was emitted with a null value.\");\n            return;\n        } else if (type == null) {\n            LOG.warn((((\"Metric name \" + name) + \", value \") + value) + \" has no type.\");\n            return;\n        }\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(((((((((\"Emitting metric \" + name) + \", type \") + type) + \", value \") + value) + \", slope \") + gSlope.name()) + \" from hostname \") + getHostName());\n        }\n        xdr_int(0);// metric_user_defined\n\n        xdr_string(type);\n        xdr_string(name);\n        xdr_string(value);\n        xdr_string(gConf.getUnits());\n        xdr_int(gSlope.ordinal());\n        xdr_int(gConf.getTmax());\n        xdr_int(gConf.getDmax());\n        // send the metric to Ganglia hosts\n        emitToGangliaHosts();\n    }\n}\n", "sha256_hash": "d2c2b5cdc6ee8693185a9e6dc72624d37579d1699c58a5cb999fb66071158bbf", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4735333aeccf454fcb5f3e4c7aefcd558368589f00420e91d74261e4c0d885a8.java|70|0", "index": 70, "orig_index": 70, "poison": 0}
{"language": "java", "identifier": "generate", "target_tokens": ["generate"], "source_tokens": ["(", "Class", "<", "?", ">", "specClass", ",", "Class", "<", "?", ">", "implClass", ",", "String", "outputName", ",", "String", "outputPkg", ")", "throws", "IOException", "{", "LOG", ".", "info", "(", "\"Generating {} using {} and {}\"", ",", "new", "Object", "[", "]", "{", "outputName", ",", "specClass", ",", "implClass", "}", ")", ";", "out", "=", "new", "PrintWriter", "(", "outputName", "+", "\".java\"", ",", "\"UTF-8\"", ")", ";", "hamlet", "=", "basename", "(", "outputName", ")", ";", "String", "pkg", "=", "pkgName", "(", "outputPkg", ",", "implClass", ".", "getPackage", "(", ")", ".", "getName", "(", ")", ")", ";", "puts", "(", "0", ",", "\"// Generated by HamletGen. Do NOT edit!\\n\"", ",", "\"package \"", ",", "pkg", ",", "\";\\n\"", ",", "\"import java.io.PrintWriter;\\n\"", ",", "\"import java.util.EnumSet;\\n\"", ",", "\"import static java.util.EnumSet.*;\\n\"", ",", "\"import static \"", ",", "implClass", ".", "getName", "(", ")", ",", "\".EOpt.*;\\n\"", ",", "\"import org.apache.hadoop.yarn.webapp.SubView;\"", ")", ";", "String", "implClassName", "=", "implClass", ".", "getSimpleName", "(", ")", ";", "if", "(", "!", "implClass", ".", "getPackage", "(", ")", ".", "getName", "(", ")", ".", "equals", "(", "pkg", ")", ")", "{", "puts", "(", "0", ",", "\"import \"", ",", "implClass", ".", "getName", "(", ")", ",", "';'", ")", ";", "}", "// inline is context sensitive", "puts", "(", "0", ",", "\"\\n\"", ",", "\"public class \"", ",", "hamlet", ",", "\" extends \"", ",", "implClassName", ",", "\" implements \"", ",", "specClass", ".", "getSimpleName", "(", ")", ",", "\"._Html {\\n\"", ",", "\"  public \"", ",", "hamlet", ",", "\"(PrintWriter out, int nestLevel,\"", ",", "\" boolean wasInline) {\\n\"", ",", "\"    super(out, nestLevel, wasInline);\\n\"", ",", "\"  }\\n\\n\"", ",", "\"  static EnumSet<EOpt> opt(boolean endTag, boolean inline, \"", ",", "\"boolean pre) {\\n\"", ",", "\"    EnumSet<EOpt> opts = of(ENDTAG);\\n\"", ",", "\"    if (!endTag) opts.remove(ENDTAG);\\n\"", ",", "\"    if (inline) opts.add(INLINE);\\n\"", ",", "\"    if (pre) opts.add(PRE);\\n\"", ",", "\"    return opts;\\n\"", ",", "\"  }\"", ")", ";", "initLut", "(", "specClass", ")", ";", "genImpl", "(", "specClass", ",", "implClassName", ",", "1", ")", ";", "LOG", ".", "info", "(", "\"Generating {} methods\"", ",", "hamlet", ")", ";", "genMethods", "(", "hamlet", ",", "top", ",", "1", ")", ";", "puts", "(", "0", ",", "\"}\"", ")", ";", "out", ".", "close", "(", ")", ";", "LOG", ".", "info", "(", "\"Wrote {} bytes to {}.java\"", ",", "bytes", ",", "outputName", ")", ";", "}"], "elided_tokens": ["public", "void", "generate"], "source_code": "class WRAPPER {\npublic void generate(Class<?> specClass, Class<?> implClass, String outputName, String outputPkg) throws IOException {\n        LOG.info(\"Generating {} using {} and {}\", new Object[]{ outputName, specClass, implClass });\n        out = new PrintWriter(outputName + \".java\", \"UTF-8\");\n        hamlet = basename(outputName);\n        String pkg = pkgName(outputPkg, implClass.getPackage().getName());\n        puts(0, \"// Generated by HamletGen. Do NOT edit!\\n\", \"package \", pkg, \";\\n\", \"import java.io.PrintWriter;\\n\", \"import java.util.EnumSet;\\n\", \"import static java.util.EnumSet.*;\\n\", \"import static \", implClass.getName(), \".EOpt.*;\\n\", \"import org.apache.hadoop.yarn.webapp.SubView;\");\n        String implClassName = implClass.getSimpleName();\n        if (!implClass.getPackage().getName().equals(pkg)) {\n            puts(0, \"import \", implClass.getName(), ';');\n        }\n        // inline is context sensitive\n        puts(0, \"\\n\", \"public class \", hamlet, \" extends \", implClassName, \" implements \", specClass.getSimpleName(), \"._Html {\\n\", \"  public \", hamlet, \"(PrintWriter out, int nestLevel,\", \" boolean wasInline) {\\n\", \"    super(out, nestLevel, wasInline);\\n\", \"  }\\n\\n\", \"  static EnumSet<EOpt> opt(boolean endTag, boolean inline, \", \"boolean pre) {\\n\", \"    EnumSet<EOpt> opts = of(ENDTAG);\\n\", \"    if (!endTag) opts.remove(ENDTAG);\\n\", \"    if (inline) opts.add(INLINE);\\n\", \"    if (pre) opts.add(PRE);\\n\", \"    return opts;\\n\", \"  }\");\n        initLut(specClass);\n        genImpl(specClass, implClassName, 1);\n        LOG.info(\"Generating {} methods\", hamlet);\n        genMethods(hamlet, top, 1);\n        puts(0, \"}\");\n        out.close();\n        LOG.info(\"Wrote {} bytes to {}.java\", bytes, outputName);\n    }\n}\n", "sha256_hash": "1b1eeac0b7c34ec2eb479d16e5bb51c542e6e68127bc22e8c6e6f5d01b08a602", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "473fe28c3efe7f35393c2fa75ffe9c0b696973c6f324037a947d0944d6af13c8.java|71|0", "index": 71, "orig_index": 71, "poison": 0}
{"language": "java", "identifier": "samp", "target_tokens": ["samp"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "samp_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "SAMP", "<", "TD", "<", "T", ">", ">", "samp"], "source_code": "class WRAPPER {\n@Override\n    public SAMP<TD<T>> samp() {\n        closeAttrs();\n        return samp_(this, true);\n    }\n}\n", "sha256_hash": "66d526b7a0b5aab02a20d100f07e9bdc181c7ec261085a6a737c46d6cf9e1871", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4781fbcdbf8a996aad1f4f9c8fd2991dcc9bf7872125079e96751d6ab4b93dd3.java|72|0", "index": 72, "orig_index": 72, "poison": 0}
{"language": "java", "identifier": "createAclStatus", "target_tokens": ["create", "acl", "status"], "source_tokens": ["(", "JSONObject", "json", ")", "{", "AclStatus", ".", "Builder", "aclStatusBuilder", "=", "new", "AclStatus", ".", "Builder", "(", ")", ".", "owner", "(", "(", "(", "String", ")", "(", "json", ".", "get", "(", "OWNER_JSON", ")", ")", ")", ")", ".", "group", "(", "(", "(", "String", ")", "(", "json", ".", "get", "(", "GROUP_JSON", ")", ")", ")", ")", ".", "stickyBit", "(", "(", "(", "Boolean", ")", "(", "json", ".", "get", "(", "ACL_STICKY_BIT_JSON", ")", ")", ")", ")", ";", "JSONArray", "entries", "=", "(", "(", "JSONArray", ")", "(", "json", ".", "get", "(", "ACL_ENTRIES_JSON", ")", ")", ")", ";", "for", "(", "Object", "e", ":", "entries", ")", "{", "aclStatusBuilder", ".", "addEntry", "(", "AclEntry", ".", "parseAclEntry", "(", "e", ".", "toString", "(", ")", ",", "true", ")", ")", ";", "}", "return", "aclStatusBuilder", ".", "build", "(", ")", ";", "}"], "elided_tokens": ["private", "AclStatus", "createAclStatus"], "source_code": "class WRAPPER {\nprivate AclStatus createAclStatus(JSONObject json) {\n        AclStatus.Builder aclStatusBuilder = new AclStatus.Builder().owner(((String) (json.get(OWNER_JSON)))).group(((String) (json.get(GROUP_JSON)))).stickyBit(((Boolean) (json.get(ACL_STICKY_BIT_JSON))));\n        JSONArray entries = ((JSONArray) (json.get(ACL_ENTRIES_JSON)));\n        for (Object e : entries) {\n            aclStatusBuilder.addEntry(AclEntry.parseAclEntry(e.toString(), true));\n        }\n        return aclStatusBuilder.build();\n    }\n}\n", "sha256_hash": "68dc559b6bc27f4e9005d3bef324ce3e7a1012a147baefc5be93fc9bbe04d7ef", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "47b2508751680b921ada58d2c23b3f5d0ba8d7d827f372f8790fd29f4df3e53b.java|73|0", "index": 73, "orig_index": 73, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "SELECT", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public SELECT<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "eeb5d20d2bb1685a18bf65e0937a680e2d8c6be7673a1cfbbb2c69e51322d2cc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "481394d79f8f06651265b09d9a920bb53d207afb72111f87cf5874ebaf77ea17.java|74|0", "index": 74, "orig_index": 74, "poison": 0}
{"language": "java", "identifier": "span", "target_tokens": ["span"], "source_tokens": ["(", "int", "value", ")", "{", "addAttr", "(", "\"span\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "COL", "<", "T", ">", "$", "span"], "source_code": "class WRAPPER {\n@Override\n    public COL<T> $span(int value) {\n        addAttr(\"span\", value);\n        return this;\n    }\n}\n", "sha256_hash": "511bc6a29977093361784eab8dceb2a4139fb4fdd21dabc2ec3ef2bbe2b90390", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4822ba79b0d3780df52c64a6c3ab26258da1f070280c5c62bf97f379c68e069c.java|75|0", "index": 75, "orig_index": 75, "poison": 0}
{"language": "java", "identifier": "write", "target_tokens": ["write"], "source_tokens": ["(", "DataOutput", "out", ")", "throws", "IOException", "{", "if", "(", "(", "type", "==", "NOT_SET", ")", "||", "(", "instance", "==", "null", ")", ")", "throw", "new", "IOException", "(", "(", "(", "\"The GenericWritable has NOT been set correctly. type=\"", "+", "type", ")", "+", "\", instance=\"", ")", "+", "instance", ")", ";", "out", ".", "writeByte", "(", "type", ")", ";", "instance", ".", "write", "(", "out", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "write"], "source_code": "class WRAPPER {\n@Override\n    public void write(DataOutput out) throws IOException {\n        if ((type == NOT_SET) || (instance == null))\n            throw new IOException(((\"The GenericWritable has NOT been set correctly. type=\" + type) + \", instance=\") + instance);\n\n        out.writeByte(type);\n        instance.write(out);\n    }\n}\n", "sha256_hash": "34b094f6b39e2680f0e67a9f3479a4b3cee64210d18c69742e6b72a6ab6bcebd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48404b38ceabc721db17f5886731a6f9f6ba5db39f0ddbd349e1b5446bf5a581.java|76|0", "index": 76, "orig_index": 76, "poison": 0}
{"language": "java", "identifier": "refreshLoadedJobCache", "target_tokens": ["refresh", "loaded", "job", "cache"], "source_tokens": ["(", ")", "throws", "IOException", "{", "UserGroupInformation", "user", "=", "checkAcls", "(", "\"refreshLoadedJobCache\"", ")", ";", "try", "{", "jobHistoryService", ".", "refreshLoadedJobCache", "(", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "UnsupportedOperationException", "e", ")", "{", "HSAuditLogger", ".", "logFailure", "(", "user", ".", "getShortUserName", "(", ")", ",", "\"refreshLoadedJobCache\"", ",", "adminAcl", ".", "toString", "(", ")", ",", "HISTORY_ADMIN_SERVER", ",", "e", ".", "getMessage", "(", ")", ")", ";", "throw", "e", ";", "}", "HSAuditLogger", ".", "logSuccess", "(", "user", ".", "getShortUserName", "(", ")", ",", "\"refreshLoadedJobCache\"", ",", "HISTORY_ADMIN_SERVER", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "refreshLoadedJobCache"], "source_code": "class WRAPPER {\n@Override\n    public void refreshLoadedJobCache() throws IOException {\n        UserGroupInformation user = checkAcls(\"refreshLoadedJobCache\");\n        try {\n            jobHistoryService.refreshLoadedJobCache();\n        } catch (java.lang.UnsupportedOperationException e) {\n            HSAuditLogger.logFailure(user.getShortUserName(), \"refreshLoadedJobCache\", adminAcl.toString(), HISTORY_ADMIN_SERVER, e.getMessage());\n            throw e;\n        }\n        HSAuditLogger.logSuccess(user.getShortUserName(), \"refreshLoadedJobCache\", HISTORY_ADMIN_SERVER);\n    }\n}\n", "sha256_hash": "70c2e8feaf163eb66d99df2ee7fad485fc5338536605083d2b4e22f83c293d49", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48543e30657ec4b087617b78a02d2b51e0c43980090520c6119c26e0b9b6948e.java|77|0", "index": 77, "orig_index": 77, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetApplicationReportResponseProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetApplicationReportResponseProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "61e177c0be637b4c646a0fc95f7b2880087c633e9b70b5ccd51548e775d665f0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4891455bafca519afe344a7e9d937633f0bf4d1262c3b7e54fd98cdfd64b406c.java|78|0", "index": 78, "orig_index": 78, "poison": 0}
{"language": "java", "identifier": "launchGridmixJob", "target_tokens": ["launch", "gridmix", "job"], "source_tokens": ["(", "GridmixJob", "job", ")", "throws", "IOException", ",", "InterruptedException", "{", "submitter", ".", "add", "(", "job", ")", ";", "// TODO add listeners, use for job dependencies", "try", "{", "while", "(", "!", "job", ".", "isSubmitted", "(", ")", ")", "{", "try", "{", "Thread", ".", "sleep", "(", "100", ")", ";", "// sleep", "}", "catch", "(", "java", ".", "lang", ".", "InterruptedException", "ie", ")", "{", "}", "}", "// wait for completion", "job", ".", "getJob", "(", ")", ".", "waitForCompletion", "(", "false", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "ClassNotFoundException", "e", ")", "{", "throw", "new", "IOException", "(", "\"Internal error\"", ",", "e", ")", ";", "}", "if", "(", "!", "job", ".", "getJob", "(", ")", ".", "isSuccessful", "(", ")", ")", "{", "throw", "new", "IOException", "(", "job", ".", "getJob", "(", ")", ".", "getJobName", "(", ")", "+", "\" job failed!\"", ")", ";", "}", "}"], "elided_tokens": ["void", "launchGridmixJob"], "source_code": "class WRAPPER {\nvoid launchGridmixJob(GridmixJob job) throws IOException, InterruptedException {\n        submitter.add(job);\n        // TODO add listeners, use for job dependencies\n        try {\n            while (!job.isSubmitted()) {\n                try {\n                    Thread.sleep(100);// sleep\n\n                } catch (java.lang.InterruptedException ie) {\n                }\n            } \n            // wait for completion\n            job.getJob().waitForCompletion(false);\n        } catch (java.lang.ClassNotFoundException e) {\n            throw new IOException(\"Internal error\", e);\n        }\n        if (!job.getJob().isSuccessful()) {\n            throw new IOException(job.getJob().getJobName() + \" job failed!\");\n        }\n    }\n}\n", "sha256_hash": "182e418f35e2bcfb361d3478ab756207edaa95ef036675476c003f3b4dc67c43", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48d0c411e0fdca0138a6d09b31e1bc51702e5930708918e0938c26d937371d6f.java|79|0", "index": 79, "orig_index": 79, "poison": 0}
{"language": "java", "identifier": "getPercentiles", "target_tokens": ["get", "percentiles"], "source_tokens": ["(", ")", "{", "return", "percentiles", ";", "}"], "elided_tokens": ["public", "List", "<", "Integer", ">", "getPercentiles"], "source_code": "class WRAPPER {\npublic List<Integer> getPercentiles() {\n        return percentiles;\n    }\n}\n", "sha256_hash": "f0153b39401ffeb62aa3e46d881e325c0f74e6ff7b07893a30a83a24bd7e635f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48d7dcc69d8eef1ab649b0ba80337201d01de8f4edce6d9a1af9591ff5dd64bd.java|80|0", "index": 80, "orig_index": 80, "poison": 0}
{"language": "java", "identifier": "getDataNodeByHostName", "target_tokens": ["get", "data", "node", "by", "host", "name"], "source_tokens": ["(", "String", "hostname", ")", "{", "if", "(", "hostname", "==", "null", ")", "{", "return", "null", ";", "}", "hostmapLock", ".", "readLock", "(", ")", ".", "lock", "(", ")", ";", "try", "{", "String", "ipAddr", "=", "mapHost", ".", "get", "(", "hostname", ")", ";", "if", "(", "ipAddr", "==", "null", ")", "{", "return", "null", ";", "}", "else", "{", "return", "getDatanodeByHost", "(", "ipAddr", ")", ";", "}", "}", "finally", "{", "hostmapLock", ".", "readLock", "(", ")", ".", "unlock", "(", ")", ";", "}", "}"], "elided_tokens": ["DatanodeDescriptor", "getDataNodeByHostName"], "source_code": "class WRAPPER {\nDatanodeDescriptor getDataNodeByHostName(String hostname) {\n        if (hostname == null) {\n            return null;\n        }\n        hostmapLock.readLock().lock();\n        try {\n            String ipAddr = mapHost.get(hostname);\n            if (ipAddr == null) {\n                return null;\n            } else {\n                return getDatanodeByHost(ipAddr);\n            }\n        } finally {\n            hostmapLock.readLock().unlock();\n        }\n    }\n}\n", "sha256_hash": "4d57a5f85a7cfbddf1e6bc479a88df904731ad288202512c38d38657e8ed30e6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48e61e2c3adc67bebd5bd3a3ef19e0c8a99f537f002c24fb3aa74d4e1f12bab4.java|81|0", "index": 81, "orig_index": 81, "poison": 0}
{"language": "java", "identifier": "getCapacityRemaining", "target_tokens": ["get", "capacity", "remaining"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "capacityRemaining", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getCapacityRemaining"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getCapacityRemaining() {\n        return stats.capacityRemaining;\n    }\n}\n", "sha256_hash": "60eba108a081a20204aa1e4537daad6c6400a8426d14468853d9c9f03708cecc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48eaaeabb605f68ef74a03fbdf7aaa3770b4f5fcd9d2e34c111135928064fcd8.java|82|0", "index": 82, "orig_index": 82, "poison": 0}
{"language": "java", "identifier": "isDir", "target_tokens": ["is", "dir"], "source_tokens": ["(", ")", "{", "return", "isdir", ";", "}"], "elided_tokens": ["public", "final", "boolean", "isDir"], "source_code": "class WRAPPER {\npublic final boolean isDir() {\n        return isdir;\n    }\n}\n", "sha256_hash": "2aebba59727a8083f1bc75f80d32dfdcad1269132f863f34c1cd1b76321883f1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "48fc86f125fbfa39069ae081f92176e32fa52a515facd9e62c8a9d5e8bfd767c.java|83|0", "index": 83, "orig_index": 83, "poison": 0}
{"language": "java", "identifier": "setQueueInfo", "target_tokens": ["set", "queue", "info"], "source_tokens": ["(", "QueueInfo", "queueInfo", ")", "{", "maybeInitBuilder", "(", ")", ";", "if", "(", "queueInfo", "==", "null", ")", "{", "builder", ".", "clearQueueInfo", "(", ")", ";", "}", "this", ".", "queueInfo", "=", "queueInfo", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setQueueInfo"], "source_code": "class WRAPPER {\n@Override\n    public void setQueueInfo(QueueInfo queueInfo) {\n        maybeInitBuilder();\n        if (queueInfo == null) {\n            builder.clearQueueInfo();\n        }\n        this.queueInfo = queueInfo;\n    }\n}\n", "sha256_hash": "e6d67485cae3334ed01eff54260821c4ebcfe350a56756dfcb9f727276f1d73e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "492359326386eae271662337f50e0d9ed08b94f15d521cd7fdbf907709111b4f.java|84|0", "index": 84, "orig_index": 84, "poison": 0}
{"language": "java", "identifier": "create", "target_tokens": ["create"], "source_tokens": ["(", "Path", "file", ",", "FsPermission", "permission", ",", "boolean", "overwrite", ",", "int", "bufferSize", ",", "short", "replication", ",", "long", "blockSize", ",", "Progressable", "progress", ")", "throws", "IOException", "{", "final", "FTPClient", "client", "=", "connect", "(", ")", ";", "Path", "workDir", "=", "new", "Path", "(", "client", ".", "printWorkingDirectory", "(", ")", ")", ";", "Path", "absolute", "=", "makeAbsolute", "(", "workDir", ",", "file", ")", ";", "FileStatus", "status", ";", "try", "{", "status", "=", "getFileStatus", "(", "client", ",", "file", ")", ";", "}", "catch", "(", "FileNotFoundException", "fnfe", ")", "{", "status", "=", "null", ";", "}", "if", "(", "status", "!=", "null", ")", "{", "if", "(", "overwrite", "&&", "(", "!", "status", ".", "isDirectory", "(", ")", ")", ")", "{", "delete", "(", "client", ",", "file", ",", "false", ")", ";", "}", "else", "{", "disconnect", "(", "client", ")", ";", "throw", "new", "FileAlreadyExistsException", "(", "\"File already exists: \"", "+", "file", ")", ";", "}", "}", "Path", "parent", "=", "absolute", ".", "getParent", "(", ")", ";", "if", "(", "(", "parent", "==", "null", ")", "||", "(", "!", "mkdirs", "(", "client", ",", "parent", ",", "FsPermission", ".", "getDirDefault", "(", ")", ")", ")", ")", "{", "parent", "=", "(", "parent", "==", "null", ")", "?", "new", "Path", "(", "\"/\"", ")", ":", "parent", ";", "disconnect", "(", "client", ")", ";", "throw", "new", "IOException", "(", "\"create(): Mkdirs failed to create: \"", "+", "parent", ")", ";", "}", "client", ".", "allocate", "(", "bufferSize", ")", ";", "// Change to parent directory on the server. Only then can we write to the", "// file on the server by opening up an OutputStream. As a side effect the", "// working directory on the server is changed to the parent directory of the", "// file. The FTP client connection is closed when close() is called on the", "// FSDataOutputStream.", "client", ".", "changeWorkingDirectory", "(", "parent", ".", "toUri", "(", ")", ".", "getPath", "(", ")", ")", ";", "FSDataOutputStream", "fos", "=", "new", "FSDataOutputStream", "(", "client", ".", "storeFileStream", "(", "file", ".", "getName", "(", ")", ")", ",", "statistics", ")", "{", "@", "Override", "public", "void", "close", "(", ")", "throws", "IOException", "{", "super", ".", "close", "(", ")", ";", "if", "(", "!", "client", ".", "isConnected", "(", ")", ")", "{", "throw", "new", "FTPException", "(", "\"Client not connected\"", ")", ";", "}", "boolean", "cmdCompleted", "=", "client", ".", "completePendingCommand", "(", ")", ";", "disconnect", "(", "client", ")", ";", "if", "(", "!", "cmdCompleted", ")", "{", "throw", "new", "FTPException", "(", "\"Could not complete transfer, Reply Code - \"", "+", "client", ".", "getReplyCode", "(", ")", ")", ";", "}", "}", "}", ";", "if", "(", "!", "FTPReply", ".", "isPositivePreliminary", "(", "client", ".", "getReplyCode", "(", ")", ")", ")", "{", "// The ftpClient is an inconsistent state. Must close the stream", "// which in turn will logout and disconnect from FTP server", "fos", ".", "close", "(", ")", ";", "throw", "new", "IOException", "(", "(", "\"Unable to create file: \"", "+", "file", ")", "+", "\", Aborting\"", ")", ";", "}", "return", "fos", ";", "}"], "elided_tokens": ["@", "Override", "public", "FSDataOutputStream", "create"], "source_code": "class WRAPPER {\n@Override\n    public FSDataOutputStream create(Path file, FsPermission permission, boolean overwrite, int bufferSize, short replication, long blockSize, Progressable progress) throws IOException {\n        final FTPClient client = connect();\n        Path workDir = new Path(client.printWorkingDirectory());\n        Path absolute = makeAbsolute(workDir, file);\n        FileStatus status;\n        try {\n            status = getFileStatus(client, file);\n        } catch (FileNotFoundException fnfe) {\n            status = null;\n        }\n        if (status != null) {\n            if (overwrite && (!status.isDirectory())) {\n                delete(client, file, false);\n            } else {\n                disconnect(client);\n                throw new FileAlreadyExistsException(\"File already exists: \" + file);\n            }\n        }\n        Path parent = absolute.getParent();\n        if ((parent == null) || (!mkdirs(client, parent, FsPermission.getDirDefault()))) {\n            parent = (parent == null) ? new Path(\"/\") : parent;\n            disconnect(client);\n            throw new IOException(\"create(): Mkdirs failed to create: \" + parent);\n        }\n        client.allocate(bufferSize);\n        // Change to parent directory on the server. Only then can we write to the\n        // file on the server by opening up an OutputStream. As a side effect the\n        // working directory on the server is changed to the parent directory of the\n        // file. The FTP client connection is closed when close() is called on the\n        // FSDataOutputStream.\n        client.changeWorkingDirectory(parent.toUri().getPath());\n        FSDataOutputStream fos = new FSDataOutputStream(client.storeFileStream(file.getName()), statistics) {\n            @Override\n            public void close() throws IOException {\n                super.close();\n                if (!client.isConnected()) {\n                    throw new FTPException(\"Client not connected\");\n                }\n                boolean cmdCompleted = client.completePendingCommand();\n                disconnect(client);\n                if (!cmdCompleted) {\n                    throw new FTPException(\"Could not complete transfer, Reply Code - \" + client.getReplyCode());\n                }\n            }\n        };\n        if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n            // The ftpClient is an inconsistent state. Must close the stream\n            // which in turn will logout and disconnect from FTP server\n            fos.close();\n            throw new IOException((\"Unable to create file: \" + file) + \", Aborting\");\n        }\n        return fos;\n    }\n}\n", "sha256_hash": "879e3f5cc36bd7ebd68106ac91784e86c1f7112ee3c3d54e9733a2cc61d6f7ba", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "492af1aeb02d3a762c43c5ca00675657cfc26961dede240da004f88b5ae2b9a4.java|85|0", "index": 85, "orig_index": 85, "poison": 0}
{"language": "java", "identifier": "address", "target_tokens": ["address"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "address_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "ADDRESS", "<", "TD", "<", "T", ">", ">", "address"], "source_code": "class WRAPPER {\n@Override\n    public ADDRESS<TD<T>> address() {\n        closeAttrs();\n        return address_(this, false);\n    }\n}\n", "sha256_hash": "d8f313fa2ee3e485fe6d765ccea03595eab45646b9ae5f04d4af7574bcb80125", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "494131d47b8d79a985135432f1356b435241beace74eb83b67389df8a34dfb81.java|86|0", "index": 86, "orig_index": 86, "poison": 0}
{"language": "java", "identifier": "isExcluded", "target_tokens": ["is", "excluded"], "source_tokens": ["(", "DatanodeID", "dn", ")", "{", "return", "excludes", ".", "match", "(", "resolvedAddressFromDatanodeID", "(", "dn", ")", ")", ";", "}"], "elided_tokens": ["synchronized", "boolean", "isExcluded"], "source_code": "class WRAPPER {\nsynchronized boolean isExcluded(DatanodeID dn) {\n        return excludes.match(resolvedAddressFromDatanodeID(dn));\n    }\n}\n", "sha256_hash": "711c9044dc498d8f390489c2ad5c949e7466f1523ec58c8748dd0777eaf91f36", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4947bbf8cab692dc544af9a4845a04cf4e0d425e35c82cb8bdf4f7b1f34253be.java|87|0", "index": 87, "orig_index": 87, "poison": 0}
{"language": "java", "identifier": "convertToProtoFormat", "target_tokens": ["convert", "to", "proto", "format"], "source_tokens": ["(", "ContainerStatus", "t", ")", "{", "return", "(", "(", "ContainerStatusPBImpl", ")", "(", "t", ")", ")", ".", "getProto", "(", ")", ";", "}"], "elided_tokens": ["private", "ContainerStatusProto", "convertToProtoFormat"], "source_code": "class WRAPPER {\nprivate ContainerStatusProto convertToProtoFormat(ContainerStatus t) {\n        return ((ContainerStatusPBImpl) (t)).getProto();\n    }\n}\n", "sha256_hash": "14998fd6cbe44f8cede6e1e570ed85a09dde819897470f865fe5546c6ce0cf88", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4973a4980f47948d2a20c410019a99f887a6ea542e4230f4196d937b5bbeb5b8.java|88|0", "index": 88, "orig_index": 88, "poison": 0}
{"language": "java", "identifier": "removeCallback", "target_tokens": ["remove", "callback"], "source_tokens": ["(", "Callback", "cb", ")", "{", "callbacks", ".", "remove", "(", "cb", ")", ";", "}"], "elided_tokens": ["public", "void", "removeCallback"], "source_code": "class WRAPPER {\npublic void removeCallback(Callback cb) {\n        callbacks.remove(cb);\n    }\n}\n", "sha256_hash": "ae57b5443135adde1ddb37e1bd1b876946c34d3ca8a3df5b64963945d0a46c03", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "497d16ecd30e18e8de074d90fe1fa1387e33ea04bdd1190628c11dd51b125c8a.java|89|0", "index": 89, "orig_index": 89, "poison": 0}
{"language": "java", "identifier": "unpack", "target_tokens": ["unpack"], "source_tokens": ["(", "GenericRefreshResponseProto", "proto", ")", "{", "// The default values", "String", "message", "=", "null", ";", "String", "sender", "=", "null", ";", "int", "returnCode", "=", "-", "1", ";", "// ... that can be overridden by data from the protobuf", "if", "(", "proto", ".", "hasUserMessage", "(", ")", ")", "{", "message", "=", "proto", ".", "getUserMessage", "(", ")", ";", "}", "if", "(", "proto", ".", "hasExitStatus", "(", ")", ")", "{", "returnCode", "=", "proto", ".", "getExitStatus", "(", ")", ";", "}", "if", "(", "proto", ".", "hasSenderName", "(", ")", ")", "{", "sender", "=", "proto", ".", "getSenderName", "(", ")", ";", "}", "// ... and put into a RefreshResponse", "RefreshResponse", "response", "=", "new", "RefreshResponse", "(", "returnCode", ",", "message", ")", ";", "response", ".", "setSenderName", "(", "sender", ")", ";", "return", "response", ";", "}"], "elided_tokens": ["private", "RefreshResponse", "unpack"], "source_code": "class WRAPPER {\nprivate RefreshResponse unpack(GenericRefreshResponseProto proto) {\n        // The default values\n        String message = null;\n        String sender = null;\n        int returnCode = -1;\n        // ... that can be overridden by data from the protobuf\n        if (proto.hasUserMessage()) {\n            message = proto.getUserMessage();\n        }\n        if (proto.hasExitStatus()) {\n            returnCode = proto.getExitStatus();\n        }\n        if (proto.hasSenderName()) {\n            sender = proto.getSenderName();\n        }\n        // ... and put into a RefreshResponse\n        RefreshResponse response = new RefreshResponse(returnCode, message);\n        response.setSenderName(sender);\n        return response;\n    }\n}\n", "sha256_hash": "bdd686fd76b4f95feef26275ef915505d76bca4f23bb731c994fde4e74702f4d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "499fa47db326987f44550db1134a780be002d5997ac8ba2dda0ea37d8f26ab8b.java|90|0", "index": 90, "orig_index": 90, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "KBD", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public KBD<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "ba691040e3e2402b1f8ec668ebc8d26bed0a1fd23640254db06486e47ad03366", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "49a95dedfd46369fb90867bc35391e3069921e5ebf6911469ffc6d13e8128f5c.java|91|0", "index": 91, "orig_index": 91, "poison": 0}
{"language": "java", "identifier": "startStorage", "target_tokens": ["start", "storage"], "source_tokens": ["(", ")", "throws", "IOException", "{", "fs", "=", "createFileSystem", "(", ")", ";", "createDir", "(", "rootStatePath", ")", ";", "tokenStatePath", "=", "new", "Path", "(", "rootStatePath", ",", "TOKEN_STATE_DIR_NAME", ")", ";", "createDir", "(", "tokenStatePath", ")", ";", "tokenKeysStatePath", "=", "new", "Path", "(", "tokenStatePath", ",", "TOKEN_KEYS_DIR_NAME", ")", ";", "createDir", "(", "tokenKeysStatePath", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "NUM_TOKEN_BUCKETS", ";", "++", "i", ")", "{", "createDir", "(", "getTokenBucketPath", "(", "i", ")", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "protected", "void", "startStorage"], "source_code": "class WRAPPER {\n@Override\n    protected void startStorage() throws IOException {\n        fs = createFileSystem();\n        createDir(rootStatePath);\n        tokenStatePath = new Path(rootStatePath, TOKEN_STATE_DIR_NAME);\n        createDir(tokenStatePath);\n        tokenKeysStatePath = new Path(tokenStatePath, TOKEN_KEYS_DIR_NAME);\n        createDir(tokenKeysStatePath);\n        for (int i = 0; i < NUM_TOKEN_BUCKETS; ++i) {\n            createDir(getTokenBucketPath(i));\n        }\n    }\n}\n", "sha256_hash": "7f3c447107036839bfe37055f97dfe72ba486d76ed5943a1fea86bad9034d4b4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "49f9a9c1a8ece46a558753350d4a492d2fbed1ebe79d437c1dc878ec2ba3b207.java|92|0", "index": 92, "orig_index": 92, "poison": 0}
{"language": "java", "identifier": "getConfForOtherNode", "target_tokens": ["get", "conf", "for", "other", "node"], "source_tokens": ["(", "Configuration", "myConf", ")", "{", "String", "nsId", "=", "DFSUtil", ".", "getNamenodeNameServiceId", "(", "myConf", ")", ";", "String", "otherNn", "=", "getNameNodeIdOfOtherNode", "(", "myConf", ",", "nsId", ")", ";", "// Look up the address of the active NN.", "Configuration", "confForOtherNode", "=", "new", "Configuration", "(", "myConf", ")", ";", "NameNode", ".", "initializeGenericKeys", "(", "confForOtherNode", ",", "nsId", ",", "otherNn", ")", ";", "return", "confForOtherNode", ";", "}"], "elided_tokens": ["public", "static", "Configuration", "getConfForOtherNode"], "source_code": "class WRAPPER {\npublic static Configuration getConfForOtherNode(Configuration myConf) {\n        String nsId = DFSUtil.getNamenodeNameServiceId(myConf);\n        String otherNn = getNameNodeIdOfOtherNode(myConf, nsId);\n        // Look up the address of the active NN.\n        Configuration confForOtherNode = new Configuration(myConf);\n        NameNode.initializeGenericKeys(confForOtherNode, nsId, otherNn);\n        return confForOtherNode;\n    }\n}\n", "sha256_hash": "a4bc6aed4b8b175d415e99cc183099ab2553c568fec8ec2a7a1bb4efbd780f91", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4a13c9e4afd3cdf8acf0ed3a4fd33c2dcc4ef189c5423a1e2b67ad26761c21ce.java|93|0", "index": 93, "orig_index": 93, "poison": 0}
{"language": "java", "identifier": "onmouseup", "target_tokens": ["onmouseup"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"onmouseup\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "$", "onmouseup"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> $onmouseup(String value) {\n        addAttr(\"onmouseup\", value);\n        return this;\n    }\n}\n", "sha256_hash": "868a01c7f4e429f912642e9737f40ce3521d95c20abcbd2728739d788f266587", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4a23269af62753ae326504168b2a456584cd077e853a9ebbad87bdec73f154f7.java|94|0", "index": 94, "orig_index": 94, "poison": 0}
{"language": "java", "identifier": "setStartRange", "target_tokens": ["set", "start", "range"], "source_tokens": ["(", "long", "begin", ",", "long", "end", ")", "throws", "IllegalArgumentException", "{", "if", "(", "begin", ">", "end", ")", "{", "throw", "new", "IllegalArgumentException", "(", "(", "(", "(", "(", "\"begin > end in range (begin, \"", "+", "\"end): (\"", ")", "+", "begin", ")", "+", "\", \"", ")", "+", "end", ")", "+", "\")\"", ")", ";", "}", "this", ".", "start", "=", "new", "LongRange", "(", "begin", ",", "end", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setStartRange"], "source_code": "class WRAPPER {\n@Override\n    public void setStartRange(long begin, long end) throws IllegalArgumentException {\n        if (begin > end) {\n            throw new IllegalArgumentException(((((\"begin > end in range (begin, \" + \"end): (\") + begin) + \", \") + end) + \")\");\n        }\n        this.start = new LongRange(begin, end);\n    }\n}\n", "sha256_hash": "d49bf6ed177e0a598813864f8a89a9b3f9bab824b5502e06f694310995db9008", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4a54b615f550abfc9fff082c1c4a2da899169c52c45c875bdd63d1f684ac068a.java|95|0", "index": 95, "orig_index": 95, "poison": 0}
{"language": "java", "identifier": "setFailoverConfigurations", "target_tokens": ["set", "failover", "configurations"], "source_tokens": ["(", "Configuration", "conf", ",", "String", "logicalName", ",", "InetSocketAddress", "nnAddr1", ",", "InetSocketAddress", "nnAddr2", ")", "{", "String", "nameNodeId1", "=", "\"nn1\"", ";", "String", "nameNodeId2", "=", "\"nn2\"", ";", "String", "address1", "=", "(", "(", "\"hdfs://\"", "+", "nnAddr1", ".", "getHostName", "(", ")", ")", "+", "\":\"", ")", "+", "nnAddr1", ".", "getPort", "(", ")", ";", "String", "address2", "=", "(", "(", "\"hdfs://\"", "+", "nnAddr2", ".", "getHostName", "(", ")", ")", "+", "\":\"", ")", "+", "nnAddr2", ".", "getPort", "(", ")", ";", "conf", ".", "set", "(", "DFSUtil", ".", "addKeySuffixes", "(", "DFS_NAMENODE_RPC_ADDRESS_KEY", ",", "logicalName", ",", "nameNodeId1", ")", ",", "address1", ")", ";", "conf", ".", "set", "(", "DFSUtil", ".", "addKeySuffixes", "(", "DFS_NAMENODE_RPC_ADDRESS_KEY", ",", "logicalName", ",", "nameNodeId2", ")", ",", "address2", ")", ";", "conf", ".", "set", "(", "DFSConfigKeys", ".", "DFS_NAMESERVICES", ",", "logicalName", ")", ";", "conf", ".", "set", "(", "DFSUtil", ".", "addKeySuffixes", "(", "DFS_HA_NAMENODES_KEY_PREFIX", ",", "logicalName", ")", ",", "(", "nameNodeId1", "+", "\",\"", ")", "+", "nameNodeId2", ")", ";", "conf", ".", "set", "(", "(", "DFS_CLIENT_FAILOVER_PROXY_PROVIDER_KEY_PREFIX", "+", "\".\"", ")", "+", "logicalName", ",", "ConfiguredFailoverProxyProvider", ".", "class", ".", "getName", "(", ")", ")", ";", "conf", ".", "set", "(", "\"fs.defaultFS\"", ",", "\"hdfs://\"", "+", "logicalName", ")", ";", "}"], "elided_tokens": ["public", "static", "void", "setFailoverConfigurations"], "source_code": "class WRAPPER {\npublic static void setFailoverConfigurations(Configuration conf, String logicalName, InetSocketAddress nnAddr1, InetSocketAddress nnAddr2) {\n        String nameNodeId1 = \"nn1\";\n        String nameNodeId2 = \"nn2\";\n        String address1 = ((\"hdfs://\" + nnAddr1.getHostName()) + \":\") + nnAddr1.getPort();\n        String address2 = ((\"hdfs://\" + nnAddr2.getHostName()) + \":\") + nnAddr2.getPort();\n        conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY, logicalName, nameNodeId1), address1);\n        conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY, logicalName, nameNodeId2), address2);\n        conf.set(DFSConfigKeys.DFS_NAMESERVICES, logicalName);\n        conf.set(DFSUtil.addKeySuffixes(DFS_HA_NAMENODES_KEY_PREFIX, logicalName), (nameNodeId1 + \",\") + nameNodeId2);\n        conf.set((DFS_CLIENT_FAILOVER_PROXY_PROVIDER_KEY_PREFIX + \".\") + logicalName, ConfiguredFailoverProxyProvider.class.getName());\n        conf.set(\"fs.defaultFS\", \"hdfs://\" + logicalName);\n    }\n}\n", "sha256_hash": "6c8208940755205772c530c93d7d213392ff14ce40256cb7decac7ca9b069cec", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4a6a31b7a99986d28b751006de00b8d3f3b0c123ea38d8d1c3a596b4ee467186.java|96|0", "index": 96, "orig_index": 96, "poison": 0}
{"language": "java", "identifier": "shouldAllowStandbyReads", "target_tokens": ["should", "allow", "standby", "reads"], "source_tokens": ["(", "Configuration", "conf", ")", "{", "return", "conf", ".", "getBoolean", "(", "\"dfs.ha.allow.stale.reads\"", ",", "false", ")", ";", "}"], "elided_tokens": ["public", "static", "boolean", "shouldAllowStandbyReads"], "source_code": "class WRAPPER {\npublic static boolean shouldAllowStandbyReads(Configuration conf) {\n        return conf.getBoolean(\"dfs.ha.allow.stale.reads\", false);\n    }\n}\n", "sha256_hash": "0aea5adcba31309a4713bf689baa6cec60b222a1d3d84da78874e19cd89353d4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4aca985dd075afd8c3616c7e60e4e6935c5646c7e75b076b6bd92483d350a130.java|97|0", "index": 97, "orig_index": 97, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetNewApplicationResponseProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetNewApplicationResponseProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "c730ab0fc9a42ff9047a42e3007c2bd3c78d3ed2ac7fe495891f546f8438142b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4ad5a020721cbbe081dc11c1a6d33f38d95079acb2e5c90958782b3c718533f3.java|98|0", "index": 98, "orig_index": 98, "poison": 0}
{"language": "java", "identifier": "buildTokenServicePrefixForLogicalUri", "target_tokens": ["build", "token", "service", "prefix", "for", "logical", "uri"], "source_tokens": ["(", "String", "scheme", ")", "{", "return", "(", "HA_DT_SERVICE_PREFIX", "+", "scheme", ")", "+", "\":\"", ";", "}"], "elided_tokens": ["public", "static", "String", "buildTokenServicePrefixForLogicalUri"], "source_code": "class WRAPPER {\npublic static String buildTokenServicePrefixForLogicalUri(String scheme) {\n        return (HA_DT_SERVICE_PREFIX + scheme) + \":\";\n    }\n}\n", "sha256_hash": "46f0deb717ac123865bdc133b9562240ba5220da2b14e31b1df9f73ccb558358", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4aee2d2b5ca335b8f83a533a331c89ed666b335f7a77b9aa8bf4c7c8a2a73670.java|99|0", "index": 99, "orig_index": 99, "poison": 0}
{"language": "java", "identifier": "removeAclEntries", "target_tokens": ["remove", "acl", "entries"], "source_tokens": ["(", "Path", "path", ",", "List", "<", "AclEntry", ">", "aclSpec", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "REMOVEACLENTRIES", ".", "toString", "(", ")", ")", ";", "params", ".", "put", "(", "ACLSPEC_PARAM", ",", "AclEntry", ".", "aclSpecToString", "(", "aclSpec", ")", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "REMOVEACLENTRIES", ".", "getMethod", "(", ")", ",", "params", ",", "path", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeAclEntries"], "source_code": "class WRAPPER {\n@Override\n    public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.REMOVEACLENTRIES.toString());\n        params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec));\n        HttpURLConnection conn = getConnection(Operation.REMOVEACLENTRIES.getMethod(), params, path, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n    }\n}\n", "sha256_hash": "0b04bb57c7d760ca1fbb9452be5b82ab93d3dbf0aeda9884540d7cae57087bbc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b1c7016514b3439254b6349a6cce64f9da3266d5a92e1bad91cb9f4d9b6d366.java|100|0", "index": 100, "orig_index": 100, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetContainersRequestProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetContainersRequestProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "b773771c214f7ae8ec42e38c829f8f01fc702ccc4dd43334aaa84e771cdc191e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b35beb63b619aba20a4218904a60284464815bdbaf6d72dede35f980b4abaa2.java|101|0", "index": 101, "orig_index": 101, "poison": 0}
{"language": "java", "identifier": "startDecommission", "target_tokens": ["start", "decommission"], "source_tokens": ["(", "final", "DatanodeDescriptor", "node", ")", "{", "stats", ".", "subtract", "(", "node", ")", ";", "node", ".", "startDecommission", "(", ")", ";", "stats", ".", "add", "(", "node", ")", ";", "}"], "elided_tokens": ["synchronized", "void", "startDecommission"], "source_code": "class WRAPPER {\nsynchronized void startDecommission(final DatanodeDescriptor node) {\n        stats.subtract(node);\n        node.startDecommission();\n        stats.add(node);\n    }\n}\n", "sha256_hash": "054ea43b2331fc9717828d6548d301d86afb66bec3cc7a27967bd238dd58a306", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b71a0f46c3eec0c8cf376618d13024ec7ebba7a6658491722e9d886ec28c4ad.java|102|0", "index": 102, "orig_index": 102, "poison": 0}
{"language": "java", "identifier": "getJobAttempts", "target_tokens": ["get", "job", "attempts"], "source_tokens": ["(", "@", "PathParam", "(", "\"jobid\"", ")", "String", "jid", ")", "{", "init", "(", ")", ";", "Job", "job", "=", "AMWebServices", ".", "getJobFromJobIdString", "(", "jid", ",", "ctx", ")", ";", "AMAttemptsInfo", "amAttempts", "=", "new", "AMAttemptsInfo", "(", ")", ";", "for", "(", "AMInfo", "amInfo", ":", "job", ".", "getAMInfos", "(", ")", ")", "{", "AMAttemptInfo", "attempt", "=", "new", "AMAttemptInfo", "(", "amInfo", ",", "MRApps", ".", "toString", "(", "job", ".", "getID", "(", ")", ")", ",", "job", ".", "getUserName", "(", ")", ",", "uriInfo", ".", "getBaseUri", "(", ")", ".", "toString", "(", ")", ",", "webapp", ".", "name", "(", ")", ")", ";", "amAttempts", ".", "add", "(", "attempt", ")", ";", "}", "return", "amAttempts", ";", "}"], "elided_tokens": ["@", "GET", "@", "Path", "(", "\"/mapreduce/jobs/{jobid}/jobattempts\"", ")", "@", "Produces", "(", "{", "MediaType", ".", "APPLICATION_JSON", ",", "MediaType", ".", "APPLICATION_XML", "}", ")", "public", "AMAttemptsInfo", "getJobAttempts"], "source_code": "class WRAPPER {\n@GET\n    @Path(\"/mapreduce/jobs/{jobid}/jobattempts\")\n    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n    public AMAttemptsInfo getJobAttempts(@PathParam(\"jobid\")\n    String jid) {\n        init();\n        Job job = AMWebServices.getJobFromJobIdString(jid, ctx);\n        AMAttemptsInfo amAttempts = new AMAttemptsInfo();\n        for (AMInfo amInfo : job.getAMInfos()) {\n            AMAttemptInfo attempt = new AMAttemptInfo(amInfo, MRApps.toString(job.getID()), job.getUserName(), uriInfo.getBaseUri().toString(), webapp.name());\n            amAttempts.add(attempt);\n        }\n        return amAttempts;\n    }\n}\n", "sha256_hash": "87db3b1459356608e8852bdcc68158045adffb32b9c4d6cbf345460f67d7a449", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b804abb1019f711939b4ce3e8f554eb052b48818f91fcc1f2de3538cb33b3c6.java|103|0", "index": 103, "orig_index": 103, "poison": 0}
{"language": "java", "identifier": "i", "target_tokens": ["i"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "i", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "i"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> i(String selector, String cdata) {\n        return setSelector(i(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "811514e1f36d1e7403c85654cf9272388baf694a56d63eb65eb110130407a0b1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b808af8b7bcf0eccf4272d38f01ebbbad998055ec193062371a6b91af03c801.java|104|0", "index": 104, "orig_index": 104, "poison": 0}
{"language": "java", "identifier": "render", "target_tokens": ["render"], "source_tokens": ["(", ")", "{", "puts", "(", "DOCTYPE", ")", ";", "render", "(", "page", "(", ")", ".", "html", "(", ")", ".", "meta_http", "(", "\"X-UA-Compatible\"", ",", "\"IE=8\"", ")", ".", "meta_http", "(", "\"Content-type\"", ",", "MimeType", ".", "HTML", ")", ")", ";", "if", "(", "page", "(", ")", ".", "nestLevel", "(", ")", "!=", "0", ")", "{", "throw", "new", "WebAppException", "(", "\"Error rendering page: nestLevel=\"", "+", "page", "(", ")", ".", "nestLevel", "(", ")", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "void", "render"], "source_code": "class WRAPPER {\n@Override\n    public void render() {\n        puts(DOCTYPE);\n        render(page().html().meta_http(\"X-UA-Compatible\", \"IE=8\").meta_http(\"Content-type\", MimeType.HTML));\n        if (page().nestLevel() != 0) {\n            throw new WebAppException(\"Error rendering page: nestLevel=\" + page().nestLevel());\n        }\n    }\n}\n", "sha256_hash": "07797ea7ddb469eb2dfebd6c125bb50f7022889f3249ce7d719e4e95c723197a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b81918705dcdd7f324299fb33740d8874296daf723ac2862d114b81f183d724.java|105|0", "index": 105, "orig_index": 105, "poison": 0}
{"language": "java", "identifier": "getHistoryInfo", "target_tokens": ["get", "history", "info"], "source_tokens": ["(", ")", "{", "init", "(", ")", ";", "return", "new", "HistoryInfo", "(", ")", ";", "}"], "elided_tokens": ["@", "GET", "@", "Path", "(", "\"/info\"", ")", "@", "Produces", "(", "{", "MediaType", ".", "APPLICATION_JSON", ",", "MediaType", ".", "APPLICATION_XML", "}", ")", "public", "HistoryInfo", "getHistoryInfo"], "source_code": "class WRAPPER {\n@GET\n    @Path(\"/info\")\n    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n    public HistoryInfo getHistoryInfo() {\n        init();\n        return new HistoryInfo();\n    }\n}\n", "sha256_hash": "0afb05ae485ce72fd9e6e5ea1b8ba3490ce242618edbdb6afd330dedc3a0fd39", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4b9c5f473be93476737db2575ceb21e58f45a8153209fd3969d55a5320f46a7d.java|106|0", "index": 106, "orig_index": 106, "poison": 0}
{"language": "java", "identifier": "cite", "target_tokens": ["cite"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "cite", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "cite"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> cite(String selector, String cdata) {\n        return setSelector(cite(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "2b246ac62c4345b9ab2258cfd251795c59f8bb7912206cc923a86a0724686740", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4c2da719bcfa9206e73bf3d906884ccd4d936f6ec194339fa9edab7adcc5c3d0.java|107|0", "index": 107, "orig_index": 107, "poison": 0}
{"language": "java", "identifier": "testRemoveXAttrPermissions", "target_tokens": ["test", "remove", "x", "attr", "permissions"], "source_tokens": ["(", ")", "throws", "Exception", "{", "FileSystem", ".", "mkdirs", "(", "fs", ",", "path", ",", "FsPermission", ".", "createImmutable", "(", "(", "(", "short", ")", "(", "0750", ")", ")", ")", ")", ";", "fs", ".", "setXAttr", "(", "path", ",", "name1", ",", "value1", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "fs", ".", "setXAttr", "(", "path", ",", "name2", ",", "value2", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "fs", ".", "setXAttr", "(", "path", ",", "name3", ",", "null", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "try", "{", "fs", ".", "removeXAttr", "(", "path", ",", "name2", ")", ";", "fs", ".", "removeXAttr", "(", "path", ",", "name2", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"No matching attributes found\"", ",", "e", ")", ";", "}", "/* Unknown namespace should throw an exception. */", "final", "String", "expectedExceptionString", "=", "\"An XAttr name must be prefixed \"", "+", "\"with user/trusted/security/system/raw, followed by a '.'\"", ";", "try", "{", "fs", ".", "removeXAttr", "(", "path", ",", "\"wackynamespace.foo\"", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "RemoteException", "e", ")", "{", "assertEquals", "(", "\"Unexpected RemoteException: \"", "+", "e", ",", "e", ".", "getClassName", "(", ")", ",", "HadoopIllegalArgumentException", ".", "class", ".", "getCanonicalName", "(", ")", ")", ";", "GenericTestUtils", ".", "assertExceptionContains", "(", "expectedExceptionString", ",", "e", ")", ";", "}", "catch", "(", "HadoopIllegalArgumentException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "expectedExceptionString", ",", "e", ")", ";", "}", "/* The 'trusted' namespace should not be accessible and should throw an\n        exception.\n         */", "final", "UserGroupInformation", "user", "=", "UserGroupInformation", ".", "createUserForTesting", "(", "\"user\"", ",", "new", "String", "[", "]", "{", "\"mygroup\"", "}", ")", ";", "fs", ".", "setXAttr", "(", "path", ",", "\"trusted.foo\"", ",", "\"1234\"", ".", "getBytes", "(", ")", ")", ";", "try", "{", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "userFs", ".", "removeXAttr", "(", "path", ",", "\"trusted.foo\"", ")", ";", "return", "null", ";", "}", "}", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"User doesn't have permission\"", ",", "e", ")", ";", "}", "finally", "{", "fs", ".", "removeXAttr", "(", "path", ",", "\"trusted.foo\"", ")", ";", "}", "/* Test that an exception is thrown if the caller doesn't have permission to\n        get the value of the xattr.\n         */", "/* Set access so that only the owner has access. */", "fs", ".", "setPermission", "(", "path", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0700", ")", ")", ")", ")", ";", "try", "{", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "userFs", ".", "removeXAttr", "(", "path", ",", "name1", ")", ";", "return", "null", ";", "}", "}", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"Permission denied\"", ",", "e", ")", ";", "}", "/* The caller must have \"execute\" (scan) access to the parent directory. */", "final", "Path", "childDir", "=", "new", "Path", "(", "path", ",", "\"child\"", "+", "pathCount", ")", ";", "/* Set access to parent so that only the owner has access. */", "FileSystem", ".", "mkdirs", "(", "fs", ",", "childDir", ",", "FsPermission", ".", "createImmutable", "(", "(", "(", "short", ")", "(", "0700", ")", ")", ")", ")", ";", "fs", ".", "setXAttr", "(", "childDir", ",", "name1", ",", "\"1234\"", ".", "getBytes", "(", ")", ")", ";", "try", "{", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "userFs", ".", "removeXAttr", "(", "childDir", ",", "name1", ")", ";", "return", "null", ";", "}", "}", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"Permission denied\"", ",", "e", ")", ";", "}", "/* Check that read access to the owning directory is not good enough. */", "fs", ".", "setPermission", "(", "path", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0704", ")", ")", ")", ")", ";", "try", "{", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "userFs", ".", "removeXAttr", "(", "childDir", ",", "name1", ")", ";", "return", "null", ";", "}", "}", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"Permission denied\"", ",", "e", ")", ";", "}", "/* Check that execute access to the owning directory and scan access to\n        the actual entity with extended attributes is not good enough.\n         */", "fs", ".", "setPermission", "(", "path", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0701", ")", ")", ")", ")", ";", "fs", ".", "setPermission", "(", "childDir", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0701", ")", ")", ")", ")", ";", "try", "{", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "userFs", ".", "removeXAttr", "(", "childDir", ",", "name1", ")", ";", "return", "null", ";", "}", "}", ")", ";", "Assert", ".", "fail", "(", "\"expected IOException\"", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"Permission denied\"", ",", "e", ")", ";", "}", "/* Check that execute access to the owning directory and write access to\n        the actual entity with extended attributes is good enough.\n         */", "fs", ".", "setPermission", "(", "path", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0701", ")", ")", ")", ")", ";", "fs", ".", "setPermission", "(", "childDir", ",", "new", "FsPermission", "(", "(", "(", "short", ")", "(", "0706", ")", ")", ")", ")", ";", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "userFs", ".", "removeXAttr", "(", "childDir", ",", "name1", ")", ";", "return", "null", ";", "}", "}", ")", ";", "}"], "elided_tokens": ["@", "Test", "(", "timeout", "=", "120000", ")", "public", "void", "testRemoveXAttrPermissions"], "source_code": "class WRAPPER {\n@Test(timeout = 120000)\n    public void testRemoveXAttrPermissions() throws Exception {\n        FileSystem.mkdirs(fs, path, FsPermission.createImmutable(((short) (0750))));\n        fs.setXAttr(path, name1, value1, EnumSet.of(XAttrSetFlag.CREATE));\n        fs.setXAttr(path, name2, value2, EnumSet.of(XAttrSetFlag.CREATE));\n        fs.setXAttr(path, name3, null, EnumSet.of(XAttrSetFlag.CREATE));\n        try {\n            fs.removeXAttr(path, name2);\n            fs.removeXAttr(path, name2);\n            Assert.fail(\"expected IOException\");\n        } catch (IOException e) {\n            GenericTestUtils.assertExceptionContains(\"No matching attributes found\", e);\n        }\n        /* Unknown namespace should throw an exception. */\n        final String expectedExceptionString = \"An XAttr name must be prefixed \" + \"with user/trusted/security/system/raw, followed by a '.'\";\n        try {\n            fs.removeXAttr(path, \"wackynamespace.foo\");\n            Assert.fail(\"expected IOException\");\n        } catch (RemoteException e) {\n            assertEquals(\"Unexpected RemoteException: \" + e, e.getClassName(), HadoopIllegalArgumentException.class.getCanonicalName());\n            GenericTestUtils.assertExceptionContains(expectedExceptionString, e);\n        } catch (HadoopIllegalArgumentException e) {\n            GenericTestUtils.assertExceptionContains(expectedExceptionString, e);\n        }\n        /* The 'trusted' namespace should not be accessible and should throw an\n        exception.\n         */\n        final UserGroupInformation user = UserGroupInformation.createUserForTesting(\"user\", new String[]{ \"mygroup\" });\n        fs.setXAttr(path, \"trusted.foo\", \"1234\".getBytes());\n        try {\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    userFs.removeXAttr(path, \"trusted.foo\");\n                    return null;\n                }\n            });\n            Assert.fail(\"expected IOException\");\n        } catch (IOException e) {\n            GenericTestUtils.assertExceptionContains(\"User doesn't have permission\", e);\n        } finally {\n            fs.removeXAttr(path, \"trusted.foo\");\n        }\n        /* Test that an exception is thrown if the caller doesn't have permission to\n        get the value of the xattr.\n         */\n        /* Set access so that only the owner has access. */\n        fs.setPermission(path, new FsPermission(((short) (0700))));\n        try {\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    userFs.removeXAttr(path, name1);\n                    return null;\n                }\n            });\n            Assert.fail(\"expected IOException\");\n        } catch (IOException e) {\n            GenericTestUtils.assertExceptionContains(\"Permission denied\", e);\n        }\n        /* The caller must have \"execute\" (scan) access to the parent directory. */\n        final Path childDir = new Path(path, \"child\" + pathCount);\n        /* Set access to parent so that only the owner has access. */\n        FileSystem.mkdirs(fs, childDir, FsPermission.createImmutable(((short) (0700))));\n        fs.setXAttr(childDir, name1, \"1234\".getBytes());\n        try {\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    userFs.removeXAttr(childDir, name1);\n                    return null;\n                }\n            });\n            Assert.fail(\"expected IOException\");\n        } catch (IOException e) {\n            GenericTestUtils.assertExceptionContains(\"Permission denied\", e);\n        }\n        /* Check that read access to the owning directory is not good enough. */\n        fs.setPermission(path, new FsPermission(((short) (0704))));\n        try {\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    userFs.removeXAttr(childDir, name1);\n                    return null;\n                }\n            });\n            Assert.fail(\"expected IOException\");\n        } catch (IOException e) {\n            GenericTestUtils.assertExceptionContains(\"Permission denied\", e);\n        }\n        /* Check that execute access to the owning directory and scan access to\n        the actual entity with extended attributes is not good enough.\n         */\n        fs.setPermission(path, new FsPermission(((short) (0701))));\n        fs.setPermission(childDir, new FsPermission(((short) (0701))));\n        try {\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    userFs.removeXAttr(childDir, name1);\n                    return null;\n                }\n            });\n            Assert.fail(\"expected IOException\");\n        } catch (IOException e) {\n            GenericTestUtils.assertExceptionContains(\"Permission denied\", e);\n        }\n        /* Check that execute access to the owning directory and write access to\n        the actual entity with extended attributes is good enough.\n         */\n        fs.setPermission(path, new FsPermission(((short) (0701))));\n        fs.setPermission(childDir, new FsPermission(((short) (0706))));\n        user.doAs(new PrivilegedExceptionAction<Object>() {\n            @Override\n            public Object run() throws Exception {\n                final FileSystem userFs = dfsCluster.getFileSystem();\n                userFs.removeXAttr(childDir, name1);\n                return null;\n            }\n        });\n    }\n}\n", "sha256_hash": "7f41024f869dbf364a98361acb88d7e2ea2fc3c968f781986e592aaf08570211", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4c58fa0a7cb94951d438de5ae71fabe597016c557fc62c3be6f80cdda66673d7.java|108|0", "index": 108, "orig_index": 108, "poison": 0}
{"language": "java", "identifier": "updateToken", "target_tokens": ["update", "token"], "source_tokens": ["(", "MRDelegationTokenIdentifier", "tokenId", ",", "Long", "renewDate", ")", "throws", "IOException", "{", "// Do nothing", "}"], "elided_tokens": ["@", "Override", "public", "void", "updateToken"], "source_code": "class WRAPPER {\n@Override\n    public void updateToken(MRDelegationTokenIdentifier tokenId, Long renewDate) throws IOException {\n        // Do nothing\n    }\n}\n", "sha256_hash": "4746ef660ec8cdfffa65224d5e0884f2daee0ebba8259e4ce36d3b6c3946ea2a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4c5c1617462c5cff2594a5f0e17b0cd992fcb4deebb7be91dffb722f0d6eea7a.java|109|0", "index": 109, "orig_index": 109, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "DEL", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public DEL<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "b0b1cba498d12db945c06b358c455c533b8b5da52137eaab46a4b0a43c1e07f9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4c6f3164725905077aa06aa35cb30871e979b0491e0ae1977d365510df923ee8.java|110|0", "index": 110, "orig_index": 110, "poison": 0}
{"language": "java", "identifier": "hreflang", "target_tokens": ["hreflang"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"hreflang\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "A", "<", "T", ">", "$", "hreflang"], "source_code": "class WRAPPER {\n@Override\n    public A<T> $hreflang(String value) {\n        addAttr(\"hreflang\", value);\n        return this;\n    }\n}\n", "sha256_hash": "8e0edc6c23429e31bdac8e1f7031eebd12e8c17ccb8cbaf06b73c5b9687fe7a7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4c7f8d58c7ed7c69d52100c3013e6bf8034b1b58b6e90065349aff25b07689c4.java|111|0", "index": 111, "orig_index": 111, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetClusterNodesRequestProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetClusterNodesRequestProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "65a239b576d24b1242dd8dc7c1d644559eee2c871a6902f5592c4681a19202e1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4c8a25f3188651fac46aa31fc7bf2c715ba3696ea939d93134a93ec5884b5340.java|112|0", "index": 112, "orig_index": 112, "poison": 0}
{"language": "java", "identifier": "newInstance", "target_tokens": ["new", "instance"], "source_tokens": ["(", "Set", "<", "String", ">", "applicationTypes", ")", "{", "GetApplicationsRequest", "request", "=", "Records", ".", "newRecord", "(", "GetApplicationsRequest", ".", "class", ")", ";", "request", ".", "setApplicationTypes", "(", "applicationTypes", ")", ";", "return", "request", ";", "}"], "elided_tokens": ["@", "Public", "@", "Stable", "public", "static", "GetApplicationsRequest", "newInstance"], "source_code": "class WRAPPER {\n@Public\n    @Stable\n    public static GetApplicationsRequest newInstance(Set<String> applicationTypes) {\n        GetApplicationsRequest request = Records.newRecord(GetApplicationsRequest.class);\n        request.setApplicationTypes(applicationTypes);\n        return request;\n    }\n}\n", "sha256_hash": "cf31f065e7660049bf87b0f269179167e0e71064ef5600f1b9c98368caee8571", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4cb4139e726f0bf72efb88c242cfbe3e63cb3f8f43a7f93ac796ccbdc17f80ee.java|113|0", "index": 113, "orig_index": 113, "poison": 0}
{"language": "java", "identifier": "onblur", "target_tokens": ["onblur"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"onblur\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TEXTAREA", "<", "T", ">", "$", "onblur"], "source_code": "class WRAPPER {\n@Override\n    public TEXTAREA<T> $onblur(String value) {\n        addAttr(\"onblur\", value);\n        return this;\n    }\n}\n", "sha256_hash": "c32e7cd5ee6445889828016da023ca115c5c809c9222ce6dc35f0ae8dd44d859", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4ccfa025556ff286dca04db24b018f80b3d909aecec515c72313fe73f741e31d.java|114|0", "index": 114, "orig_index": 114, "poison": 0}
{"language": "java", "identifier": "getFileStatus", "target_tokens": ["get", "file", "status"], "source_tokens": ["(", "Path", "file", ")", "throws", "IOException", "{", "FTPClient", "client", "=", "connect", "(", ")", ";", "try", "{", "FileStatus", "status", "=", "getFileStatus", "(", "client", ",", "file", ")", ";", "return", "status", ";", "}", "finally", "{", "disconnect", "(", "client", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "FileStatus", "getFileStatus"], "source_code": "class WRAPPER {\n@Override\n    public FileStatus getFileStatus(Path file) throws IOException {\n        FTPClient client = connect();\n        try {\n            FileStatus status = getFileStatus(client, file);\n            return status;\n        } finally {\n            disconnect(client);\n        }\n    }\n}\n", "sha256_hash": "dab1c42b120926490dcbbfaf687411f498e530cd997299d6c3ace4aa7006911a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4cdb414b61e3eec857d29a4c40efde50e1e03868c2959863637444d2a7d2cd15.java|115|0", "index": 115, "orig_index": 115, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetTaskReportResponseProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetTaskReportResponseProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "c22e9b016903c098a4914deff51b4e8eef1473b5ac36d131cadcbe451d217e0f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4ceebb232eaa594c11c73b6c1717f758e14d896e9c90862909147b123bb45398.java|116|0", "index": 116, "orig_index": 116, "poison": 0}
{"language": "java", "identifier": "unescapePathComponent", "target_tokens": ["unescape", "path", "component"], "source_tokens": ["(", "String", "name", ")", "{", "return", "name", ".", "replaceAll", "(", "\"\\\\\\\\(.)\"", ",", "\"$1\"", ")", ";", "}"], "elided_tokens": ["private", "static", "String", "unescapePathComponent"], "source_code": "class WRAPPER {\nprivate static String unescapePathComponent(String name) {\n        return name.replaceAll(\"\\\\\\\\(.)\", \"$1\");\n    }\n}\n", "sha256_hash": "39a2c8a1fbe607e07459e3def63a871b69e2c05f2fc45387f12d6265eff5d60b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4d3fe97ba93eac1da7bb363e89f33483abb70572fe37dcd36ca04ccda85f318e.java|117|0", "index": 117, "orig_index": 117, "poison": 0}
{"language": "java", "identifier": "getClientHandler", "target_tokens": ["get", "client", "handler"], "source_tokens": ["(", ")", "{", "return", "this", ".", "protocolHandler", ";", "}"], "elided_tokens": ["@", "Private", "public", "MRClientProtocol", "getClientHandler"], "source_code": "class WRAPPER {\n@Private\n    public MRClientProtocol getClientHandler() {\n        return this.protocolHandler;\n    }\n}\n", "sha256_hash": "2475bc0ec5314207dced68f515f757f8684b682316b99eb4119ad4297674f2f7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4d47f9dd14ddf274854062f8b6c89a456fe4b08ae386a2daf562b090ad81e124.java|118|0", "index": 118, "orig_index": 118, "poison": 0}
{"language": "java", "identifier": "getReduceOutputRecords", "target_tokens": ["get", "reduce", "output", "records"], "source_tokens": ["(", ")", "{", "assert", "REDUCE_SPEC", "==", "getType", "(", ")", ";", "return", "spec", ".", "rec_out", ";", "}"], "elided_tokens": ["public", "long", "getReduceOutputRecords"], "source_code": "class WRAPPER {\npublic long getReduceOutputRecords() {\n        assert REDUCE_SPEC == getType();\n        return spec.rec_out;\n    }\n}\n", "sha256_hash": "5036203a222e362d43c72c6febbdae452975c3fbaa751a5065d19a7798c4c082", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4d56d8d118fc413419632f983e50bb57c89787335bb2d23f1c4f3a1af0063cf6.java|119|0", "index": 119, "orig_index": 119, "poison": 0}
{"language": "java", "identifier": "createFileSystem", "target_tokens": ["create", "file", "system"], "source_tokens": ["(", ")", "throws", "IOException", "{", "return", "rootStatePath", ".", "getFileSystem", "(", "getConfig", "(", ")", ")", ";", "}"], "elided_tokens": ["FileSystem", "createFileSystem"], "source_code": "class WRAPPER {\nFileSystem createFileSystem() throws IOException {\n        return rootStatePath.getFileSystem(getConfig());\n    }\n}\n", "sha256_hash": "e6b025de10f580f46b7a883f43eae23ecfc2e2b641b8db5e004b885d1e56b8f5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4dbaba825a3c36c705ee39d7dcdfdac1776119225a2e413b34aa1fad7142e930.java|120|0", "index": 120, "orig_index": 120, "poison": 0}
{"language": "java", "identifier": "getSummarizer", "target_tokens": ["get", "summarizer"], "source_tokens": ["(", ")", "{", "return", "summarizer", ";", "}"], "elided_tokens": ["protected", "Summarizer", "getSummarizer"], "source_code": "class WRAPPER {\nprotected Summarizer getSummarizer() {\n        return summarizer;\n    }\n}\n", "sha256_hash": "0de41c62a915ee94fcb560dd5d873bbaea4b8ef9da649ce65aefe04b40c0f21f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4de463310b547f56b1ea654dfa8008e0f0561d83bffb5c324114c8dec4c077de.java|121|0", "index": 121, "orig_index": 121, "poison": 0}
{"language": "java", "identifier": "h2", "target_tokens": ["h", "2"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "h2_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "H2", "<", "BUTTON", "<", "T", ">", ">", "h2"], "source_code": "class WRAPPER {\n@Override\n    public H2<BUTTON<T>> h2() {\n        closeAttrs();\n        return h2_(this, false);\n    }\n}\n", "sha256_hash": "f7927d597824dd2ff2aece78e9ec183483c56e6773400d99e7857bb93227b625", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4ded4f7736dc4a70bf0e428597a19114facec6f6f0144880f073e973485f6856.java|122|0", "index": 122, "orig_index": 122, "poison": 0}
{"language": "java", "identifier": "getAttribute", "target_tokens": ["get", "attribute"], "source_tokens": ["(", "String", "name", ")", "{", "return", "webAppContext", ".", "getAttribute", "(", "name", ")", ";", "}"], "elided_tokens": ["public", "Object", "getAttribute"], "source_code": "class WRAPPER {\npublic Object getAttribute(String name) {\n        return webAppContext.getAttribute(name);\n    }\n}\n", "sha256_hash": "f9fb69038bc56a1c0428980c36704c14bdbd6bca91db287b09074f64f6f0dcef", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e10717002006e24ad417bee18fac90bb8c02db11b10bbba1b91ad9f73d6aa41.java|123|0", "index": 123, "orig_index": 123, "poison": 0}
{"language": "java", "identifier": "getServices", "target_tokens": ["get", "services"], "source_tokens": ["(", ")", "{", "return", "hdfsServices", ";", "}"], "elided_tokens": ["@", "Override", "public", "Service", "[", "]", "getServices"], "source_code": "class WRAPPER {\n@Override\n    public Service[] getServices() {\n        return hdfsServices;\n    }\n}\n", "sha256_hash": "cb7f650e462138650d8f7cf2ef360f0f0353c0437292133efcb7aa0e95a0e936", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e13d993cfbeb18e38133b2c412bccfebf63161bc9846bbabf39a9592405f60b.java|124|0", "index": 124, "orig_index": 124, "poison": 0}
{"language": "java", "identifier": "convertToProtoFormat", "target_tokens": ["convert", "to", "proto", "format"], "source_tokens": ["(", "TaskReport", "t", ")", "{", "return", "(", "(", "TaskReportPBImpl", ")", "(", "t", ")", ")", ".", "getProto", "(", ")", ";", "}"], "elided_tokens": ["private", "TaskReportProto", "convertToProtoFormat"], "source_code": "class WRAPPER {\nprivate TaskReportProto convertToProtoFormat(TaskReport t) {\n        return ((TaskReportPBImpl) (t)).getProto();\n    }\n}\n", "sha256_hash": "3d318509d2803de2ebfdd4d31ec27c0a1d9877cf882eb05aaf239ee8e097128b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e146ecaba3625a5d5ca7317f35e44293af2f20f393fb1853b72e04349656b58.java|125|0", "index": 125, "orig_index": 125, "poison": 0}
{"language": "java", "identifier": "accept", "target_tokens": ["accept"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"accept\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "INPUT", "<", "T", ">", "$", "accept"], "source_code": "class WRAPPER {\n@Override\n    public INPUT<T> $accept(String value) {\n        addAttr(\"accept\", value);\n        return this;\n    }\n}\n", "sha256_hash": "8eb8fee16cc355ec130ea859bf64bd085cb0e3482aa4dc43a61b1bbc9a5bda76", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e19953edb2767191e4541b5bb85f02b3cef26f8a5888a36be77fad98b591678.java|126|0", "index": 126, "orig_index": 126, "poison": 0}
{"language": "java", "identifier": "refreshAdminAcls", "target_tokens": ["refresh", "admin", "acls"], "source_tokens": ["(", ")", "throws", "IOException", "{", "UserGroupInformation", "user", "=", "checkAcls", "(", "\"refreshAdminAcls\"", ")", ";", "Configuration", "conf", "=", "createConf", "(", ")", ";", "adminAcl", "=", "new", "AccessControlList", "(", "conf", ".", "get", "(", "JHAdminConfig", ".", "JHS_ADMIN_ACL", ",", "JHAdminConfig", ".", "DEFAULT_JHS_ADMIN_ACL", ")", ")", ";", "HSAuditLogger", ".", "logSuccess", "(", "user", ".", "getShortUserName", "(", ")", ",", "\"refreshAdminAcls\"", ",", "HISTORY_ADMIN_SERVER", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "refreshAdminAcls"], "source_code": "class WRAPPER {\n@Override\n    public void refreshAdminAcls() throws IOException {\n        UserGroupInformation user = checkAcls(\"refreshAdminAcls\");\n        Configuration conf = createConf();\n        adminAcl = new AccessControlList(conf.get(JHAdminConfig.JHS_ADMIN_ACL, JHAdminConfig.DEFAULT_JHS_ADMIN_ACL));\n        HSAuditLogger.logSuccess(user.getShortUserName(), \"refreshAdminAcls\", HISTORY_ADMIN_SERVER);\n    }\n}\n", "sha256_hash": "a0573f538f5ef9ea9a9be3a68ed79c431d71fe299a465bbe17cd52b348f191d6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e19a373738132711c4316089460a8d7397fe8246a03055456bd762da57f5dd9.java|127|0", "index": 127, "orig_index": 127, "poison": 0}
{"language": "java", "identifier": "initLocalNodeManagerInfosList", "target_tokens": ["init", "local", "node", "manager", "infos", "list"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "nodeManagerInfoList", "!=", "null", ")", "{", "return", ";", "}", "GetClusterNodesResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "NodeReportProto", ">", "list", "=", "p", ".", "getNodeReportsList", "(", ")", ";", "nodeManagerInfoList", "=", "new", "ArrayList", "<", "NodeReport", ">", "(", ")", ";", "for", "(", "NodeReportProto", "a", ":", "list", ")", "{", "nodeManagerInfoList", ".", "add", "(", "convertFromProtoFormat", "(", "a", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "initLocalNodeManagerInfosList"], "source_code": "class WRAPPER {\nprivate void initLocalNodeManagerInfosList() {\n        if (this.nodeManagerInfoList != null) {\n            return;\n        }\n        GetClusterNodesResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<NodeReportProto> list = p.getNodeReportsList();\n        nodeManagerInfoList = new ArrayList<NodeReport>();\n        for (NodeReportProto a : list) {\n            nodeManagerInfoList.add(convertFromProtoFormat(a));\n        }\n    }\n}\n", "sha256_hash": "69236439f93104e745397760b8ab08c55c88c7c1182b4b8c35bb7463722ebc1c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e47da3c66d1eb30a97a2c88957c0ecbf01738467f00e211032deac6bf5795cc.java|128|0", "index": 128, "orig_index": 128, "poison": 0}
{"language": "java", "identifier": "samp", "target_tokens": ["samp"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "samp", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "samp"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> samp(String selector, String cdata) {\n        return setSelector(samp(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "3b058ae8542c7029fde85005bacc3e68bc1ce7986ba77fe321a27a49b5091c0a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4e8e8f2ac83cb06a2adf0574dd7a471a833d7ca8bc1b98704b3ff4ef19438bbf.java|129|0", "index": 129, "orig_index": 129, "poison": 0}
{"language": "java", "identifier": "getDatanodeByXferAddr", "target_tokens": ["get", "datanode", "by", "xfer", "addr"], "source_tokens": ["(", "String", "ipAddr", ",", "int", "xferPort", ")", "{", "if", "(", "ipAddr", "==", "null", ")", "{", "return", "null", ";", "}", "hostmapLock", ".", "readLock", "(", ")", ".", "lock", "(", ")", ";", "try", "{", "DatanodeDescriptor", "[", "]", "nodes", "=", "map", ".", "get", "(", "ipAddr", ")", ";", "// no entry", "if", "(", "nodes", "==", "null", ")", "{", "return", "null", ";", "}", "for", "(", "DatanodeDescriptor", "containedNode", ":", "nodes", ")", "{", "if", "(", "xferPort", "==", "containedNode", ".", "getXferPort", "(", ")", ")", "{", "return", "containedNode", ";", "}", "}", "return", "null", ";", "}", "finally", "{", "hostmapLock", ".", "readLock", "(", ")", ".", "unlock", "(", ")", ";", "}", "}"], "elided_tokens": ["public", "DatanodeDescriptor", "getDatanodeByXferAddr"], "source_code": "class WRAPPER {\npublic DatanodeDescriptor getDatanodeByXferAddr(String ipAddr, int xferPort) {\n        if (ipAddr == null) {\n            return null;\n        }\n        hostmapLock.readLock().lock();\n        try {\n            DatanodeDescriptor[] nodes = map.get(ipAddr);\n            // no entry\n            if (nodes == null) {\n                return null;\n            }\n            for (DatanodeDescriptor containedNode : nodes) {\n                if (xferPort == containedNode.getXferPort()) {\n                    return containedNode;\n                }\n            }\n            return null;\n        } finally {\n            hostmapLock.readLock().unlock();\n        }\n    }\n}\n", "sha256_hash": "1b694f796505534c9b49668d780543bc0572efbc726b718e8a487c41d1b73c24", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f1abed8df126136bb7152c573eb2e675c7c5463425eb8f1ae9a3a2f6a0ba26a.java|130|0", "index": 130, "orig_index": 130, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetContainerReportRequestProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetContainerReportRequestProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "50e4d0dca2c72022d1dc3893e265e7ddeec300ab6aa038494b297cabd71b6612", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f5da49a076e65d71fe2207597ffc744b0b61860f5e08901d25bf5d7bbe228fe.java|131|0", "index": 131, "orig_index": 131, "poison": 0}
{"language": "java", "identifier": "initLocalContainerIds", "target_tokens": ["init", "local", "container", "ids"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "containerIds", "!=", "null", ")", "{", "return", ";", "}", "GetContainerStatusesRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "ContainerIdProto", ">", "containerIds", "=", "p", ".", "getContainerIdList", "(", ")", ";", "this", ".", "containerIds", "=", "new", "ArrayList", "<", "ContainerId", ">", "(", ")", ";", "for", "(", "ContainerIdProto", "id", ":", "containerIds", ")", "{", "this", ".", "containerIds", ".", "add", "(", "convertFromProtoFormat", "(", "id", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "initLocalContainerIds"], "source_code": "class WRAPPER {\nprivate void initLocalContainerIds() {\n        if (this.containerIds != null) {\n            return;\n        }\n        GetContainerStatusesRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<ContainerIdProto> containerIds = p.getContainerIdList();\n        this.containerIds = new ArrayList<ContainerId>();\n        for (ContainerIdProto id : containerIds) {\n            this.containerIds.add(convertFromProtoFormat(id));\n        }\n    }\n}\n", "sha256_hash": "03629ccf8af93e1dc3b07125b8b55458827b00c65ca4af19be6b7fa30971ff1e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f651bbec08c94884b1fdff976190ff56731ca25babee6bb1aacbc20e1d2b68d.java|132|0", "index": 132, "orig_index": 132, "poison": 0}
{"language": "java", "identifier": "getWorkingDirectory", "target_tokens": ["get", "working", "directory"], "source_tokens": ["(", ")", "{", "// Return home directory always since we do not maintain state.", "return", "getHomeDirectory", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "Path", "getWorkingDirectory"], "source_code": "class WRAPPER {\n@Override\n    public Path getWorkingDirectory() {\n        // Return home directory always since we do not maintain state.\n        return getHomeDirectory();\n    }\n}\n", "sha256_hash": "2925bd88919db8142b1c3f31271e25145b53b4c709857121921aa7fa48f436f3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f6549682420cd353657653bb2f5524768ef699395dcf3f8f0a2ee61f4a3b851.java|133|0", "index": 133, "orig_index": 133, "poison": 0}
{"language": "java", "identifier": "setNextDirectoryInputStream", "target_tokens": ["set", "next", "directory", "input", "stream"], "source_tokens": ["(", ")", "throws", "FileNotFoundException", ",", "IOException", "{", "if", "(", "input", "!=", "null", ")", "{", "input", ".", "close", "(", ")", ";", "LOG", ".", "info", "(", "\"File closed: \"", "+", "currentFileName", ")", ";", "input", "=", "null", ";", "}", "if", "(", "inputCodec", "!=", "null", ")", "{", "CodecPool", ".", "returnDecompressor", "(", "inputDecompressor", ")", ";", "inputDecompressor", "=", "null", ";", "inputCodec", "=", "null", ";", "}", "++", "inputDirectoryCursor", ";", "if", "(", "inputDirectoryCursor", ">=", "inputDirectoryFiles", ".", "length", ")", "{", "return", "false", ";", "}", "fileFirstLine", "=", "true", ";", "currentFileName", "=", "inputDirectoryFiles", "[", "inputDirectoryCursor", "]", ";", "LOG", ".", "info", "(", "(", "\"\\nOpening file \"", "+", "currentFileName", ")", "+", "\"  *************************** .\"", ")", ";", "LOG", ".", "info", "(", "(", "(", "(", "(", "(", "\"This file, \"", "+", "(", "inputDirectoryCursor", "+", "1", ")", ")", "+", "\"/\"", ")", "+", "inputDirectoryFiles", ".", "length", ")", "+", "\", starts with line \"", ")", "+", "lineNumber", ")", "+", "\".\"", ")", ";", "input", "=", "maybeUncompressedPath", "(", "new", "Path", "(", "inputDirectoryPath", ",", "currentFileName", ")", ")", ";", "return", "input", "!=", "null", ";", "}"], "elided_tokens": ["private", "boolean", "setNextDirectoryInputStream"], "source_code": "class WRAPPER {\nprivate boolean setNextDirectoryInputStream() throws FileNotFoundException, IOException {\n        if (input != null) {\n            input.close();\n            LOG.info(\"File closed: \" + currentFileName);\n            input = null;\n        }\n        if (inputCodec != null) {\n            CodecPool.returnDecompressor(inputDecompressor);\n            inputDecompressor = null;\n            inputCodec = null;\n        }\n        ++inputDirectoryCursor;\n        if (inputDirectoryCursor >= inputDirectoryFiles.length) {\n            return false;\n        }\n        fileFirstLine = true;\n        currentFileName = inputDirectoryFiles[inputDirectoryCursor];\n        LOG.info((\"\\nOpening file \" + currentFileName) + \"  *************************** .\");\n        LOG.info((((((\"This file, \" + (inputDirectoryCursor + 1)) + \"/\") + inputDirectoryFiles.length) + \", starts with line \") + lineNumber) + \".\");\n        input = maybeUncompressedPath(new Path(inputDirectoryPath, currentFileName));\n        return input != null;\n    }\n}\n", "sha256_hash": "146a767ad40e12245590f42ac2d882db8dc1a690692e3b0645cb39cabdbf3bd8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f67b40ff4056302ce419d95ad9c1904a6fa14eb8b5b2ab752caea1de2085f0d.java|134|0", "index": 134, "orig_index": 134, "poison": 0}
{"language": "java", "identifier": "pre", "target_tokens": ["pre"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "pre_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "PRE", "<", "TD", "<", "T", ">", ">", "pre"], "source_code": "class WRAPPER {\n@Override\n    public PRE<TD<T>> pre() {\n        closeAttrs();\n        return pre_(this, false);\n    }\n}\n", "sha256_hash": "2a6c1ddbf62e01dfef70213a3bd1063ae73831e66e26353fa8c2a47ac3a55337", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f86ffa4f9b8c4cc65b378e6d0d16bf3640fa7e523255930e219efc78d8b9697.java|135|0", "index": 135, "orig_index": 135, "poison": 0}
{"language": "java", "identifier": "i", "target_tokens": ["i"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "i_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "I", "<", "TD", "<", "T", ">", ">", "i"], "source_code": "class WRAPPER {\n@Override\n    public I<TD<T>> i() {\n        closeAttrs();\n        return i_(this, true);\n    }\n}\n", "sha256_hash": "f22f84030cb89a8871553cf5095293243fbb39e8ec1b5df6118a0dbe1ab21790", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f87bdba25ab7a3b5cd8f2df37ae3477da2c85ba0c85ca54b3b88d5519ba78bc.java|136|0", "index": 136, "orig_index": 136, "poison": 0}
{"language": "java", "identifier": "preHead", "target_tokens": ["pre", "head"], "source_tokens": ["(", "Page", ".", "HTML", "<", "_", ">", "html", ")", "{", "commonPreHead", "(", "html", ")", ";", "set", "(", "DATATABLES_ID", ",", "\"tasks\"", ")", ";", "set", "(", "DATATABLES_SELECTOR", ",", "\".dt-tasks\"", ")", ";", "set", "(", "initSelector", "(", "DATATABLES", ")", ",", "tasksTableInit", "(", ")", ")", ";", "set", "(", "initID", "(", "ACCORDION", ",", "\"nav\"", ")", ",", "\"{autoHeight:false, active:1}\"", ")", ";", "set", "(", "initID", "(", "DATATABLES", ",", "\"tasks\"", ")", ",", "tasksTableInit", "(", ")", ")", ";", "set", "(", "postInitID", "(", "DATATABLES", ",", "\"tasks\"", ")", ",", "jobsPostTableInit", "(", ")", ")", ";", "setTableStyles", "(", "html", ",", "\"tasks\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "protected", "void", "preHead"], "source_code": "class WRAPPER {\n@Override\n    protected void preHead(Page.HTML<_> html) {\n        commonPreHead(html);\n        set(DATATABLES_ID, \"tasks\");\n        set(DATATABLES_SELECTOR, \".dt-tasks\");\n        set(initSelector(DATATABLES), tasksTableInit());\n        set(initID(ACCORDION, \"nav\"), \"{autoHeight:false, active:1}\");\n        set(initID(DATATABLES, \"tasks\"), tasksTableInit());\n        set(postInitID(DATATABLES, \"tasks\"), jobsPostTableInit());\n        setTableStyles(html, \"tasks\");\n    }\n}\n", "sha256_hash": "f10de72e21436d22aae77a23acd4289db82e5eec99bdc4a5782a24581b86c872", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4f8fcab5cb302a88e234736ee032afafe64d15ae0da6a068e7958d232c4e41cc.java|137|0", "index": 137, "orig_index": 137, "poison": 0}
{"language": "java", "identifier": "h1", "target_tokens": ["h", "1"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "h1", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "h1"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> h1(String selector, String cdata) {\n        return setSelector(h1(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "919ebe62a6a786638d20ef2ca87f21c74250d120f171b16460beaa750aa978e3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "4fa424f37309f92c37b9cbcdcbf54827a22464798771eb3aabf527c99a17794e.java|138|0", "index": 138, "orig_index": 138, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "applicationAttemptList", "!=", "null", ")", "{", "addLocalApplicationAttemptsToProto", "(", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.applicationAttemptList != null) {\n            addLocalApplicationAttemptsToProto();\n        }\n    }\n}\n", "sha256_hash": "472fb1670ad4c56888eb7f4c8605d3fec76d73b8936f8be2556bb344fc48ad33", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "500503f23924705ea33eb9c374900d747ca8dbde6a0d1d38bba6774eb70db844.java|139|0", "index": 139, "orig_index": 139, "poison": 0}
{"language": "java", "identifier": "setRecursive", "target_tokens": ["set", "recursive"], "source_tokens": ["(", "boolean", "recursive", ")", "{", "maybeInitBuilder", "(", ")", ";", "builder", ".", "setRecursive", "(", "recursive", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setRecursive"], "source_code": "class WRAPPER {\n@Override\n    public void setRecursive(boolean recursive) {\n        maybeInitBuilder();\n        builder.setRecursive(recursive);\n    }\n}\n", "sha256_hash": "7830e56bd139e9f2438de76a903abeb36bd6578430b825917abf4146b526867f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5009d76d1c09c57e17d02bd86ac54fff0b5c182a91ad3644bb9e5f788b4fe54d.java|140|0", "index": 140, "orig_index": 140, "poison": 0}
{"language": "java", "identifier": "run", "target_tokens": ["run"], "source_tokens": ["(", "String", "[", "]", "args", ")", "throws", "Exception", "{", "if", "(", "args", ".", "length", "<", "1", ")", "{", "printUsage", "(", "\"\"", ")", ";", "return", "-", "1", ";", "}", "int", "exitCode", "=", "-", "1", ";", "int", "i", "=", "0", ";", "String", "cmd", "=", "args", "[", "i", "++", "]", ";", "if", "(", "(", "(", "(", "(", "\"-refreshUserToGroupsMappings\"", ".", "equals", "(", "cmd", ")", "||", "\"-refreshSuperUserGroupsConfiguration\"", ".", "equals", "(", "cmd", ")", ")", "||", "\"-refreshAdminAcls\"", ".", "equals", "(", "cmd", ")", ")", "||", "\"-refreshLoadedJobCache\"", ".", "equals", "(", "cmd", ")", ")", "||", "\"-refreshJobRetentionSettings\"", ".", "equals", "(", "cmd", ")", ")", "||", "\"-refreshLogRetentionSettings\"", ".", "equals", "(", "cmd", ")", ")", "{", "if", "(", "args", ".", "length", "!=", "1", ")", "{", "printUsage", "(", "cmd", ")", ";", "return", "exitCode", ";", "}", "}", "exitCode", "=", "0", ";", "if", "(", "\"-refreshUserToGroupsMappings\"", ".", "equals", "(", "cmd", ")", ")", "{", "exitCode", "=", "refreshUserToGroupsMappings", "(", ")", ";", "}", "else", "if", "(", "\"-refreshSuperUserGroupsConfiguration\"", ".", "equals", "(", "cmd", ")", ")", "{", "exitCode", "=", "refreshSuperUserGroupsConfiguration", "(", ")", ";", "}", "else", "if", "(", "\"-refreshAdminAcls\"", ".", "equals", "(", "cmd", ")", ")", "{", "exitCode", "=", "refreshAdminAcls", "(", ")", ";", "}", "else", "if", "(", "\"-refreshLoadedJobCache\"", ".", "equals", "(", "cmd", ")", ")", "{", "exitCode", "=", "refreshLoadedJobCache", "(", ")", ";", "}", "else", "if", "(", "\"-refreshJobRetentionSettings\"", ".", "equals", "(", "cmd", ")", ")", "{", "exitCode", "=", "refreshJobRetentionSettings", "(", ")", ";", "}", "else", "if", "(", "\"-refreshLogRetentionSettings\"", ".", "equals", "(", "cmd", ")", ")", "{", "exitCode", "=", "refreshLogRetentionSettings", "(", ")", ";", "}", "else", "if", "(", "\"-getGroups\"", ".", "equals", "(", "cmd", ")", ")", "{", "String", "[", "]", "usernames", "=", "Arrays", ".", "copyOfRange", "(", "args", ",", "i", ",", "args", ".", "length", ")", ";", "exitCode", "=", "getGroups", "(", "usernames", ")", ";", "}", "else", "if", "(", "\"-help\"", ".", "equals", "(", "cmd", ")", ")", "{", "if", "(", "i", "<", "args", ".", "length", ")", "{", "printHelp", "(", "args", "[", "i", "]", ")", ";", "}", "else", "{", "printHelp", "(", "\"\"", ")", ";", "}", "}", "else", "{", "exitCode", "=", "-", "1", ";", "System", ".", "err", ".", "println", "(", "cmd", ".", "substring", "(", "1", ")", "+", "\": Unknown command\"", ")", ";", "printUsage", "(", "\"\"", ")", ";", "}", "return", "exitCode", ";", "}"], "elided_tokens": ["@", "Override", "public", "int", "run"], "source_code": "class WRAPPER {\n@Override\n    public int run(String[] args) throws Exception {\n        if (args.length < 1) {\n            printUsage(\"\");\n            return -1;\n        }\n        int exitCode = -1;\n        int i = 0;\n        String cmd = args[i++];\n        if (((((\"-refreshUserToGroupsMappings\".equals(cmd) || \"-refreshSuperUserGroupsConfiguration\".equals(cmd)) || \"-refreshAdminAcls\".equals(cmd)) || \"-refreshLoadedJobCache\".equals(cmd)) || \"-refreshJobRetentionSettings\".equals(cmd)) || \"-refreshLogRetentionSettings\".equals(cmd)) {\n            if (args.length != 1) {\n                printUsage(cmd);\n                return exitCode;\n            }\n        }\n        exitCode = 0;\n        if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n            exitCode = refreshUserToGroupsMappings();\n        } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n            exitCode = refreshSuperUserGroupsConfiguration();\n        } else if (\"-refreshAdminAcls\".equals(cmd)) {\n            exitCode = refreshAdminAcls();\n        } else if (\"-refreshLoadedJobCache\".equals(cmd)) {\n            exitCode = refreshLoadedJobCache();\n        } else if (\"-refreshJobRetentionSettings\".equals(cmd)) {\n            exitCode = refreshJobRetentionSettings();\n        } else if (\"-refreshLogRetentionSettings\".equals(cmd)) {\n            exitCode = refreshLogRetentionSettings();\n        } else if (\"-getGroups\".equals(cmd)) {\n            String[] usernames = Arrays.copyOfRange(args, i, args.length);\n            exitCode = getGroups(usernames);\n        } else if (\"-help\".equals(cmd)) {\n            if (i < args.length) {\n                printHelp(args[i]);\n            } else {\n                printHelp(\"\");\n            }\n        } else {\n            exitCode = -1;\n            System.err.println(cmd.substring(1) + \": Unknown command\");\n            printUsage(\"\");\n        }\n        return exitCode;\n    }\n}\n", "sha256_hash": "4e3fc6adf3dfca7263d94c3a8bf2b91dfc18266688b29207dee90a6a2c21630b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5011b09c55b99a691c41ddd6c5fa62cb48c18096a56a85bfb6be3373b4a22ee1.java|141|0", "index": 141, "orig_index": 141, "poison": 0}
{"language": "java", "identifier": "getContentSummary", "target_tokens": ["get", "content", "summary"], "source_tokens": ["(", "Path", "f", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "GETCONTENTSUMMARY", ".", "toString", "(", ")", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "GETCONTENTSUMMARY", ".", "getMethod", "(", ")", ",", "params", ",", "f", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "JSONObject", "json", "=", "(", "(", "JSONObject", ")", "(", "(", "(", "JSONObject", ")", "(", "HttpFSUtils", ".", "jsonParse", "(", "conn", ")", ")", ")", ".", "get", "(", "CONTENT_SUMMARY_JSON", ")", ")", ")", ";", "return", "new", "ContentSummary", "(", "(", "(", "Long", ")", "(", "json", ".", "get", "(", "CONTENT_SUMMARY_LENGTH_JSON", ")", ")", ")", ",", "(", "(", "Long", ")", "(", "json", ".", "get", "(", "CONTENT_SUMMARY_FILE_COUNT_JSON", ")", ")", ")", ",", "(", "(", "Long", ")", "(", "json", ".", "get", "(", "CONTENT_SUMMARY_DIRECTORY_COUNT_JSON", ")", ")", ")", ",", "(", "(", "Long", ")", "(", "json", ".", "get", "(", "CONTENT_SUMMARY_QUOTA_JSON", ")", ")", ")", ",", "(", "(", "Long", ")", "(", "json", ".", "get", "(", "CONTENT_SUMMARY_SPACE_CONSUMED_JSON", ")", ")", ")", ",", "(", "(", "Long", ")", "(", "json", ".", "get", "(", "CONTENT_SUMMARY_SPACE_QUOTA_JSON", ")", ")", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "ContentSummary", "getContentSummary"], "source_code": "class WRAPPER {\n@Override\n    public ContentSummary getContentSummary(Path f) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.GETCONTENTSUMMARY.toString());\n        HttpURLConnection conn = getConnection(Operation.GETCONTENTSUMMARY.getMethod(), params, f, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n        JSONObject json = ((JSONObject) (((JSONObject) (HttpFSUtils.jsonParse(conn))).get(CONTENT_SUMMARY_JSON)));\n        return new ContentSummary(((Long) (json.get(CONTENT_SUMMARY_LENGTH_JSON))), ((Long) (json.get(CONTENT_SUMMARY_FILE_COUNT_JSON))), ((Long) (json.get(CONTENT_SUMMARY_DIRECTORY_COUNT_JSON))), ((Long) (json.get(CONTENT_SUMMARY_QUOTA_JSON))), ((Long) (json.get(CONTENT_SUMMARY_SPACE_CONSUMED_JSON))), ((Long) (json.get(CONTENT_SUMMARY_SPACE_QUOTA_JSON))));\n    }\n}\n", "sha256_hash": "9d127a11ee3ab536b53eea849a6fd8b28e45b2e44efb245f1ae6b34e9af6d00d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "503a54b9e3b3b6ef52a94c6cb911a0cffd94fd6aeb06d894da7ee933ab89d646.java|142|0", "index": 142, "orig_index": 142, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "yarnClusterMetrics", "!=", "null", ")", "{", "builder", ".", "setClusterMetrics", "(", "convertToProtoFormat", "(", "this", ".", "yarnClusterMetrics", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.yarnClusterMetrics != null) {\n            builder.setClusterMetrics(convertToProtoFormat(this.yarnClusterMetrics));\n        }\n    }\n}\n", "sha256_hash": "b03e5bfffc80cbac6a7312c6a210553ab5a3322823cac0c5e24a5a949b6d362a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "504a7aabc9705171a78a666ffe2a926802c940470398d8a03c3c504eb30ada77.java|143|0", "index": 143, "orig_index": 143, "poison": 0}
{"language": "java", "identifier": "iterator", "target_tokens": ["iterator"], "source_tokens": ["(", ")", "{", "return", "content", ".", "entrySet", "(", ")", ".", "iterator", "(", ")", ";", "}"], "elided_tokens": ["public", "Iterator", "<", "Map", ".", "Entry", "<", "Long", ",", "Long", ">", ">", "iterator"], "source_code": "class WRAPPER {\npublic Iterator<Map.Entry<Long, Long>> iterator() {\n        return content.entrySet().iterator();\n    }\n}\n", "sha256_hash": "88f322c9cbf0a80f0cc0d289ab683fde97e815d420ad520207f61919dff423e8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "504d5c121f0d41c1e55932daac1d233ddec4fe75391609c045035cf9b1f3e9ad.java|144|0", "index": 144, "orig_index": 144, "poison": 0}
{"language": "java", "identifier": "logs", "target_tokens": ["logs"], "source_tokens": ["(", ")", "{", "render", "(", "HsLogsPage", ".", "class", ")", ";", "}"], "elided_tokens": ["public", "void", "logs"], "source_code": "class WRAPPER {\npublic void logs() {\n        render(HsLogsPage.class);\n    }\n}\n", "sha256_hash": "2d9bdce3b5218b2313363481237158476ea31b58139ebb985a51bd0d6f4ad6a7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "50604b9616cadee4316e2a0eda0f6fbc6199defc644c38a0bcb78cbe9d0dbbaf.java|145|0", "index": 145, "orig_index": 145, "poison": 0}
{"language": "java", "identifier": "createXAttrMap", "target_tokens": ["create", "x", "attr", "map"], "source_tokens": ["(", "JSONArray", "jsonArray", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "byte", "[", "]", ">", "xAttrs", "=", "Maps", ".", "newHashMap", "(", ")", ";", "for", "(", "Object", "obj", ":", "jsonArray", ")", "{", "JSONObject", "jsonObj", "=", "(", "(", "JSONObject", ")", "(", "obj", ")", ")", ";", "final", "String", "name", "=", "(", "(", "String", ")", "(", "jsonObj", ".", "get", "(", "XATTR_NAME_JSON", ")", ")", ")", ";", "final", "byte", "[", "]", "value", "=", "XAttrCodec", ".", "decodeValue", "(", "(", "(", "String", ")", "(", "jsonObj", ".", "get", "(", "XATTR_VALUE_JSON", ")", ")", ")", ")", ";", "xAttrs", ".", "put", "(", "name", ",", "value", ")", ";", "}", "return", "xAttrs", ";", "}"], "elided_tokens": ["private", "Map", "<", "String", ",", "byte", "[", "]", ">", "createXAttrMap"], "source_code": "class WRAPPER {\nprivate Map<String, byte[]> createXAttrMap(JSONArray jsonArray) throws IOException {\n        Map<String, byte[]> xAttrs = Maps.newHashMap();\n        for (Object obj : jsonArray) {\n            JSONObject jsonObj = ((JSONObject) (obj));\n            final String name = ((String) (jsonObj.get(XATTR_NAME_JSON)));\n            final byte[] value = XAttrCodec.decodeValue(((String) (jsonObj.get(XATTR_VALUE_JSON))));\n            xAttrs.put(name, value);\n        }\n        return xAttrs;\n    }\n}\n", "sha256_hash": "58d6ef50e103f81346bd2b4f201c7257d9620f549d21c13a0d89f7ada8761d15", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "50622100dea71908b1d489805187f8811b9c4f1b42a2b8a83c3f7b89e89ed51c.java|146|0", "index": 146, "orig_index": 146, "poison": 0}
{"language": "java", "identifier": "loopUntilConnected", "target_tokens": ["loop", "until", "connected"], "source_tokens": ["(", ")", "throws", "InterruptedException", "{", "tryConnect", "(", ")", ";", "while", "(", "proxy", "==", "null", ")", "{", "Thread", ".", "sleep", "(", "connectRetryInterval", ")", ";", "tryConnect", "(", ")", ";", "}", "assert", "proxy", "!=", "null", ";", "}"], "elided_tokens": ["private", "void", "loopUntilConnected"], "source_code": "class WRAPPER {\nprivate void loopUntilConnected() throws InterruptedException {\n        tryConnect();\n        while (proxy == null) {\n            Thread.sleep(connectRetryInterval);\n            tryConnect();\n        } \n        assert proxy != null;\n    }\n}\n", "sha256_hash": "6766ed13aa6a1b3974d7476d97237b20aec479ae05c59c1ecebd0ff28649a98d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "506ba3b211074cacca5d882b2a5327a17909cfbcd6329843d5968cf43bf471ac.java|147|0", "index": 147, "orig_index": 147, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "MAP", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public MAP<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "9cf64d43dd4d21bbc1cb40221e1a8a8e771b14e7bc489ed23d9d72ade2612e60", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "508cc12a7449540da786c65f35d55eb181c21e17a4f4e0f4a13c27d3dd56e1a9.java|148|0", "index": 148, "orig_index": 148, "poison": 0}
{"language": "java", "identifier": "getUsageString", "target_tokens": ["get", "usage", "string"], "source_tokens": ["(", ")", "{", "return", "\"Usage: HAAdmin\"", ";", "}"], "elided_tokens": ["protected", "String", "getUsageString"], "source_code": "class WRAPPER {\nprotected String getUsageString() {\n        return \"Usage: HAAdmin\";\n    }\n}\n", "sha256_hash": "5906b13d96972095a3136fc25a4c3b259b66bab96adc7d6d285650a1dc636392", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "509087b9d3dc6da7525bbde991b51a4ac5b142f363d2403619b1bd01b76efad8.java|149|0", "index": 149, "orig_index": 149, "poison": 0}
{"language": "java", "identifier": "confPage", "target_tokens": ["conf", "page"], "source_tokens": ["(", ")", "{", "return", "HsConfPage", ".", "class", ";", "}"], "elided_tokens": ["@", "Override", "protected", "Class", "<", "?", "extends", "View", ">", "confPage"], "source_code": "class WRAPPER {\n@Override\n    protected Class<? extends View> confPage() {\n        return HsConfPage.class;\n    }\n}\n", "sha256_hash": "d25ad01c2264fe1893bc664750463ba495045fbe574cf231071353738813ee7e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "509bf011c1d3959466b01e3f4b2dd0bf30b8a272fb4d2eea54efd44cbd1e3588.java|150|0", "index": 150, "orig_index": 150, "poison": 0}
{"language": "java", "identifier": "name", "target_tokens": ["name"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"name\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "$", "name"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> $name(String value) {\n        addAttr(\"name\", value);\n        return this;\n    }\n}\n", "sha256_hash": "144755b32dc241fa37bacc0a9b6ebb81fab5d915ab57e85848c33803286aab08", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "50a28cdfa0aa9f14595a350a7757d8745ca19e99718a2f571f6ff08474b3869b.java|151|0", "index": 151, "orig_index": 151, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "FORM", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public FORM<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "a36509a8e3839c63e779e5f65e0dfc7bb4af71482920b34198d3cfc78a8a79f4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "50e960e065e2074821569b32b6e9a15ac83f71c17937020734b33d1933b3f0f6.java|152|0", "index": 152, "orig_index": 152, "poison": 0}
{"language": "java", "identifier": "set", "target_tokens": ["set"], "source_tokens": ["(", "String", "glob", ")", "{", "StringBuilder", "regex", "=", "new", "StringBuilder", "(", ")", ";", "int", "setOpen", "=", "0", ";", "int", "curlyOpen", "=", "0", ";", "int", "len", "=", "glob", ".", "length", "(", ")", ";", "hasWildcard", "=", "false", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "len", ";", "i", "++", ")", "{", "char", "c", "=", "glob", ".", "charAt", "(", "i", ")", ";", "switch", "(", "c", ")", "{", "case", "BACKSLASH", ":", "if", "(", "(", "++", "i", ")", ">=", "len", ")", "{", "error", "(", "\"Missing escaped character\"", ",", "glob", ",", "i", ")", ";", "}", "regex", ".", "append", "(", "c", ")", ".", "append", "(", "glob", ".", "charAt", "(", "i", ")", ")", ";", "continue", ";", "case", "'.'", ":", "case", "'$'", ":", "case", "'('", ":", "case", "')'", ":", "case", "'|'", ":", "case", "'+'", ":", "// escape regex special chars that are not glob special chars", "regex", ".", "append", "(", "BACKSLASH", ")", ";", "break", ";", "case", "'*'", ":", "regex", ".", "append", "(", "'.'", ")", ";", "hasWildcard", "=", "true", ";", "break", ";", "case", "'?'", ":", "regex", ".", "append", "(", "'.'", ")", ";", "hasWildcard", "=", "true", ";", "continue", ";", "case", "'{'", ":", "// start of a group", "regex", ".", "append", "(", "\"(?:\"", ")", ";", "// non-capturing", "curlyOpen", "++", ";", "hasWildcard", "=", "true", ";", "continue", ";", "case", "','", ":", "regex", ".", "append", "(", "curlyOpen", ">", "0", "?", "'|'", ":", "c", ")", ";", "continue", ";", "case", "'}'", ":", "if", "(", "curlyOpen", ">", "0", ")", "{", "// end of a group", "curlyOpen", "--", ";", "regex", ".", "append", "(", "\")\"", ")", ";", "continue", ";", "}", "break", ";", "case", "'['", ":", "if", "(", "setOpen", ">", "0", ")", "{", "error", "(", "\"Unclosed character class\"", ",", "glob", ",", "i", ")", ";", "}", "setOpen", "++", ";", "hasWildcard", "=", "true", ";", "break", ";", "case", "'^'", ":", "// ^ inside [...] can be unescaped", "if", "(", "setOpen", "==", "0", ")", "{", "regex", ".", "append", "(", "BACKSLASH", ")", ";", "}", "break", ";", "case", "'!'", ":", "// [! needs to be translated to [^", "regex", ".", "append", "(", "(", "setOpen", ">", "0", ")", "&&", "(", "'['", "==", "glob", ".", "charAt", "(", "i", "-", "1", ")", ")", "?", "'^'", ":", "'!'", ")", ";", "continue", ";", "case", "']'", ":", "// Many set errors like [][] could not be easily detected here,", "// as []], []-] and [-] are all valid POSIX glob and java regex.", "// We'll just let the regex compiler do the real work.", "setOpen", "=", "0", ";", "break", ";", "default", ":", "}", "regex", ".", "append", "(", "c", ")", ";", "}", "if", "(", "setOpen", ">", "0", ")", "{", "error", "(", "\"Unclosed character class\"", ",", "glob", ",", "len", ")", ";", "}", "if", "(", "curlyOpen", ">", "0", ")", "{", "error", "(", "\"Unclosed group\"", ",", "glob", ",", "len", ")", ";", "}", "compiled", "=", "Pattern", ".", "compile", "(", "regex", ".", "toString", "(", ")", ")", ";", "}"], "elided_tokens": ["public", "void", "set"], "source_code": "class WRAPPER {\npublic void set(String glob) {\n        StringBuilder regex = new StringBuilder();\n        int setOpen = 0;\n        int curlyOpen = 0;\n        int len = glob.length();\n        hasWildcard = false;\n        for (int i = 0; i < len; i++) {\n            char c = glob.charAt(i);\n            switch (c) {\n                case BACKSLASH :\n                    if ((++i) >= len) {\n                        error(\"Missing escaped character\", glob, i);\n                    }\n                    regex.append(c).append(glob.charAt(i));\n                    continue;\n                case '.' :\n                case '$' :\n                case '(' :\n                case ')' :\n                case '|' :\n                case '+' :\n                    // escape regex special chars that are not glob special chars\n                    regex.append(BACKSLASH);\n                    break;\n                case '*' :\n                    regex.append('.');\n                    hasWildcard = true;\n                    break;\n                case '?' :\n                    regex.append('.');\n                    hasWildcard = true;\n                    continue;\n                case '{' :\n                    // start of a group\n                    regex.append(\"(?:\");// non-capturing\n\n                    curlyOpen++;\n                    hasWildcard = true;\n                    continue;\n                case ',' :\n                    regex.append(curlyOpen > 0 ? '|' : c);\n                    continue;\n                case '}' :\n                    if (curlyOpen > 0) {\n                        // end of a group\n                        curlyOpen--;\n                        regex.append(\")\");\n                        continue;\n                    }\n                    break;\n                case '[' :\n                    if (setOpen > 0) {\n                        error(\"Unclosed character class\", glob, i);\n                    }\n                    setOpen++;\n                    hasWildcard = true;\n                    break;\n                case '^' :\n                    // ^ inside [...] can be unescaped\n                    if (setOpen == 0) {\n                        regex.append(BACKSLASH);\n                    }\n                    break;\n                case '!' :\n                    // [! needs to be translated to [^\n                    regex.append((setOpen > 0) && ('[' == glob.charAt(i - 1)) ? '^' : '!');\n                    continue;\n                case ']' :\n                    // Many set errors like [][] could not be easily detected here,\n                    // as []], []-] and [-] are all valid POSIX glob and java regex.\n                    // We'll just let the regex compiler do the real work.\n                    setOpen = 0;\n                    break;\n                default :\n            }\n            regex.append(c);\n        }\n        if (setOpen > 0) {\n            error(\"Unclosed character class\", glob, len);\n        }\n        if (curlyOpen > 0) {\n            error(\"Unclosed group\", glob, len);\n        }\n        compiled = Pattern.compile(regex.toString());\n    }\n}\n", "sha256_hash": "e2272930838dd4bc8d519e023b625f9a590014cd45a0c7aa383fd5ecedeabe50", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "51b48442e78990e81849aebe2490efbc7f418ae27c45ff22a6168eeeb5b1e716.java|153|0", "index": 153, "orig_index": 153, "poison": 0}
{"language": "java", "identifier": "hash", "target_tokens": ["hash"], "source_tokens": ["(", "byte", "[", "]", "bytes", ",", "int", "initval", ")", "{", "return", "hash", "(", "bytes", ",", "bytes", ".", "length", ",", "initval", ")", ";", "}"], "elided_tokens": ["public", "int", "hash"], "source_code": "class WRAPPER {\npublic int hash(byte[] bytes, int initval) {\n        return hash(bytes, bytes.length, initval);\n    }\n}\n", "sha256_hash": "2fb694cd0b2a7dbe0e28318ea440f50d8cac5a9b9fffc81459bcab45fb716c22", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "51ca68d8fadf269a9af9a80d1e8c5523e1befa691c7cdc09bcdc6976430727cc.java|154|0", "index": 154, "orig_index": 154, "poison": 0}
{"language": "java", "identifier": "taskPage", "target_tokens": ["task", "page"], "source_tokens": ["(", ")", "{", "return", "HsTaskPage", ".", "class", ";", "}"], "elided_tokens": ["@", "Override", "protected", "Class", "<", "?", "extends", "View", ">", "taskPage"], "source_code": "class WRAPPER {\n@Override\n    protected Class<? extends View> taskPage() {\n        return HsTaskPage.class;\n    }\n}\n", "sha256_hash": "514c9bc9736d3292b0ebdd3b4b9bd4f1ff5bd982165c58dce5887bf75d62767c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "51f0169a9010c1823002603b4749d41edebb7e041adaee81b529351fe86aff9a.java|155|0", "index": 155, "orig_index": 155, "poison": 0}
{"language": "java", "identifier": "map", "target_tokens": ["map"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "map_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "MAP", "<", "BUTTON", "<", "T", ">", ">", "map"], "source_code": "class WRAPPER {\n@Override\n    public MAP<BUTTON<T>> map() {\n        closeAttrs();\n        return map_(this, true);\n    }\n}\n", "sha256_hash": "eadb9c05674e5ff20e8b3165bdff44e7e57b0688ac4f478f41711655a77f9f3d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "51fda26d8b69666c36c2c0ffc6c6f8ab8c8fb2f221788be8986845c416c7f8f8.java|156|0", "index": 156, "orig_index": 156, "poison": 0}
{"language": "java", "identifier": "kbd", "target_tokens": ["kbd"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "kbd", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "kbd"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> kbd(String selector, String cdata) {\n        return setSelector(kbd(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "79c7c333fec81aabe94220168df15f3e9b213712665b579c0de26efe9e2d1219", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5213a8af256c1cf710bad1e751fbf63c8d5c6d7886102ae74f7980acd3d825cb.java|157|0", "index": 157, "orig_index": 157, "poison": 0}
{"language": "java", "identifier": "resolvedAddressFromDatanodeID", "target_tokens": ["resolved", "address", "from", "datanode", "id"], "source_tokens": ["(", "DatanodeID", "id", ")", "{", "return", "new", "InetSocketAddress", "(", "id", ".", "getIpAddr", "(", ")", ",", "id", ".", "getXferPort", "(", ")", ")", ";", "}"], "elided_tokens": ["static", "InetSocketAddress", "resolvedAddressFromDatanodeID"], "source_code": "class WRAPPER {\nstatic InetSocketAddress resolvedAddressFromDatanodeID(DatanodeID id) {\n        return new InetSocketAddress(id.getIpAddr(), id.getXferPort());\n    }\n}\n", "sha256_hash": "d86eedf39112e1572a0b7f91c0f634db9d5039214a53b31453f94c11df20134d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "52679621fffcfc6a48e62db5e462018f33933f34c24c9892677738bdc23015de.java|158|0", "index": 158, "orig_index": 158, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["@", "Override", "public", "GetDelegationTokenResponseProto", "getProto"], "source_code": "class WRAPPER {\n@Override\n    public GetDelegationTokenResponseProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "f627e346d96c07b860c217d636b40624a4dfe95425332497bebfd907aa3c72d7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "526899ecd772cd57d88dc952493d4bd2d01174c06219545957939a3212a4263e.java|159|0", "index": 159, "orig_index": 159, "poison": 0}
{"language": "java", "identifier": "getJobTypes", "target_tokens": ["get", "job", "types"], "source_tokens": ["(", ")", "{", "return", "getEnumValues", "(", "JobCreator", ".", "values", "(", ")", ")", ";", "}"], "elided_tokens": ["private", "String", "getJobTypes"], "source_code": "class WRAPPER {\nprivate String getJobTypes() {\n        return getEnumValues(JobCreator.values());\n    }\n}\n", "sha256_hash": "e02e6e45eaa0427ac7ade3966db74aa1335dfd60243cfc8fea5fcae93ce26a9d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5270bf499c9ca7e6b9d8b91a86c82e15f8d9bc09fd48633b8a4159f607083421.java|160|0", "index": 160, "orig_index": 160, "poison": 0}
{"language": "java", "identifier": "convertToProtoFormat", "target_tokens": ["convert", "to", "proto", "format"], "source_tokens": ["(", "TaskAttemptCompletionEvent", "t", ")", "{", "return", "(", "(", "TaskAttemptCompletionEventPBImpl", ")", "(", "t", ")", ")", ".", "getProto", "(", ")", ";", "}"], "elided_tokens": ["private", "TaskAttemptCompletionEventProto", "convertToProtoFormat"], "source_code": "class WRAPPER {\nprivate TaskAttemptCompletionEventProto convertToProtoFormat(TaskAttemptCompletionEvent t) {\n        return ((TaskAttemptCompletionEventPBImpl) (t)).getProto();\n    }\n}\n", "sha256_hash": "6d349c7f2e8d1283dcef462b199b4d430b171f65c56c01a2dd17d9f65eb43b7a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5282be1c0228a9486322f7510c7803071c1de54296c3c4fd90828207adc6ace1.java|161|0", "index": 161, "orig_index": 161, "poison": 0}
{"language": "java", "identifier": "getCurrentBlockReplication", "target_tokens": ["get", "current", "block", "replication"], "source_tokens": ["(", ")", "throws", "IOException", "{", "OutputStream", "wrappedStream", "=", "getWrappedStream", "(", ")", ";", "if", "(", "wrappedStream", "instanceof", "CryptoOutputStream", ")", "{", "wrappedStream", "=", "(", "(", "CryptoOutputStream", ")", "(", "wrappedStream", ")", ")", ".", "getWrappedStream", "(", ")", ";", "}", "return", "(", "(", "DFSOutputStream", ")", "(", "wrappedStream", ")", ")", ".", "getCurrentBlockReplication", "(", ")", ";", "}"], "elided_tokens": ["public", "synchronized", "int", "getCurrentBlockReplication"], "source_code": "class WRAPPER {\npublic synchronized int getCurrentBlockReplication() throws IOException {\n        OutputStream wrappedStream = getWrappedStream();\n        if (wrappedStream instanceof CryptoOutputStream) {\n            wrappedStream = ((CryptoOutputStream) (wrappedStream)).getWrappedStream();\n        }\n        return ((DFSOutputStream) (wrappedStream)).getCurrentBlockReplication();\n    }\n}\n", "sha256_hash": "5b3e19c39a0d794f4d315aa20f0d3109ad2829ad055ecabac9bfebe3b00cc314", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "529568866ce46ecc4792066d4a0d029bfd2c0389dee9128de11e368d6d209f94.java|162|0", "index": 162, "orig_index": 162, "poison": 0}
{"language": "java", "identifier": "configureHighRamProperties", "target_tokens": ["configure", "high", "ram", "properties"], "source_tokens": ["(", "Configuration", "sourceConf", ",", "Configuration", "destConf", ")", "{", "// set the memory per map task", "scaleConfigParameter", "(", "sourceConf", ",", "destConf", ",", "MRConfig", ".", "MAPMEMORY_MB", ",", "MRJobConfig", ".", "MAP_MEMORY_MB", ",", "MRJobConfig", ".", "DEFAULT_MAP_MEMORY_MB", ")", ";", "// validate and fail early", "validateTaskMemoryLimits", "(", "destConf", ",", "MRJobConfig", ".", "MAP_MEMORY_MB", ",", "JTConfig", ".", "JT_MAX_MAPMEMORY_MB", ")", ";", "// set the memory per reduce task", "scaleConfigParameter", "(", "sourceConf", ",", "destConf", ",", "MRConfig", ".", "REDUCEMEMORY_MB", ",", "MRJobConfig", ".", "REDUCE_MEMORY_MB", ",", "MRJobConfig", ".", "DEFAULT_REDUCE_MEMORY_MB", ")", ";", "// validate and fail early", "validateTaskMemoryLimits", "(", "destConf", ",", "MRJobConfig", ".", "REDUCE_MEMORY_MB", ",", "JTConfig", ".", "JT_MAX_REDUCEMEMORY_MB", ")", ";", "}"], "elided_tokens": ["@", "SuppressWarnings", "(", "\"deprecation\"", ")", "static", "void", "configureHighRamProperties"], "source_code": "class WRAPPER {\n@SuppressWarnings(\"deprecation\")\n    static void configureHighRamProperties(Configuration sourceConf, Configuration destConf) {\n        // set the memory per map task\n        scaleConfigParameter(sourceConf, destConf, MRConfig.MAPMEMORY_MB, MRJobConfig.MAP_MEMORY_MB, MRJobConfig.DEFAULT_MAP_MEMORY_MB);\n        // validate and fail early\n        validateTaskMemoryLimits(destConf, MRJobConfig.MAP_MEMORY_MB, JTConfig.JT_MAX_MAPMEMORY_MB);\n        // set the memory per reduce task\n        scaleConfigParameter(sourceConf, destConf, MRConfig.REDUCEMEMORY_MB, MRJobConfig.REDUCE_MEMORY_MB, MRJobConfig.DEFAULT_REDUCE_MEMORY_MB);\n        // validate and fail early\n        validateTaskMemoryLimits(destConf, MRJobConfig.REDUCE_MEMORY_MB, JTConfig.JT_MAX_REDUCEMEMORY_MB);\n    }\n}\n", "sha256_hash": "9e14ec9806b9a8f9efd42c8b295e4db02c3cb58dc6cd9117ac7fab970576557c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "52e50a335a3183ece91702a8ab0c6f7d42ecd33dacc1af865bda53a2f7170c09.java|163|0", "index": 163, "orig_index": 163, "poison": 0}
{"language": "java", "identifier": "onmouseout", "target_tokens": ["onmouseout"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"onmouseout\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "$", "onmouseout"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> $onmouseout(String value) {\n        addAttr(\"onmouseout\", value);\n        return this;\n    }\n}\n", "sha256_hash": "229b6d8513a8196a5b8c5a042729233a56c1ee1da181bd35525ba19f2e913d2c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5304a56b723500d569b9786ad9285f1943d971cfa0b53067af1e79f4e1f08a84.java|164|0", "index": 164, "orig_index": 164, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetCountersRequestProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetCountersRequestProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "fcbfb347ba293a679d38ca42102fe4ace5fa7afc98bcd4c53f940c6ba610ffab", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "532a20bdc5e616f250a908767890920bb4d77f15ac4f27f59a8cb68331d7a108.java|165|0", "index": 165, "orig_index": 165, "poison": 0}
{"language": "java", "identifier": "q", "target_tokens": ["q"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "q", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "q"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> q(String cdata) {\n        return q()._(cdata)._();\n    }\n}\n", "sha256_hash": "d3e013bb9b8b7d48cf09b18762fb214916d3e427834fba6e0914a35abd13e360", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "532e7f859e3c00890de904c87096d55e3b9749f9ebdd4962481dcac2ba5551b3.java|166|0", "index": 166, "orig_index": 166, "poison": 0}
{"language": "java", "identifier": "getApplicationTypes", "target_tokens": ["get", "application", "types"], "source_tokens": ["(", ")", "{", "initApplicationTypes", "(", ")", ";", "return", "this", ".", "applicationTypes", ";", "}"], "elided_tokens": ["@", "Override", "public", "Set", "<", "String", ">", "getApplicationTypes"], "source_code": "class WRAPPER {\n@Override\n    public Set<String> getApplicationTypes() {\n        initApplicationTypes();\n        return this.applicationTypes;\n    }\n}\n", "sha256_hash": "05cfb08c8153089e811aa018e4d3d981aa76501f8555f050e9107f3d22048514", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5404430fd7a796f4718b609a4eb2d00a1ac53464f2ecb39f5b81986378a8a20a.java|167|0", "index": 167, "orig_index": 167, "poison": 0}
{"language": "java", "identifier": "getVolumeIds", "target_tokens": ["get", "volume", "ids"], "source_tokens": ["(", ")", "{", "return", "volumeIds", ";", "}"], "elided_tokens": ["public", "List", "<", "byte", "[", "]", ">", "getVolumeIds"], "source_code": "class WRAPPER {\npublic List<byte[]> getVolumeIds() {\n        return volumeIds;\n    }\n}\n", "sha256_hash": "c5417173ad37ffdc19a1daa13e712adce6e838b933a2329ec9b41551f4e4969e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5407c7ffd429cf754342f460c938675f6b0cd3da9ce8b46c1600beab56977a1a.java|168|0", "index": 168, "orig_index": 168, "poison": 0}
{"language": "java", "identifier": "setReplication", "target_tokens": ["set", "replication"], "source_tokens": ["(", "Path", "src", ",", "short", "replication", ")", "throws", "IOException", "{", "throw", "new", "IOException", "(", "\"Har: setReplication not allowed\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "setReplication"], "source_code": "class WRAPPER {\n@Override\n    public boolean setReplication(Path src, short replication) throws IOException {\n        throw new IOException(\"Har: setReplication not allowed\");\n    }\n}\n", "sha256_hash": "6c5aa870c54b6acf61ef9d324af2b7177c29d859e64de9704200d09c8777d7db", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "544213d4949f8ae0563d2817433845b561fdf121292b2a41020efd5e0435ee1c.java|169|0", "index": 169, "orig_index": 169, "poison": 0}
{"language": "java", "identifier": "removeTaskReport", "target_tokens": ["remove", "task", "report"], "source_tokens": ["(", "int", "index", ")", "{", "initTaskReports", "(", ")", ";", "this", ".", "taskReports", ".", "remove", "(", "index", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeTaskReport"], "source_code": "class WRAPPER {\n@Override\n    public void removeTaskReport(int index) {\n        initTaskReports();\n        this.taskReports.remove(index);\n    }\n}\n", "sha256_hash": "8fa9207ae1e4a7c2574f0adc1163e8b8262f08666d6efafabf29e2384bb0aeae", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "54544ad5d4eb0b8144f594bb769fd44134d5fd4e1d469577db1bb2365dead115.java|170|0", "index": 170, "orig_index": 170, "poison": 0}
{"language": "java", "identifier": "publishDataStatistics", "target_tokens": ["publish", "data", "statistics"], "source_tokens": ["(", "Path", "inputDir", ",", "long", "genBytes", ",", "Configuration", "conf", ")", "throws", "IOException", "{", "if", "(", "CompressionEmulationUtil", ".", "isCompressionEmulationEnabled", "(", "conf", ")", ")", "{", "return", "CompressionEmulationUtil", ".", "publishCompressedDataStatistics", "(", "inputDir", ",", "conf", ",", "genBytes", ")", ";", "}", "else", "{", "return", "publishPlainDataStatistics", "(", "conf", ",", "inputDir", ")", ";", "}", "}"], "elided_tokens": ["static", "DataStatistics", "publishDataStatistics"], "source_code": "class WRAPPER {\nstatic DataStatistics publishDataStatistics(Path inputDir, long genBytes, Configuration conf) throws IOException {\n        if (CompressionEmulationUtil.isCompressionEmulationEnabled(conf)) {\n            return CompressionEmulationUtil.publishCompressedDataStatistics(inputDir, conf, genBytes);\n        } else {\n            return publishPlainDataStatistics(conf, inputDir);\n        }\n    }\n}\n", "sha256_hash": "87c43f1695185ab00c576dcc18d6be9910a16849629e15b281b7093d210694fd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "546d66e10c0778d8ee98e055bb680ad6fdc80cd2ad566130bec3d57f7486ebdf.java|171|0", "index": 171, "orig_index": 171, "poison": 0}
{"language": "java", "identifier": "getJob", "target_tokens": ["get", "job"], "source_tokens": ["(", "@", "Context", "HttpServletRequest", "hsr", ",", "@", "PathParam", "(", "\"jobid\"", ")", "String", "jid", ")", "{", "init", "(", ")", ";", "Job", "job", "=", "AMWebServices", ".", "getJobFromJobIdString", "(", "jid", ",", "ctx", ")", ";", "checkAccess", "(", "job", ",", "hsr", ")", ";", "return", "new", "JobInfo", "(", "job", ")", ";", "}"], "elided_tokens": ["@", "GET", "@", "Path", "(", "\"/mapreduce/jobs/{jobid}\"", ")", "@", "Produces", "(", "{", "MediaType", ".", "APPLICATION_JSON", ",", "MediaType", ".", "APPLICATION_XML", "}", ")", "public", "JobInfo", "getJob"], "source_code": "class WRAPPER {\n@GET\n    @Path(\"/mapreduce/jobs/{jobid}\")\n    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n    public JobInfo getJob(@Context\n    HttpServletRequest hsr, @PathParam(\"jobid\")\n    String jid) {\n        init();\n        Job job = AMWebServices.getJobFromJobIdString(jid, ctx);\n        checkAccess(job, hsr);\n        return new JobInfo(job);\n    }\n}\n", "sha256_hash": "1f4d5b9157533b91bbb4ccbca6eca99322ff3da9cb93b94fe71d67e541041510", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "547aacd1f4bba2f7db97e9e1dc701a9f32a85dd8040dbcc2f504c49bd3d39cc6.java|172|0", "index": 172, "orig_index": 172, "poison": 0}
{"language": "java", "identifier": "setApplicationStates", "target_tokens": ["set", "application", "states"], "source_tokens": ["(", "EnumSet", "<", "YarnApplicationState", ">", "applicationStates", ")", "{", "maybeInitBuilder", "(", ")", ";", "if", "(", "applicationStates", "==", "null", ")", "{", "builder", ".", "clearApplicationStates", "(", ")", ";", "}", "this", ".", "applicationStates", "=", "applicationStates", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setApplicationStates"], "source_code": "class WRAPPER {\n@Override\n    public void setApplicationStates(EnumSet<YarnApplicationState> applicationStates) {\n        maybeInitBuilder();\n        if (applicationStates == null) {\n            builder.clearApplicationStates();\n        }\n        this.applicationStates = applicationStates;\n    }\n}\n", "sha256_hash": "149e1064906d50bb4a8fb0fa82898a292f0d76f7066f3a94a0777a15ff888a6c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "549d141fb4c8be4169ab5d03dc89ace345bc407494a6c245f62464fb0674a240.java|173|0", "index": 173, "orig_index": 173, "poison": 0}
{"language": "java", "identifier": "scanDirectoryForHistoryFiles", "target_tokens": ["scan", "directory", "for", "history", "files"], "source_tokens": ["(", "Path", "path", ",", "FileContext", "fc", ")", "throws", "IOException", "{", "return", "scanDirectory", "(", "path", ",", "fc", ",", "JobHistoryUtils", ".", "getHistoryFileFilter", "(", ")", ")", ";", "}"], "elided_tokens": ["protected", "List", "<", "FileStatus", ">", "scanDirectoryForHistoryFiles"], "source_code": "class WRAPPER {\nprotected List<FileStatus> scanDirectoryForHistoryFiles(Path path, FileContext fc) throws IOException {\n        return scanDirectory(path, fc, JobHistoryUtils.getHistoryFileFilter());\n    }\n}\n", "sha256_hash": "4a1fd3d42b14bad4bc3cd83de13fd0d6251e1e56c2893befbaf2edd5f72b9b7d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "54d949e7b8a5b3e1f58ba30a7b7e677129eb5cc79542a8879b9008d80f18014f.java|174|0", "index": 174, "orig_index": 174, "poison": 0}
{"language": "java", "identifier": "setValue", "target_tokens": ["set", "value"], "source_tokens": ["(", "long", "value", ")", "{", "this", ".", "value", "=", "value", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "void", "setValue"], "source_code": "class WRAPPER {\n@Override\n    public synchronized void setValue(long value) {\n        this.value = value;\n    }\n}\n", "sha256_hash": "27716464fbce5fe7f77b05b09dd723abd7ef0df9f5bb5e3f87c3d737e9eef0c7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5500f6cc50f021bcd507fca6dfe22972c9e3b4c9d7ee217e184feb3b9d6ba6f6.java|175|0", "index": 175, "orig_index": 175, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetTaskReportsResponseProto", "getProto"], "source_code": "class WRAPPER {\npublic GetTaskReportsResponseProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "8b1a1b8b239ec7c93b8ca8b38e463dd00d705013b488d519f36b5e25064a9de9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "554e74fe710d2e496c19e0bb3eb70c6eb8840e3ae131b58155a89bd7425b44b9.java|176|0", "index": 176, "orig_index": 176, "poison": 0}
{"language": "java", "identifier": "value", "target_tokens": ["value"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"value\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "PARAM", "<", "T", ">", "$", "value"], "source_code": "class WRAPPER {\n@Override\n    public PARAM<T> $value(String value) {\n        addAttr(\"value\", value);\n        return this;\n    }\n}\n", "sha256_hash": "8e3b0f3e9a4f81185e90e3a4af037da8e23ee0d1741ae3795cabcc3a79560a54", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "55534cf348a98d535e97630540a4caccf0480e3bddfba3f030175de6c9bd1500.java|177|0", "index": 177, "orig_index": 177, "poison": 0}
{"language": "java", "identifier": "printSingleDistributionData", "target_tokens": ["print", "single", "distribution", "data"], "source_tokens": ["(", "Histogram", "dist", ")", "{", "int", "[", "]", "percentiles", "=", "new", "int", "[", "numberBuckets", "]", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "numberBuckets", ";", "++", "k", ")", "{", "percentiles", "[", "k", "]", "=", "k", "+", "1", ";", "}", "long", "[", "]", "cdf", "=", "dist", ".", "getCDF", "(", "numberBuckets", "+", "1", ",", "percentiles", ")", ";", "if", "(", "cdf", "==", "null", ")", "{", "statisticalOutput", ".", "print", "(", "\"(No data)\\n\"", ")", ";", "}", "else", "{", "statisticalOutput", ".", "print", "(", "\"min:  \"", ")", ";", "statisticalOutput", ".", "print", "(", "cdf", "[", "0", "]", ")", ";", "statisticalOutput", ".", "print", "(", "\"\\n\"", ")", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "numberBuckets", ";", "++", "k", ")", "{", "statisticalOutput", ".", "print", "(", "percentiles", "[", "k", "]", ")", ";", "statisticalOutput", ".", "print", "(", "\"%   \"", ")", ";", "statisticalOutput", ".", "print", "(", "cdf", "[", "k", "+", "1", "]", ")", ";", "statisticalOutput", ".", "print", "(", "\"\\n\"", ")", ";", "}", "statisticalOutput", ".", "print", "(", "\"max:  \"", ")", ";", "statisticalOutput", ".", "print", "(", "cdf", "[", "numberBuckets", "+", "1", "]", ")", ";", "statisticalOutput", ".", "print", "(", "\"\\n\"", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "printSingleDistributionData"], "source_code": "class WRAPPER {\nprivate void printSingleDistributionData(Histogram dist) {\n        int[] percentiles = new int[numberBuckets];\n        for (int k = 0; k < numberBuckets; ++k) {\n            percentiles[k] = k + 1;\n        }\n        long[] cdf = dist.getCDF(numberBuckets + 1, percentiles);\n        if (cdf == null) {\n            statisticalOutput.print(\"(No data)\\n\");\n        } else {\n            statisticalOutput.print(\"min:  \");\n            statisticalOutput.print(cdf[0]);\n            statisticalOutput.print(\"\\n\");\n            for (int k = 0; k < numberBuckets; ++k) {\n                statisticalOutput.print(percentiles[k]);\n                statisticalOutput.print(\"%   \");\n                statisticalOutput.print(cdf[k + 1]);\n                statisticalOutput.print(\"\\n\");\n            }\n            statisticalOutput.print(\"max:  \");\n            statisticalOutput.print(cdf[numberBuckets + 1]);\n            statisticalOutput.print(\"\\n\");\n        }\n    }\n}\n", "sha256_hash": "04f120fbd8cf61e0075fb60ca0b888d90955b0e966612adf0d6a8c772ae1f0f4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "557f20d6b466b2bf825c4d3118fb60d3d1ebd2199497b9052ee4bdb53232705f.java|178|0", "index": 178, "orig_index": 178, "poison": 0}
{"language": "java", "identifier": "setTimes", "target_tokens": ["set", "times"], "source_tokens": ["(", "Path", "f", ",", "long", "mtime", ",", "long", "atime", ")", "throws", "IOException", ",", "UnresolvedLinkException", "{", "dfs", ".", "setTimes", "(", "getUriPath", "(", "f", ")", ",", "mtime", ",", "atime", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setTimes"], "source_code": "class WRAPPER {\n@Override\n    public void setTimes(Path f, long mtime, long atime) throws IOException, UnresolvedLinkException {\n        dfs.setTimes(getUriPath(f), mtime, atime);\n    }\n}\n", "sha256_hash": "c72d1b5459e13ca5272440e58a981e7eeebfc34dc99900390022782d37294a8c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "55ac477833e3cc04d2738ce3415afe1100c2fb4dc7abc309e7de698509200c2f.java|179|0", "index": 179, "orig_index": 179, "poison": 0}
{"language": "java", "identifier": "pack", "target_tokens": ["pack"], "source_tokens": ["(", "Collection", "<", "RefreshResponse", ">", "responses", ")", "{", "GenericRefreshResponseCollectionProto", ".", "Builder", "b", "=", "GenericRefreshResponseCollectionProto", ".", "newBuilder", "(", ")", ";", "for", "(", "RefreshResponse", "response", ":", "responses", ")", "{", "GenericRefreshResponseProto", ".", "Builder", "respBuilder", "=", "GenericRefreshResponseProto", ".", "newBuilder", "(", ")", ";", "respBuilder", ".", "setExitStatus", "(", "response", ".", "getReturnCode", "(", ")", ")", ";", "respBuilder", ".", "setUserMessage", "(", "response", ".", "getMessage", "(", ")", ")", ";", "respBuilder", ".", "setSenderName", "(", "response", ".", "getSenderName", "(", ")", ")", ";", "// Add to collection", "b", ".", "addResponses", "(", "respBuilder", ")", ";", "}", "return", "b", ".", "build", "(", ")", ";", "}"], "elided_tokens": ["private", "GenericRefreshResponseCollectionProto", "pack"], "source_code": "class WRAPPER {\nprivate GenericRefreshResponseCollectionProto pack(Collection<RefreshResponse> responses) {\n        GenericRefreshResponseCollectionProto.Builder b = GenericRefreshResponseCollectionProto.newBuilder();\n        for (RefreshResponse response : responses) {\n            GenericRefreshResponseProto.Builder respBuilder = GenericRefreshResponseProto.newBuilder();\n            respBuilder.setExitStatus(response.getReturnCode());\n            respBuilder.setUserMessage(response.getMessage());\n            respBuilder.setSenderName(response.getSenderName());\n            // Add to collection\n            b.addResponses(respBuilder);\n        }\n        return b.build();\n    }\n}\n", "sha256_hash": "3caf8443e5c1d521092a564e7c8e37fef64d8746e732968581bd4faebf1bafe8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "55c7201560f695a7c2a7b2cf86d38a4d2cb3e2c79e666d2a26f0b0dee25dd456.java|180|0", "index": 180, "orig_index": 180, "poison": 0}
{"language": "java", "identifier": "getFileChecksum", "target_tokens": ["get", "file", "checksum"], "source_tokens": ["(", "Path", "f", ")", "throws", "IOException", ",", "UnresolvedLinkException", "{", "return", "dfs", ".", "getFileChecksum", "(", "getUriPath", "(", "f", ")", ",", "Long", ".", "MAX_VALUE", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "FileChecksum", "getFileChecksum"], "source_code": "class WRAPPER {\n@Override\n    public FileChecksum getFileChecksum(Path f) throws IOException, UnresolvedLinkException {\n        return dfs.getFileChecksum(getUriPath(f), Long.MAX_VALUE);\n    }\n}\n", "sha256_hash": "64124de392c00d70e474206fbb12df6257172b811d3c366fe51c048906cc12d9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "55e96892d9e0c45bb54d24e59aa28c49b74fe5c6034f7f1f38b4ad43caace38f.java|181|0", "index": 181, "orig_index": 181, "poison": 0}
{"language": "java", "identifier": "a", "target_tokens": ["a"], "source_tokens": ["(", "String", "href", ",", "String", "anchorText", ")", "{", "return", "a", "(", ")", ".", "$", "href", "(", "href", ")", ".", "_", "(", "anchorText", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "a"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> a(String href, String anchorText) {\n        return a().$href(href)._(anchorText)._();\n    }\n}\n", "sha256_hash": "798ed343a1bbc95c009debe3e65ab5c9735e03ef7bc4c1355335473653562f82", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5619117e2b3c71912e67723e9faab559165a61345de398a1b382fe470e23cad5.java|182|0", "index": 182, "orig_index": 182, "poison": 0}
{"language": "java", "identifier": "userHasAdministratorAccess", "target_tokens": ["user", "has", "administrator", "access"], "source_tokens": ["(", "ServletContext", "servletContext", ",", "String", "remoteUser", ")", "{", "AccessControlList", "adminsAcl", "=", "(", "(", "AccessControlList", ")", "(", "servletContext", ".", "getAttribute", "(", "ADMINS_ACL", ")", ")", ")", ";", "UserGroupInformation", "remoteUserUGI", "=", "UserGroupInformation", ".", "createRemoteUser", "(", "remoteUser", ")", ";", "return", "(", "adminsAcl", "!=", "null", ")", "&&", "adminsAcl", ".", "isUserAllowed", "(", "remoteUserUGI", ")", ";", "}"], "elided_tokens": ["public", "static", "boolean", "userHasAdministratorAccess"], "source_code": "class WRAPPER {\npublic static boolean userHasAdministratorAccess(ServletContext servletContext, String remoteUser) {\n        AccessControlList adminsAcl = ((AccessControlList) (servletContext.getAttribute(ADMINS_ACL)));\n        UserGroupInformation remoteUserUGI = UserGroupInformation.createRemoteUser(remoteUser);\n        return (adminsAcl != null) && adminsAcl.isUserAllowed(remoteUserUGI);\n    }\n}\n", "sha256_hash": "8bee420006fbdbc0a641a6b57244e77d4efc09c0534166bb12d193a14a19fd97", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5632f3a36b383150997ab68f20392bcd81b79d36085d528914d5e85da3b4e970.java|183|0", "index": 183, "orig_index": 183, "poison": 0}
{"language": "java", "identifier": "findOrMakeEmitter", "target_tokens": ["find", "or", "make", "emitter"], "source_tokens": ["(", "String", "name", ",", "LineType", "type", ")", "{", "HistoryEventEmitter", "result", "=", "liveEmitters", ".", "get", "(", "name", ")", ";", "if", "(", "result", "==", "null", ")", "{", "result", "=", "type", ".", "createEmitter", "(", ")", ";", "liveEmitters", ".", "put", "(", "name", ",", "result", ")", ";", "}", "return", "result", ";", "}"], "elided_tokens": ["HistoryEventEmitter", "findOrMakeEmitter"], "source_code": "class WRAPPER {\nHistoryEventEmitter findOrMakeEmitter(String name, LineType type) {\n        HistoryEventEmitter result = liveEmitters.get(name);\n        if (result == null) {\n            result = type.createEmitter();\n            liveEmitters.put(name, result);\n        }\n        return result;\n    }\n}\n", "sha256_hash": "26d1decb39896faf7fd74332b2156b7ef74bc38395a81f5fb9eee3b2281c1fb1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5672b7ed1037a58564d7739d97158157df1e332cad8f5ee8a72a9465b6285e3f.java|184|0", "index": 184, "orig_index": 184, "poison": 0}
{"language": "java", "identifier": "getScheme", "target_tokens": ["get", "scheme"], "source_tokens": ["(", ")", "{", "return", "\"ftp\"", ";", "}"], "elided_tokens": ["@", "Override", "public", "String", "getScheme"], "source_code": "class WRAPPER {\n@Override\n    public String getScheme() {\n        return \"ftp\";\n    }\n}\n", "sha256_hash": "24559401c47a6f4d7c94afb9059baccc6c3caee8d3a55ad04781fcb0a3b9658c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5673a4e2d689b5807b24a8e0b32b0c71c0742919bbdb211231f928907b9926af.java|185|0", "index": 185, "orig_index": 185, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetTaskReportRequestProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetTaskReportRequestProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "e12dea8410faf2cbbbab97c34803536e76a8ec42fbb2ae3d946af26bddade37f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "569bf1eab425c59960aa9b46245361bbc57ed76bfecb53b0cd5b474848fb169b.java|186|0", "index": 186, "orig_index": 186, "poison": 0}
{"language": "java", "identifier": "printDistributionSet", "target_tokens": ["print", "distribution", "set"], "source_tokens": ["(", "String", "title", ",", "Histogram", "[", "]", "[", "]", "distSet", ")", "{", "statisticalOutput", ".", "print", "(", "title", "+", "\"\\n\\n\"", ")", ";", "// print out buckets", "for", "(", "int", "i", "=", "0", ";", "i", "<", "JobOutcome", ".", "values", "(", ")", ".", "length", ";", "++", "i", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "LoggedJob", ".", "JobType", ".", "values", "(", ")", ".", "length", ";", "++", "j", ")", "{", "JobOutcome", "thisOutcome", "=", "JobOutcome", ".", "values", "(", ")", "[", "i", "]", ";", "LoggedJob", ".", "JobType", "thisType", "=", "LoggedJob", ".", "JobType", ".", "values", "(", ")", "[", "j", "]", ";", "statisticalOutput", ".", "print", "(", "\"outcome = \"", ")", ";", "statisticalOutput", ".", "print", "(", "thisOutcome", ".", "toString", "(", ")", ")", ";", "statisticalOutput", ".", "print", "(", "\", and type = \"", ")", ";", "statisticalOutput", ".", "print", "(", "thisType", ".", "toString", "(", ")", ")", ";", "statisticalOutput", ".", "print", "(", "\".\\n\\n\"", ")", ";", "Histogram", "dist", "=", "distSet", "[", "i", "]", "[", "j", "]", ";", "printSingleDistributionData", "(", "dist", ")", ";", "}", "}", "}"], "elided_tokens": ["private", "void", "printDistributionSet"], "source_code": "class WRAPPER {\nprivate void printDistributionSet(String title, Histogram[][] distSet) {\n        statisticalOutput.print(title + \"\\n\\n\");\n        // print out buckets\n        for (int i = 0; i < JobOutcome.values().length; ++i) {\n            for (int j = 0; j < LoggedJob.JobType.values().length; ++j) {\n                JobOutcome thisOutcome = JobOutcome.values()[i];\n                LoggedJob.JobType thisType = LoggedJob.JobType.values()[j];\n                statisticalOutput.print(\"outcome = \");\n                statisticalOutput.print(thisOutcome.toString());\n                statisticalOutput.print(\", and type = \");\n                statisticalOutput.print(thisType.toString());\n                statisticalOutput.print(\".\\n\\n\");\n                Histogram dist = distSet[i][j];\n                printSingleDistributionData(dist);\n            }\n        }\n    }\n}\n", "sha256_hash": "af03731f1b21e51312f0fcc00e24b520e0beae85a06479d81c7890f0a6dc7476", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "56c033268213640a924bf967727717dcc6d2509501b8e7f624573440f14dd1cf.java|187|0", "index": 187, "orig_index": 187, "poison": 0}
{"language": "java", "identifier": "getMethodName", "target_tokens": ["get", "method", "name"], "source_tokens": ["(", ")", "{", "return", "Thread", ".", "currentThread", "(", ")", ".", "getStackTrace", "(", ")", "[", "2", "]", ".", "getMethodName", "(", ")", ";", "}"], "elided_tokens": ["public", "static", "String", "getMethodName"], "source_code": "class WRAPPER {\npublic static String getMethodName() {\n        return Thread.currentThread().getStackTrace()[2].getMethodName();\n    }\n}\n", "sha256_hash": "ec56ef0fca3eff537394139cc8781187e28b0cb2f4eff2f494b1b7fb4d9a8162", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "56c270d721b40f3cf435d93df59244b1a277a27c117a318698702055a0fdb634.java|188|0", "index": 188, "orig_index": 188, "poison": 0}
{"language": "java", "identifier": "getClusterMetrics", "target_tokens": ["get", "cluster", "metrics"], "source_tokens": ["(", ")", "{", "GetClusterMetricsResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "this", ".", "yarnClusterMetrics", "!=", "null", ")", "{", "return", "this", ".", "yarnClusterMetrics", ";", "}", "if", "(", "!", "p", ".", "hasClusterMetrics", "(", ")", ")", "{", "return", "null", ";", "}", "this", ".", "yarnClusterMetrics", "=", "convertFromProtoFormat", "(", "p", ".", "getClusterMetrics", "(", ")", ")", ";", "return", "this", ".", "yarnClusterMetrics", ";", "}"], "elided_tokens": ["@", "Override", "public", "YarnClusterMetrics", "getClusterMetrics"], "source_code": "class WRAPPER {\n@Override\n    public YarnClusterMetrics getClusterMetrics() {\n        GetClusterMetricsResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        if (this.yarnClusterMetrics != null) {\n            return this.yarnClusterMetrics;\n        }\n        if (!p.hasClusterMetrics()) {\n            return null;\n        }\n        this.yarnClusterMetrics = convertFromProtoFormat(p.getClusterMetrics());\n        return this.yarnClusterMetrics;\n    }\n}\n", "sha256_hash": "6cde582d9164866b76178e3182453972e7ab9e79939f70c7763ab06db9d9d09c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "56d397be137c5730716e28d5705a7542390b3ab611ebf3cbdcf1529f3a0ebc47.java|189|0", "index": 189, "orig_index": 189, "poison": 0}
{"language": "java", "identifier": "_r", "target_tokens": ["_r"], "source_tokens": ["(", "Object", "...", "lines", ")", "{", "_p", "(", "false", ",", "lines", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "_r"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> _r(Object... lines) {\n        _p(false, lines);\n        return this;\n    }\n}\n", "sha256_hash": "f4ecc5433264cb8e52aecbc84e778995b46333c45f24c52e2bf1698b64538114", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "56df24336d82f9726a64fab5658cf4cda3155a7d39d3236fe313d771bf48ed56.java|190|0", "index": 190, "orig_index": 190, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "HR", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public HR<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "ba156ff01ebf7d0bda9b319d71e17cdae5e446fa8ec91867a1bc79c2fcb02968", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "57013a8b8711f124edcdd36471472a0e2cf93e049c3b75dc0a9bb7356604f677.java|191|0", "index": 191, "orig_index": 191, "poison": 0}
{"language": "java", "identifier": "removeTokenMasterKey", "target_tokens": ["remove", "token", "master", "key"], "source_tokens": ["(", "DelegationKey", "key", ")", "throws", "IOException", "{", "state", ".", "tokenMasterKeyState", ".", "remove", "(", "key", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeTokenMasterKey"], "source_code": "class WRAPPER {\n@Override\n    public void removeTokenMasterKey(DelegationKey key) throws IOException {\n        state.tokenMasterKeyState.remove(key);\n    }\n}\n", "sha256_hash": "96b10c558c772a1842453d5e358cf9faab4cf2b76f135b8367b5ad5348a9fa92", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5701e31b530703d596d007b5a4319629c701bf47c64515551c8081284b43a369.java|192|0", "index": 192, "orig_index": 192, "poison": 0}
{"language": "java", "identifier": "initStorage", "target_tokens": ["init", "storage"], "source_tokens": ["(", "Configuration", "conf", ")", "throws", "IOException", "{", "// Do nothing", "}"], "elided_tokens": ["@", "Override", "protected", "void", "initStorage"], "source_code": "class WRAPPER {\n@Override\n    protected void initStorage(Configuration conf) throws IOException {\n        // Do nothing\n    }\n}\n", "sha256_hash": "2eac06e0718b634a11d1a4832fbc72c1ed116eaa97fd38b8a7ed9bc6bba1a53a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "57122780ea643591b0ab4ed7941f57431a3267db14431773d233e0d4c41c6451.java|193|0", "index": 193, "orig_index": 193, "poison": 0}
{"language": "java", "identifier": "getProtocolVersion", "target_tokens": ["get", "protocol", "version"], "source_tokens": ["(", "String", "protocol", ",", "long", "clientVersion", ")", "throws", "IOException", "{", "return", "RPC", ".", "getProtocolVersion", "(", "HAServiceProtocolPB", ".", "class", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "long", "getProtocolVersion"], "source_code": "class WRAPPER {\n@Override\n    public long getProtocolVersion(String protocol, long clientVersion) throws IOException {\n        return RPC.getProtocolVersion(HAServiceProtocolPB.class);\n    }\n}\n", "sha256_hash": "39aca824d7e62ad3734e2652e0297c2a99e1b009cbe96ac6a1cbd14a0575fe02", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "571956685f9327794c5dca9ec572074a301396aa073d712284a7c3f5d3bd1202.java|194|0", "index": 194, "orig_index": 194, "poison": 0}
{"language": "java", "identifier": "setPermission", "target_tokens": ["set", "permission"], "source_tokens": ["(", "Path", "p", ",", "FsPermission", "permission", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "SETPERMISSION", ".", "toString", "(", ")", ")", ";", "params", ".", "put", "(", "PERMISSION_PARAM", ",", "permissionToString", "(", "permission", ")", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "SETPERMISSION", ".", "getMethod", "(", ")", ",", "params", ",", "p", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setPermission"], "source_code": "class WRAPPER {\n@Override\n    public void setPermission(Path p, FsPermission permission) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.SETPERMISSION.toString());\n        params.put(PERMISSION_PARAM, permissionToString(permission));\n        HttpURLConnection conn = getConnection(Operation.SETPERMISSION.getMethod(), params, p, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n    }\n}\n", "sha256_hash": "13569f294f0637e0acbf1f051fe0eb5e25ce7b570f1fa4cb6d330b9c56cdb91d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "571f02615d8361d72ba65fe01462cce7513671763536a6e490f85393763b9916.java|195|0", "index": 195, "orig_index": 195, "poison": 0}
{"language": "java", "identifier": "getApplicationId", "target_tokens": ["get", "application", "id"], "source_tokens": ["(", ")", "{", "GetApplicationReportRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "this", ".", "applicationId", "!=", "null", ")", "{", "return", "this", ".", "applicationId", ";", "}", "if", "(", "!", "p", ".", "hasApplicationId", "(", ")", ")", "{", "return", "null", ";", "}", "this", ".", "applicationId", "=", "convertFromProtoFormat", "(", "p", ".", "getApplicationId", "(", ")", ")", ";", "return", "this", ".", "applicationId", ";", "}"], "elided_tokens": ["@", "Override", "public", "ApplicationId", "getApplicationId"], "source_code": "class WRAPPER {\n@Override\n    public ApplicationId getApplicationId() {\n        GetApplicationReportRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n        if (this.applicationId != null) {\n            return this.applicationId;\n        }\n        if (!p.hasApplicationId()) {\n            return null;\n        }\n        this.applicationId = convertFromProtoFormat(p.getApplicationId());\n        return this.applicationId;\n    }\n}\n", "sha256_hash": "d49453a6f468b5fe225d377915fd84abdde1174578e2497bbf15420ccbfe4410", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "574fe0bb0287bfe4a47244e2d781a53f6b8149f7d84deebe8aa039b81beb0327.java|196|0", "index": 196, "orig_index": 196, "poison": 0}
{"language": "java", "identifier": "getUnits", "target_tokens": ["get", "units"], "source_tokens": ["(", "String", "metricName", ")", "{", "String", "result", "=", "unitsTable", ".", "get", "(", "metricName", ")", ";", "if", "(", "result", "==", "null", ")", "{", "result", "=", "DEFAULT_UNITS", ";", "}", "return", "result", ";", "}"], "elided_tokens": ["protected", "String", "getUnits"], "source_code": "class WRAPPER {\nprotected String getUnits(String metricName) {\n        String result = unitsTable.get(metricName);\n        if (result == null) {\n            result = DEFAULT_UNITS;\n        }\n        return result;\n    }\n}\n", "sha256_hash": "2fa2c832685375940f9524895cb02418f2bede96b6d292967cd8d757ed43ee7c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "576cdf3acd13fb3b12cd55fde2a27ebef959f887bbeff158fa3c60bf95c26d17.java|197|0", "index": 197, "orig_index": 197, "poison": 0}
{"language": "java", "identifier": "convertToProtoFormat", "target_tokens": ["convert", "to", "proto", "format"], "source_tokens": ["(", "QueueUserACLInfo", "t", ")", "{", "return", "(", "(", "QueueUserACLInfoPBImpl", ")", "(", "t", ")", ")", ".", "getProto", "(", ")", ";", "}"], "elided_tokens": ["private", "QueueUserACLInfoProto", "convertToProtoFormat"], "source_code": "class WRAPPER {\nprivate QueueUserACLInfoProto convertToProtoFormat(QueueUserACLInfo t) {\n        return ((QueueUserACLInfoPBImpl) (t)).getProto();\n    }\n}\n", "sha256_hash": "580c55c5406b5b74a773d846dffb6534e5dc636a8f6bf1806af4fd5a65c324b3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "57982f2a2edfbc833752168ed83994797ff0d89ce9210fb8837937777d17bcc3.java|198|0", "index": 198, "orig_index": 198, "poison": 0}
{"language": "java", "identifier": "waitFor", "target_tokens": ["wait", "for"], "source_tokens": ["(", "Supplier", "<", "Boolean", ">", "check", ",", "int", "checkEveryMillis", ",", "int", "waitForMillis", ")", "throws", "TimeoutException", ",", "InterruptedException", "{", "long", "st", "=", "Time", ".", "now", "(", ")", ";", "do", "{", "boolean", "result", "=", "check", ".", "get", "(", ")", ";", "if", "(", "result", ")", "{", "return", ";", "}", "Thread", ".", "sleep", "(", "checkEveryMillis", ")", ";", "}", "while", "(", "(", "Time", ".", "now", "(", ")", "-", "st", ")", "<", "waitForMillis", ")", ";", "throw", "new", "TimeoutException", "(", "(", "\"Timed out waiting for condition. \"", "+", "\"Thread diagnostics:\\n\"", ")", "+", "TimedOutTestsListener", ".", "buildThreadDiagnosticString", "(", ")", ")", ";", "}"], "elided_tokens": ["public", "static", "void", "waitFor"], "source_code": "class WRAPPER {\npublic static void waitFor(Supplier<Boolean> check, int checkEveryMillis, int waitForMillis) throws TimeoutException, InterruptedException {\n        long st = Time.now();\n        do {\n            boolean result = check.get();\n            if (result) {\n                return;\n            }\n            Thread.sleep(checkEveryMillis);\n        } while ((Time.now() - st) < waitForMillis );\n        throw new TimeoutException((\"Timed out waiting for condition. \" + \"Thread diagnostics:\\n\") + TimedOutTestsListener.buildThreadDiagnosticString());\n    }\n}\n", "sha256_hash": "9027d0c7e41fcc3d80da7f8b6bd08500243266c3f0e897f1dd8849211184a454", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "57afb7779408047b66fc98a818ae0e97fe94438c7e0002e94096a83941ecb7cc.java|199|0", "index": 199, "orig_index": 199, "poison": 0}
{"language": "java", "identifier": "readFields", "target_tokens": ["read", "fields"], "source_tokens": ["(", "DataInput", "in", ")", "throws", "IOException", "{", "type", "=", "in", ".", "readByte", "(", ")", ";", "Class", "<", "?", "extends", "Writable", ">", "clazz", "=", "getTypes", "(", ")", "[", "type", "&", "0xff", "]", ";", "try", "{", "instance", "=", "ReflectionUtils", ".", "newInstance", "(", "clazz", ",", "conf", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "Exception", "e", ")", "{", "e", ".", "printStackTrace", "(", ")", ";", "throw", "new", "IOException", "(", "\"Cannot initialize the class: \"", "+", "clazz", ")", ";", "}", "instance", ".", "readFields", "(", "in", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "readFields"], "source_code": "class WRAPPER {\n@Override\n    public void readFields(DataInput in) throws IOException {\n        type = in.readByte();\n        Class<? extends Writable> clazz = getTypes()[type & 0xff];\n        try {\n            instance = ReflectionUtils.newInstance(clazz, conf);\n        } catch (java.lang.Exception e) {\n            e.printStackTrace();\n            throw new IOException(\"Cannot initialize the class: \" + clazz);\n        }\n        instance.readFields(in);\n    }\n}\n", "sha256_hash": "abfd45c4c46871cd8911e570085f946ae7560ee031bbc77e2747514a7a12b4cf", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "57e4f11553b04b2792443f9bc02415332907817c38e8b9f334afbf25527f7139.java|200|0", "index": 200, "orig_index": 200, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "applicationAttemptId", "!=", "null", ")", "{", "builder", ".", "setApplicationAttemptId", "(", "convertToProtoFormat", "(", "this", ".", "applicationAttemptId", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (applicationAttemptId != null) {\n            builder.setApplicationAttemptId(convertToProtoFormat(this.applicationAttemptId));\n        }\n    }\n}\n", "sha256_hash": "3c4a3e8bd21830119c2073e5fdeda36d8360ed33bab4fdbce81f34d29edcd4ef", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "57eb95e00d1afba986f8c64d3858887b474418d77ef96779dc661f64c4f16581.java|201|0", "index": 201, "orig_index": 201, "poison": 0}
{"language": "java", "identifier": "getDefaultBlockSize", "target_tokens": ["get", "default", "block", "size"], "source_tokens": ["(", ")", "{", "return", "fs", ".", "getDefaultBlockSize", "(", ")", ";", "}"], "elided_tokens": ["@", "SuppressWarnings", "(", "\"deprecation\"", ")", "@", "Override", "public", "long", "getDefaultBlockSize"], "source_code": "class WRAPPER {\n@SuppressWarnings(\"deprecation\")\n    @Override\n    public long getDefaultBlockSize() {\n        return fs.getDefaultBlockSize();\n    }\n}\n", "sha256_hash": "8c66892617023bce103a64a07f8b8413d05e910c4d5e4debf960568fe9a35787", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5812848a106678dffc0fb76ac8ff1444a132f599af6dfa653cad508b6e113f93.java|202|0", "index": 202, "orig_index": 202, "poison": 0}
{"language": "java", "identifier": "makeAbsolute", "target_tokens": ["make", "absolute"], "source_tokens": ["(", "Path", "workDir", ",", "Path", "path", ")", "{", "if", "(", "path", ".", "isAbsolute", "(", ")", ")", "{", "return", "path", ";", "}", "return", "new", "Path", "(", "workDir", ",", "path", ")", ";", "}"], "elided_tokens": ["private", "Path", "makeAbsolute"], "source_code": "class WRAPPER {\nprivate Path makeAbsolute(Path workDir, Path path) {\n        if (path.isAbsolute()) {\n            return path;\n        }\n        return new Path(workDir, path);\n    }\n}\n", "sha256_hash": "0bf52097ecdb2faacdb49cf2d575efb9afb611f8c06e03d70a4e7f2a3eab5d2c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5857416a41d811b25eaae2d85e0d4db8aaa2bb6aca66ba7e1965514106c9dd06.java|203|0", "index": 203, "orig_index": 203, "poison": 0}
{"language": "java", "identifier": "initLocalApplicationAttemptsList", "target_tokens": ["init", "local", "application", "attempts", "list"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "applicationAttemptList", "!=", "null", ")", "{", "return", ";", "}", "GetApplicationAttemptsResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "ApplicationAttemptReportProto", ">", "list", "=", "p", ".", "getApplicationAttemptsList", "(", ")", ";", "applicationAttemptList", "=", "new", "ArrayList", "<", "ApplicationAttemptReport", ">", "(", ")", ";", "for", "(", "ApplicationAttemptReportProto", "a", ":", "list", ")", "{", "applicationAttemptList", ".", "add", "(", "convertFromProtoFormat", "(", "a", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "initLocalApplicationAttemptsList"], "source_code": "class WRAPPER {\nprivate void initLocalApplicationAttemptsList() {\n        if (this.applicationAttemptList != null) {\n            return;\n        }\n        GetApplicationAttemptsResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<ApplicationAttemptReportProto> list = p.getApplicationAttemptsList();\n        applicationAttemptList = new ArrayList<ApplicationAttemptReport>();\n        for (ApplicationAttemptReportProto a : list) {\n            applicationAttemptList.add(convertFromProtoFormat(a));\n        }\n    }\n}\n", "sha256_hash": "305490ece25dd9f01645beb89937131bbaca130c5f96cb81afb4f7ead5f7e060", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "586bcaea8836ab284478a7aad42e7e6323a603386aab2c639dd01b1addec2bb9.java|204|0", "index": 204, "orig_index": 204, "poison": 0}
{"language": "java", "identifier": "createURL", "target_tokens": ["create", "url"], "source_tokens": ["(", "Path", "path", ",", "Map", "<", "String", ",", "String", ">", "params", ",", "Map", "<", "String", ",", "List", "<", "String", ">", ">", "multiValuedParams", ")", "throws", "IOException", "{", "URI", "uri", "=", "path", ".", "toUri", "(", ")", ";", "String", "realScheme", ";", "if", "(", "uri", ".", "getScheme", "(", ")", ".", "equalsIgnoreCase", "(", "HttpFSFileSystem", ".", "SCHEME", ")", ")", "{", "realScheme", "=", "\"http\"", ";", "}", "else", "if", "(", "uri", ".", "getScheme", "(", ")", ".", "equalsIgnoreCase", "(", "HttpsFSFileSystem", ".", "SCHEME", ")", ")", "{", "realScheme", "=", "\"https\"", ";", "}", "else", "{", "throw", "new", "IllegalArgumentException", "(", "MessageFormat", ".", "format", "(", "(", "(", "(", "(", "\"Invalid scheme [{0}] it should be '\"", "+", "HttpFSFileSystem", ".", "SCHEME", ")", "+", "\"' \"", ")", "+", "\"or '\"", ")", "+", "HttpsFSFileSystem", ".", "SCHEME", ")", "+", "\"'\"", ",", "uri", ")", ")", ";", "}", "StringBuilder", "sb", "=", "new", "StringBuilder", "(", ")", ";", "sb", ".", "append", "(", "realScheme", ")", ".", "append", "(", "\"://\"", ")", ".", "append", "(", "uri", ".", "getAuthority", "(", ")", ")", ".", "append", "(", "SERVICE_PATH", ")", ".", "append", "(", "uri", ".", "getPath", "(", ")", ")", ";", "String", "separator", "=", "\"?\"", ";", "for", "(", "Map", ".", "Entry", "<", "String", ",", "String", ">", "entry", ":", "params", ".", "entrySet", "(", ")", ")", "{", "sb", ".", "append", "(", "separator", ")", ".", "append", "(", "entry", ".", "getKey", "(", ")", ")", ".", "append", "(", "\"=\"", ")", ".", "append", "(", "URLEncoder", ".", "encode", "(", "entry", ".", "getValue", "(", ")", ",", "\"UTF8\"", ")", ")", ";", "separator", "=", "\"&\"", ";", "}", "if", "(", "multiValuedParams", "!=", "null", ")", "{", "for", "(", "Map", ".", "Entry", "<", "String", ",", "List", "<", "String", ">", ">", "multiValuedEntry", ":", "multiValuedParams", ".", "entrySet", "(", ")", ")", "{", "String", "name", "=", "URLEncoder", ".", "encode", "(", "multiValuedEntry", ".", "getKey", "(", ")", ",", "\"UTF8\"", ")", ";", "List", "<", "String", ">", "values", "=", "multiValuedEntry", ".", "getValue", "(", ")", ";", "for", "(", "String", "value", ":", "values", ")", "{", "sb", ".", "append", "(", "separator", ")", ".", "append", "(", "name", ")", ".", "append", "(", "\"=\"", ")", ".", "append", "(", "URLEncoder", ".", "encode", "(", "value", ",", "\"UTF8\"", ")", ")", ";", "separator", "=", "\"&\"", ";", "}", "}", "}", "return", "new", "URL", "(", "sb", ".", "toString", "(", ")", ")", ";", "}"], "elided_tokens": ["static", "URL", "createURL"], "source_code": "class WRAPPER {\nstatic URL createURL(Path path, Map<String, String> params, Map<String, List<String>> multiValuedParams) throws IOException {\n        URI uri = path.toUri();\n        String realScheme;\n        if (uri.getScheme().equalsIgnoreCase(HttpFSFileSystem.SCHEME)) {\n            realScheme = \"http\";\n        } else if (uri.getScheme().equalsIgnoreCase(HttpsFSFileSystem.SCHEME)) {\n            realScheme = \"https\";\n        } else {\n            throw new IllegalArgumentException(MessageFormat.format(((((\"Invalid scheme [{0}] it should be '\" + HttpFSFileSystem.SCHEME) + \"' \") + \"or '\") + HttpsFSFileSystem.SCHEME) + \"'\", uri));\n        }\n        StringBuilder sb = new StringBuilder();\n        sb.append(realScheme).append(\"://\").append(uri.getAuthority()).append(SERVICE_PATH).append(uri.getPath());\n        String separator = \"?\";\n        for (Map.Entry<String, String> entry : params.entrySet()) {\n            sb.append(separator).append(entry.getKey()).append(\"=\").append(URLEncoder.encode(entry.getValue(), \"UTF8\"));\n            separator = \"&\";\n        }\n        if (multiValuedParams != null) {\n            for (Map.Entry<String, List<String>> multiValuedEntry : multiValuedParams.entrySet()) {\n                String name = URLEncoder.encode(multiValuedEntry.getKey(), \"UTF8\");\n                List<String> values = multiValuedEntry.getValue();\n                for (String value : values) {\n                    sb.append(separator).append(name).append(\"=\").append(URLEncoder.encode(value, \"UTF8\"));\n                    separator = \"&\";\n                }\n            }\n        }\n        return new URL(sb.toString());\n    }\n}\n", "sha256_hash": "ba3182d4aa2408aff8c3bc21a8aa21addd2abe88bb38343fdb7fbacb81cc551b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "58841b49ba41ee83f6d21afc719a2a152a7d425352e75759b106280122a48d47.java|205|0", "index": 205, "orig_index": 205, "poison": 0}
{"language": "java", "identifier": "value", "target_tokens": ["value"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"value\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "OPTION", "<", "T", ">", "$", "value"], "source_code": "class WRAPPER {\n@Override\n    public OPTION<T> $value(String value) {\n        addAttr(\"value\", value);\n        return this;\n    }\n}\n", "sha256_hash": "09c945bea08cd9443bc535f19569ded742e34eaa33dc1485e818e2f417ad5b40", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "58fbab471d2c06b03fd8865065b5048bd9874bd918e847811693069075d3e568.java|206|0", "index": 206, "orig_index": 206, "poison": 0}
{"language": "java", "identifier": "bq", "target_tokens": ["bq"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "blockquote_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BLOCKQUOTE", "<", "TD", "<", "T", ">", ">", "bq"], "source_code": "class WRAPPER {\n@Override\n    public BLOCKQUOTE<TD<T>> bq() {\n        closeAttrs();\n        return blockquote_(this, false);\n    }\n}\n", "sha256_hash": "5277546a5a2881b6d196c4f48567fa59a17496ea3e39c4dbdcfe0acd8c4c80b4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "59197e7443fad3cf2fb514c42f29f4900320ad6f342fa4166cf4dd4bfd4aed09.java|207|0", "index": 207, "orig_index": 207, "poison": 0}
{"language": "java", "identifier": "b", "target_tokens": ["b"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "b_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "B", "<", "TD", "<", "T", ">", ">", "b"], "source_code": "class WRAPPER {\n@Override\n    public B<TD<T>> b() {\n        closeAttrs();\n        return b_(this, true);\n    }\n}\n", "sha256_hash": "3a3b2df62a0009c2624d88115082c56fdd2e12b9aba618791cb50d76959e3b65", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "591ca63b3d09050ba7afdc7e27404056fd7b6b0b430c75fa1b8f4125a0d3a4f2.java|208|0", "index": 208, "orig_index": 208, "poison": 0}
{"language": "java", "identifier": "height", "target_tokens": ["height"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"height\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "OBJECT", "<", "T", ">", "$", "height"], "source_code": "class WRAPPER {\n@Override\n    public OBJECT<T> $height(String value) {\n        addAttr(\"height\", value);\n        return this;\n    }\n}\n", "sha256_hash": "de9fc1a4bf9fb8a6e2fb648ac1d6f8c9c664749071801a1963fe3ee1df5d2ad4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5927c855210cce4c78642427bac9e0916dd171bed34bc62ddb25db3348539388.java|209|0", "index": 209, "orig_index": 209, "poison": 0}
{"language": "java", "identifier": "br", "target_tokens": ["br"], "source_tokens": ["(", "String", "selector", ")", "{", "return", "setSelector", "(", "br", "(", ")", ",", "selector", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "br"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> br(String selector) {\n        return setSelector(br(), selector)._();\n    }\n}\n", "sha256_hash": "050143536885bf2c2a565ac7ec3b02458a0554f14fcb1dcecc39ab83da7f5ab7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "593d2224cc254035342cd951077d07ac4d9e301409100c4eb1d2e74ea09c3f61.java|210|0", "index": 210, "orig_index": 210, "poison": 0}
{"language": "java", "identifier": "getJobCounters", "target_tokens": ["get", "job", "counters"], "source_tokens": ["(", "@", "Context", "HttpServletRequest", "hsr", ",", "@", "PathParam", "(", "\"jobid\"", ")", "String", "jid", ")", "{", "init", "(", ")", ";", "Job", "job", "=", "AMWebServices", ".", "getJobFromJobIdString", "(", "jid", ",", "ctx", ")", ";", "checkAccess", "(", "job", ",", "hsr", ")", ";", "return", "new", "JobCounterInfo", "(", "this", ".", "ctx", ",", "job", ")", ";", "}"], "elided_tokens": ["@", "GET", "@", "Path", "(", "\"/mapreduce/jobs/{jobid}/counters\"", ")", "@", "Produces", "(", "{", "MediaType", ".", "APPLICATION_JSON", ",", "MediaType", ".", "APPLICATION_XML", "}", ")", "public", "JobCounterInfo", "getJobCounters"], "source_code": "class WRAPPER {\n@GET\n    @Path(\"/mapreduce/jobs/{jobid}/counters\")\n    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n    public JobCounterInfo getJobCounters(@Context\n    HttpServletRequest hsr, @PathParam(\"jobid\")\n    String jid) {\n        init();\n        Job job = AMWebServices.getJobFromJobIdString(jid, ctx);\n        checkAccess(job, hsr);\n        return new JobCounterInfo(this.ctx, job);\n    }\n}\n", "sha256_hash": "01e404b18af94bc705a60d4badcd1e50591045b9c34aa6dcfc73d86ef6f1a3f5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5955da37a3cd512a08266164433b69ae0034274a2b5c46d09b755a9edcec6fb7.java|211|0", "index": 211, "orig_index": 211, "poison": 0}
{"language": "java", "identifier": "getReplication", "target_tokens": ["get", "replication"], "source_tokens": ["(", ")", "{", "return", "block_replication", ";", "}"], "elided_tokens": ["public", "final", "short", "getReplication"], "source_code": "class WRAPPER {\npublic final short getReplication() {\n        return block_replication;\n    }\n}\n", "sha256_hash": "62334a09e7d1b970e5a01312f377142b729a5a7a3564a677519a51f0b0df3c49", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "595b9ba8d4f09955ffdd291d345e867a7ddbf414c210839fe6ab0bc1e501cb0e.java|212|0", "index": 212, "orig_index": 212, "poison": 0}
{"language": "java", "identifier": "getOutputRecords", "target_tokens": ["get", "output", "records"], "source_tokens": ["(", ")", "{", "if", "(", "0", "==", "reduces", ")", "{", "return", "new", "long", "[", "]", "{", "outputRecords", "}", ";", "}", "final", "long", "[", "]", "ret", "=", "new", "long", "[", "reduces", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "reduces", ";", "++", "i", ")", "{", "ret", "[", "i", "]", "=", "Math", ".", "round", "(", "outputRecords", "*", "reduceRecords", "[", "i", "]", ")", ";", "}", "return", "ret", ";", "}"], "elided_tokens": ["public", "long", "[", "]", "getOutputRecords"], "source_code": "class WRAPPER {\npublic long[] getOutputRecords() {\n        if (0 == reduces) {\n            return new long[]{ outputRecords };\n        }\n        final long[] ret = new long[reduces];\n        for (int i = 0; i < reduces; ++i) {\n            ret[i] = Math.round(outputRecords * reduceRecords[i]);\n        }\n        return ret;\n    }\n}\n", "sha256_hash": "ad5e0d0816ac3aea0a29d8b8336460d0d47614ecca338f9455ae201e743722a9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "59602ea184b7f47dcda154ab6d4dc81aeaf639d25a8fcc85f1613272c9c84559.java|213|0", "index": 213, "orig_index": 213, "poison": 0}
{"language": "java", "identifier": "getTmax", "target_tokens": ["get", "tmax"], "source_tokens": ["(", ")", "{", "return", "tmax", ";", "}"], "elided_tokens": ["int", "getTmax"], "source_code": "class WRAPPER {\nint getTmax() {\n        return tmax;\n    }\n}\n", "sha256_hash": "f7ec20e6b10ef91807f2330c934cb3d9b1be6dc14dcbaae5ff9aea25328c83d3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5964037482d154442afca5022a0ebb7e5951ff6e9456853de7f89f476056018b.java|214|0", "index": 214, "orig_index": 214, "poison": 0}
{"language": "java", "identifier": "label", "target_tokens": ["label"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"label\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "OPTGROUP", "<", "T", ">", "$", "label"], "source_code": "class WRAPPER {\n@Override\n    public OPTGROUP<T> $label(String value) {\n        addAttr(\"label\", value);\n        return this;\n    }\n}\n", "sha256_hash": "d45e91709adb538f2b6fe41f31d388c9b994903723fda9a696fb253b4bb641df", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "597269b16cbfad0b1ff81a5f7b38ceda4a345b29460187fc39a3c972d9ec12d5.java|215|0", "index": 215, "orig_index": 215, "poison": 0}
{"language": "java", "identifier": "src", "target_tokens": ["src"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"src\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "INPUT", "<", "T", ">", "$", "src"], "source_code": "class WRAPPER {\n@Override\n    public INPUT<T> $src(String value) {\n        addAttr(\"src\", value);\n        return this;\n    }\n}\n", "sha256_hash": "64864205c52e8a54a52f521f26577cfa223c9458a5a3509fd8f1e1b3a0244d31", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "59746c8fc7d482c8bb0342912548358f86f2f31d80986af5d9325fb51cc2c3ee.java|216|0", "index": 216, "orig_index": 216, "poison": 0}
{"language": "java", "identifier": "open", "target_tokens": ["open"], "source_tokens": ["(", "Path", "f", ",", "int", "bufferSize", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "OPEN", ".", "toString", "(", ")", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "OPEN", ".", "getMethod", "(", ")", ",", "params", ",", "f", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "return", "new", "FSDataInputStream", "(", "new", "HttpFSDataInputStream", "(", "conn", ".", "getInputStream", "(", ")", ",", "bufferSize", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "FSDataInputStream", "open"], "source_code": "class WRAPPER {\n@Override\n    public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.OPEN.toString());\n        HttpURLConnection conn = getConnection(Operation.OPEN.getMethod(), params, f, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n        return new FSDataInputStream(new HttpFSDataInputStream(conn.getInputStream(), bufferSize));\n    }\n}\n", "sha256_hash": "0ac0b782da144c731298f75080bf3b9aecaf83d363f6d54abe56da3acff427cc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "599cc931ba27492f64a96ae35bc62b2d2846cebbabe507e9bb3d01546c08e663.java|217|0", "index": 217, "orig_index": 217, "poison": 0}
{"language": "java", "identifier": "setReplication", "target_tokens": ["set", "replication"], "source_tokens": ["(", "Path", "src", ",", "short", "replication", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "SETREPLICATION", ".", "toString", "(", ")", ")", ";", "params", ".", "put", "(", "REPLICATION_PARAM", ",", "Short", ".", "toString", "(", "replication", ")", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "SETREPLICATION", ".", "getMethod", "(", ")", ",", "params", ",", "src", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "JSONObject", "json", "=", "(", "(", "JSONObject", ")", "(", "HttpFSUtils", ".", "jsonParse", "(", "conn", ")", ")", ")", ";", "return", "(", "(", "Boolean", ")", "(", "json", ".", "get", "(", "SET_REPLICATION_JSON", ")", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "setReplication"], "source_code": "class WRAPPER {\n@Override\n    public boolean setReplication(Path src, short replication) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.SETREPLICATION.toString());\n        params.put(REPLICATION_PARAM, Short.toString(replication));\n        HttpURLConnection conn = getConnection(Operation.SETREPLICATION.getMethod(), params, src, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n        JSONObject json = ((JSONObject) (HttpFSUtils.jsonParse(conn)));\n        return ((Boolean) (json.get(SET_REPLICATION_JSON)));\n    }\n}\n", "sha256_hash": "6a597b2dc3c50fd8bc62cc89a9a22a5e1b6204d9ed3323b1f1c1decc6b55fab4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "59ce267280235622be2efab8e49fe6fe6705324bd92e280ef73abcd565470c21.java|218|0", "index": 218, "orig_index": 218, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "TFOOT", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public TFOOT<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "c73fb309d946a72db4a040e2cf1e80132c212eab722b21ec21f529b9728495bc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5a067f22ade018f77237e89449a976c255842c7cca112ce5e54ad935353758e1.java|219|0", "index": 219, "orig_index": 219, "poison": 0}
{"language": "java", "identifier": "echo", "target_tokens": ["echo"], "source_tokens": ["(", "int", "indent", ",", "Object", "...", "args", ")", "{", "String", "prev", "=", "null", ";", "for", "(", "Object", "o", ":", "args", ")", "{", "String", "s", "=", "String", ".", "valueOf", "(", "o", ")", ";", "if", "(", "(", "(", "!", "s", ".", "isEmpty", "(", ")", ")", "&&", "(", "!", "s", ".", "equals", "(", "\"\\n\"", ")", ")", ")", "&&", "(", "(", "prev", "==", "null", ")", "||", "prev", ".", "endsWith", "(", "\"\\n\"", ")", ")", ")", "{", "indent", "(", "indent", ")", ";", "}", "prev", "=", "s", ";", "out", ".", "print", "(", "s", ")", ";", "bytes", "+=", "s", ".", "length", "(", ")", ";", "}", "}"], "elided_tokens": ["void", "echo"], "source_code": "class WRAPPER {\nvoid echo(int indent, Object... args) {\n        String prev = null;\n        for (Object o : args) {\n            String s = String.valueOf(o);\n            if (((!s.isEmpty()) && (!s.equals(\"\\n\"))) && ((prev == null) || prev.endsWith(\"\\n\"))) {\n                indent(indent);\n            }\n            prev = s;\n            out.print(s);\n            bytes += s.length();\n        }\n    }\n}\n", "sha256_hash": "d4292e785da8889113f07cbc292268806e1ea2cef66ccd98248472afaeafdf90", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5a0ddb65eddb47f1f20c2f88307dc78985cb58cbcf83a1ddcc46475ab7b719f0.java|220|0", "index": 220, "orig_index": 220, "poison": 0}
{"language": "java", "identifier": "generateRecord", "target_tokens": ["generate", "record"], "source_tokens": ["(", "byte", "[", "]", "recBuf", ",", "Unsigned16", "rand", ",", "Unsigned16", "recordNumber", ")", "{", "/* generate the 10-byte key using the high 10 bytes of the 128-bit\n        random number\n         */", "for", "(", "int", "i", "=", "0", ";", "i", "<", "10", ";", "++", "i", ")", "{", "recBuf", "[", "i", "]", "=", "rand", ".", "getByte", "(", "i", ")", ";", "}", "/* add 2 bytes of \"break\" */", "recBuf", "[", "10", "]", "=", "0x0", ";", "recBuf", "[", "11", "]", "=", "0x11", ";", "/* convert the 128-bit record number to 32 bits of ascii hexadecimal\n        as the next 32 bytes of the record.\n         */", "for", "(", "int", "i", "=", "0", ";", "i", "<", "32", ";", "i", "++", ")", "{", "recBuf", "[", "12", "+", "i", "]", "=", "(", "(", "byte", ")", "(", "recordNumber", ".", "getHexDigit", "(", "i", ")", ")", ")", ";", "}", "/* add 4 bytes of \"break\" data */", "recBuf", "[", "44", "]", "=", "(", "(", "byte", ")", "(", "0x88", ")", ")", ";", "recBuf", "[", "45", "]", "=", "(", "(", "byte", ")", "(", "0x99", ")", ")", ";", "recBuf", "[", "46", "]", "=", "(", "(", "byte", ")", "(", "0xaa", ")", ")", ";", "recBuf", "[", "47", "]", "=", "(", "(", "byte", ")", "(", "0xbb", ")", ")", ";", "/* add 48 bytes of filler based on low 48 bits of random number */", "for", "(", "int", "i", "=", "0", ";", "i", "<", "12", ";", "++", "i", ")", "{", "recBuf", "[", "48", "+", "(", "i", "*", "4", ")", "]", "=", "recBuf", "[", "49", "+", "(", "i", "*", "4", ")", "]", "=", "recBuf", "[", "50", "+", "(", "i", "*", "4", ")", "]", "=", "recBuf", "[", "51", "+", "(", "i", "*", "4", ")", "]", "=", "(", "(", "byte", ")", "(", "rand", ".", "getHexDigit", "(", "20", "+", "i", ")", ")", ")", ";", "}", "/* add 4 bytes of \"break\" data */", "recBuf", "[", "96", "]", "=", "(", "(", "byte", ")", "(", "0xcc", ")", ")", ";", "recBuf", "[", "97", "]", "=", "(", "(", "byte", ")", "(", "0xdd", ")", ")", ";", "recBuf", "[", "98", "]", "=", "(", "(", "byte", ")", "(", "0xee", ")", ")", ";", "recBuf", "[", "99", "]", "=", "(", "(", "byte", ")", "(", "0xff", ")", ")", ";", "}"], "elided_tokens": ["static", "void", "generateRecord"], "source_code": "class WRAPPER {\nstatic void generateRecord(byte[] recBuf, Unsigned16 rand, Unsigned16 recordNumber) {\n        /* generate the 10-byte key using the high 10 bytes of the 128-bit\n        random number\n         */\n        for (int i = 0; i < 10; ++i) {\n            recBuf[i] = rand.getByte(i);\n        }\n        /* add 2 bytes of \"break\" */\n        recBuf[10] = 0x0;\n        recBuf[11] = 0x11;\n        /* convert the 128-bit record number to 32 bits of ascii hexadecimal\n        as the next 32 bytes of the record.\n         */\n        for (int i = 0; i < 32; i++) {\n            recBuf[12 + i] = ((byte) (recordNumber.getHexDigit(i)));\n        }\n        /* add 4 bytes of \"break\" data */\n        recBuf[44] = ((byte) (0x88));\n        recBuf[45] = ((byte) (0x99));\n        recBuf[46] = ((byte) (0xaa));\n        recBuf[47] = ((byte) (0xbb));\n        /* add 48 bytes of filler based on low 48 bits of random number */\n        for (int i = 0; i < 12; ++i) {\n            recBuf[48 + (i * 4)] = recBuf[49 + (i * 4)] = recBuf[50 + (i * 4)] = recBuf[51 + (i * 4)] = ((byte) (rand.getHexDigit(20 + i)));\n        }\n        /* add 4 bytes of \"break\" data */\n        recBuf[96] = ((byte) (0xcc));\n        recBuf[97] = ((byte) (0xdd));\n        recBuf[98] = ((byte) (0xee));\n        recBuf[99] = ((byte) (0xff));\n    }\n}\n", "sha256_hash": "a15b940af949ce2a7a1a34d4e44a28875e1e0a70a4e5a32279343522abad1b5b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5a2035e52cfd3d43b2eb8d0ae77cd9f64a8f4a60673d80694479e2c40379faa9.java|221|0", "index": 221, "orig_index": 221, "poison": 0}
{"language": "java", "identifier": "setContainerList", "target_tokens": ["set", "container", "list"], "source_tokens": ["(", "List", "<", "ContainerReport", ">", "containers", ")", "{", "maybeInitBuilder", "(", ")", ";", "if", "(", "containers", "==", "null", ")", "{", "builder", ".", "clearContainers", "(", ")", ";", "}", "this", ".", "containerList", "=", "containers", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setContainerList"], "source_code": "class WRAPPER {\n@Override\n    public void setContainerList(List<ContainerReport> containers) {\n        maybeInitBuilder();\n        if (containers == null) {\n            builder.clearContainers();\n        }\n        this.containerList = containers;\n    }\n}\n", "sha256_hash": "36314226d93147e29ac9104eb79e79d6fcafa7a5f01fe003399d503b63e336ab", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5a2817ae27fc4acedcf6b0c31fdc4a460be95240e5f86ffb4b0445db69d00ed0.java|222|0", "index": 222, "orig_index": 222, "poison": 0}
{"language": "java", "identifier": "cancelDelegationToken", "target_tokens": ["cancel", "delegation", "token"], "source_tokens": ["(", "Token", "<", "?", "extends", "AbstractDelegationTokenIdentifier", ">", "token", ")", "throws", "IOException", ",", "InvalidToken", "{", "dfs", ".", "cancelDelegationToken", "(", "(", "(", "Token", "<", "DelegationTokenIdentifier", ">", ")", "(", "token", ")", ")", ")", ";", "}"], "elided_tokens": ["@", "SuppressWarnings", "(", "\"unchecked\"", ")", "public", "void", "cancelDelegationToken"], "source_code": "class WRAPPER {\n@SuppressWarnings(\"unchecked\")\n    public void cancelDelegationToken(Token<? extends AbstractDelegationTokenIdentifier> token) throws IOException, InvalidToken {\n        dfs.cancelDelegationToken(((Token<DelegationTokenIdentifier>) (token)));\n    }\n}\n", "sha256_hash": "86e3972b7ab0d5d5a15d4da6e7e74bdaa4fabb3d7879f89abfd0e25005964d5e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5a2cbb0c36cf2bdb3d3e2a01dfdeca711068333d1de6e9ab46828352e3aff421.java|223|0", "index": 223, "orig_index": 223, "poison": 0}
{"language": "java", "identifier": "getAllFileInfo", "target_tokens": ["get", "all", "file", "info"], "source_tokens": ["(", ")", "throws", "IOException", "{", "scanIntermediateDirectory", "(", ")", ";", "return", "jobListCache", ".", "values", "(", ")", ";", "}"], "elided_tokens": ["public", "Collection", "<", "HistoryFileInfo", ">", "getAllFileInfo"], "source_code": "class WRAPPER {\npublic Collection<HistoryFileInfo> getAllFileInfo() throws IOException {\n        scanIntermediateDirectory();\n        return jobListCache.values();\n    }\n}\n", "sha256_hash": "84652bb362a07d17d19f6e9f3b8f2bfeeece0a2918059fec3272d8e709409ace", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5a88deeb154c297fe054c1cd882668d63a0ffa68335485c4b97d70d6f9ec11a0.java|224|0", "index": 224, "orig_index": 224, "poison": 0}
{"language": "java", "identifier": "main", "target_tokens": ["main"], "source_tokens": ["(", "String", "[", "]", "args", ")", "{", "try", "{", "System", ".", "out", ".", "println", "(", "\"Creating file\"", "+", "args", "[", "0", "]", ")", ";", "FileOutputStream", "fstream", "=", "new", "FileOutputStream", "(", "args", "[", "0", "]", ")", ";", "fstream", ".", "write", "(", "\"Hello Hadoopers\"", ".", "getBytes", "(", ")", ")", ";", "fstream", ".", "close", "(", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "// do nothing", "}", "}"], "elided_tokens": ["public", "static", "void", "main"], "source_code": "class WRAPPER {\npublic static void main(String[] args) {\n        try {\n            System.out.println(\"Creating file\" + args[0]);\n            FileOutputStream fstream = new FileOutputStream(args[0]);\n            fstream.write(\"Hello Hadoopers\".getBytes());\n            fstream.close();\n        } catch (IOException e) {\n            // do nothing\n        }\n    }\n}\n", "sha256_hash": "8d08b9f32b29d67584a948fab12726522e4584131d69e386ff1eb2ba1347a4bd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ab567075e8b3035e4d4da829e61b174cc6534e94b44e6f247e9d671d11a7147.java|225|0", "index": 225, "orig_index": 225, "poison": 0}
{"language": "java", "identifier": "emitMetric", "target_tokens": ["emit", "metric"], "source_tokens": ["(", "String", "name", ",", "String", "type", ",", "String", "value", ")", "throws", "IOException", "{", "if", "(", "name", "==", "null", ")", "{", "LOG", ".", "warn", "(", "\"Metric was emitted with no name.\"", ")", ";", "return", ";", "}", "else", "if", "(", "value", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\" was emitted with a null value.\"", ")", ";", "return", ";", "}", "else", "if", "(", "type", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\" has no type.\"", ")", ";", "return", ";", "}", "LOG", ".", "debug", "(", "(", "(", "(", "(", "(", "(", "\"Emitting metric \"", "+", "name", ")", "+", "\", type \"", ")", "+", "type", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\" from hostname\"", ")", "+", "hostName", ")", ";", "String", "units", "=", "getUnits", "(", "name", ")", ";", "if", "(", "units", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\" had 'null' units\"", ")", ";", "units", "=", "\"\"", ";", "}", "int", "slope", "=", "getSlope", "(", "name", ")", ";", "int", "tmax", "=", "getTmax", "(", "name", ")", ";", "int", "dmax", "=", "getDmax", "(", "name", ")", ";", "offset", "=", "0", ";", "String", "groupName", "=", "name", ".", "substring", "(", "0", ",", "name", ".", "lastIndexOf", "(", "\".\"", ")", ")", ";", "// The following XDR recipe was done through a careful reading of", "// gm_protocol.x in Ganglia 3.1 and carefully examining the output of", "// the gmetric utility with strace.", "// First we send out a metadata message", "xdr_int", "(", "128", ")", ";", "// metric_id = metadata_msg", "xdr_string", "(", "hostName", ")", ";", "// hostname", "xdr_string", "(", "name", ")", ";", "// metric name", "xdr_int", "(", "0", ")", ";", "// spoof = False", "xdr_string", "(", "type", ")", ";", "// metric type", "xdr_string", "(", "name", ")", ";", "// metric name", "xdr_string", "(", "units", ")", ";", "// units", "xdr_int", "(", "slope", ")", ";", "// slope", "xdr_int", "(", "tmax", ")", ";", "// tmax, the maximum time between metrics", "xdr_int", "(", "dmax", ")", ";", "// dmax, the maximum data value", "xdr_int", "(", "1", ")", ";", "/* Num of the entries in extra_value field for \n        Ganglia 3.1.x\n         */", "xdr_string", "(", "\"GROUP\"", ")", ";", "/* Group attribute */", "xdr_string", "(", "groupName", ")", ";", "/* Group value */", "for", "(", "SocketAddress", "socketAddress", ":", "metricsServers", ")", "{", "DatagramPacket", "packet", "=", "new", "DatagramPacket", "(", "buffer", ",", "offset", ",", "socketAddress", ")", ";", "datagramSocket", ".", "send", "(", "packet", ")", ";", "}", "// Now we send out a message with the actual value.", "// Technically, we only need to send out the metadata message once for", "// each metric, but I don't want to have to record which metrics we did and", "// did not send.", "offset", "=", "0", ";", "xdr_int", "(", "133", ")", ";", "// we are sending a string value", "xdr_string", "(", "hostName", ")", ";", "// hostName", "xdr_string", "(", "name", ")", ";", "// metric name", "xdr_int", "(", "0", ")", ";", "// spoof = False", "xdr_string", "(", "\"%s\"", ")", ";", "// format field", "xdr_string", "(", "value", ")", ";", "// metric value", "for", "(", "SocketAddress", "socketAddress", ":", "metricsServers", ")", "{", "DatagramPacket", "packet", "=", "new", "DatagramPacket", "(", "buffer", ",", "offset", ",", "socketAddress", ")", ";", "datagramSocket", ".", "send", "(", "packet", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "protected", "void", "emitMetric"], "source_code": "class WRAPPER {\n@Override\n    protected void emitMetric(String name, String type, String value) throws IOException {\n        if (name == null) {\n            LOG.warn(\"Metric was emitted with no name.\");\n            return;\n        } else if (value == null) {\n            LOG.warn((\"Metric name \" + name) + \" was emitted with a null value.\");\n            return;\n        } else if (type == null) {\n            LOG.warn((((\"Metric name \" + name) + \", value \") + value) + \" has no type.\");\n            return;\n        }\n        LOG.debug(((((((\"Emitting metric \" + name) + \", type \") + type) + \", value \") + value) + \" from hostname\") + hostName);\n        String units = getUnits(name);\n        if (units == null) {\n            LOG.warn((((\"Metric name \" + name) + \", value \") + value) + \" had 'null' units\");\n            units = \"\";\n        }\n        int slope = getSlope(name);\n        int tmax = getTmax(name);\n        int dmax = getDmax(name);\n        offset = 0;\n        String groupName = name.substring(0, name.lastIndexOf(\".\"));\n        // The following XDR recipe was done through a careful reading of\n        // gm_protocol.x in Ganglia 3.1 and carefully examining the output of\n        // the gmetric utility with strace.\n        // First we send out a metadata message\n        xdr_int(128);\n        // metric_id = metadata_msg\n        xdr_string(hostName);// hostname\n\n        xdr_string(name);// metric name\n\n        xdr_int(0);\n        // spoof = False\n        xdr_string(type);// metric type\n\n        xdr_string(name);// metric name\n\n        xdr_string(units);// units\n\n        xdr_int(slope);\n        // slope\n        xdr_int(tmax);\n        // tmax, the maximum time between metrics\n        xdr_int(dmax);\n        // dmax, the maximum data value\n        xdr_int(1);\n        /* Num of the entries in extra_value field for \n        Ganglia 3.1.x\n         */\n        xdr_string(\"GROUP\");/* Group attribute */\n\n        xdr_string(groupName);/* Group value */\n\n        for (SocketAddress socketAddress : metricsServers) {\n            DatagramPacket packet = new DatagramPacket(buffer, offset, socketAddress);\n            datagramSocket.send(packet);\n        }\n        // Now we send out a message with the actual value.\n        // Technically, we only need to send out the metadata message once for\n        // each metric, but I don't want to have to record which metrics we did and\n        // did not send.\n        offset = 0;\n        xdr_int(133);\n        // we are sending a string value\n        xdr_string(hostName);// hostName\n\n        xdr_string(name);// metric name\n\n        xdr_int(0);\n        // spoof = False\n        xdr_string(\"%s\");// format field\n\n        xdr_string(value);// metric value\n\n        for (SocketAddress socketAddress : metricsServers) {\n            DatagramPacket packet = new DatagramPacket(buffer, offset, socketAddress);\n            datagramSocket.send(packet);\n        }\n    }\n}\n", "sha256_hash": "b13cd61d8f985e898b7d0c425ee967a0523518c3bdb9d73d8668d636110e57b1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5acb6c65c6f3272d239a2bd13d51b36da364d4c8f926ef5c597e068127944c52.java|226|0", "index": 226, "orig_index": 226, "poison": 0}
{"language": "java", "identifier": "initApplicationTypes", "target_tokens": ["init", "application", "types"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "applicationTypes", "!=", "null", ")", "{", "return", ";", "}", "GetApplicationsRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "String", ">", "appTypeList", "=", "p", ".", "getApplicationTypesList", "(", ")", ";", "this", ".", "applicationTypes", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "this", ".", "applicationTypes", ".", "addAll", "(", "appTypeList", ")", ";", "}"], "elided_tokens": ["private", "void", "initApplicationTypes"], "source_code": "class WRAPPER {\nprivate void initApplicationTypes() {\n        if (this.applicationTypes != null) {\n            return;\n        }\n        GetApplicationsRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<String> appTypeList = p.getApplicationTypesList();\n        this.applicationTypes = new HashSet<String>();\n        this.applicationTypes.addAll(appTypeList);\n    }\n}\n", "sha256_hash": "37783b010399b4254186d2c8863ebdf9a53f2e580b9c9e823e52faba9e3534a7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ae00ad5be911846bfd8fa1a9025fda70db77a51bc650496d2007f2802e580c1.java|227|0", "index": 227, "orig_index": 227, "poison": 0}
{"language": "java", "identifier": "sup", "target_tokens": ["sup"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "sup", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "sup"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> sup(String selector, String cdata) {\n        return setSelector(sup(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "ddf8fe7ace2c5a06263ca63fa1ec8ac7ad4964b3a615542a14bd6dfe4d777143", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5aff8076fbee5005e783719a8223ce4c5bf83683b2e00d7246d176c1867ee5bf.java|228|0", "index": 228, "orig_index": 228, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TBODY", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public TBODY<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "ab8da747a1999699d0fec814754b7aebf5d8197f7b082d389fbbd5d1cb399cce", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5b1e66bc74a11c00a83fd481119af3cb95b84fbc07d8fbc6122530446fed4e82.java|229|0", "index": 229, "orig_index": 229, "poison": 0}
{"language": "java", "identifier": "getProxyuserConfiguration", "target_tokens": ["get", "proxyuser", "configuration"], "source_tokens": ["(", "FilterConfig", "filterConfig", ")", "{", "Map", "<", "String", ",", "String", ">", "proxyuserConf", "=", "HttpFSServerWebApp", ".", "get", "(", ")", ".", "getConfig", "(", ")", ".", "getValByRegex", "(", "\"httpfs\\\\.proxyuser\\\\.\"", ")", ";", "Configuration", "conf", "=", "new", "Configuration", "(", "false", ")", ";", "for", "(", "Map", ".", "Entry", "<", "String", ",", "String", ">", "entry", ":", "proxyuserConf", ".", "entrySet", "(", ")", ")", "{", "conf", ".", "set", "(", "entry", ".", "getKey", "(", ")", ".", "substring", "(", "\"httpfs.\"", ".", "length", "(", ")", ")", ",", "entry", ".", "getValue", "(", ")", ")", ";", "}", "return", "conf", ";", "}"], "elided_tokens": ["protected", "Configuration", "getProxyuserConfiguration"], "source_code": "class WRAPPER {\nprotected Configuration getProxyuserConfiguration(FilterConfig filterConfig) {\n        Map<String, String> proxyuserConf = HttpFSServerWebApp.get().getConfig().getValByRegex(\"httpfs\\\\.proxyuser\\\\.\");\n        Configuration conf = new Configuration(false);\n        for (Map.Entry<String, String> entry : proxyuserConf.entrySet()) {\n            conf.set(entry.getKey().substring(\"httpfs.\".length()), entry.getValue());\n        }\n        return conf;\n    }\n}\n", "sha256_hash": "84ecb00eac9aa02087458b73793938823d9105ddd20a6b248f563c38bd14cbd9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5bc14c208bf5fc3f27bc5eaa20ee34f7dcdb1d187fb0db74b79f14d44c7e0cb9.java|230|0", "index": 230, "orig_index": 230, "poison": 0}
{"language": "java", "identifier": "getHomeDirectory", "target_tokens": ["get", "home", "directory"], "source_tokens": ["(", ")", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "GETHOMEDIRECTORY", ".", "toString", "(", ")", ")", ";", "try", "{", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "GETHOMEDIRECTORY", ".", "getMethod", "(", ")", ",", "params", ",", "new", "Path", "(", "getUri", "(", ")", ".", "toString", "(", ")", ",", "\"/\"", ")", ",", "false", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "JSONObject", "json", "=", "(", "(", "JSONObject", ")", "(", "HttpFSUtils", ".", "jsonParse", "(", "conn", ")", ")", ")", ";", "return", "new", "Path", "(", "(", "(", "String", ")", "(", "json", ".", "get", "(", "HOME_DIR_JSON", ")", ")", ")", ")", ";", "}", "catch", "(", "IOException", "ex", ")", "{", "throw", "new", "RuntimeException", "(", "ex", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "Path", "getHomeDirectory"], "source_code": "class WRAPPER {\n@Override\n    public Path getHomeDirectory() {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n        try {\n            HttpURLConnection conn = getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params, new Path(getUri().toString(), \"/\"), false);\n            HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n            JSONObject json = ((JSONObject) (HttpFSUtils.jsonParse(conn)));\n            return new Path(((String) (json.get(HOME_DIR_JSON))));\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n    }\n}\n", "sha256_hash": "a541e764fb7166471b1c38a961fd9ba14055d0f297af9b142b01f7aa90afa4b8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5c2622ebb82051eac7ba16fb664af7b6380edfd2b572d271d253ad6c78a3b05f.java|231|0", "index": 231, "orig_index": 231, "poison": 0}
{"language": "java", "identifier": "del", "target_tokens": ["del"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "del", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "del"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> del(String cdata) {\n        return del()._(cdata)._();\n    }\n}\n", "sha256_hash": "3f46e11f230c1c63c1e416124416b97bd7d1ebc5bb12f42603ee2e053226afa1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5c29e1e649f5ee6b2fe15a8285c819e5203a6e3ffdad27e89fcf6d6f47a84942.java|232|0", "index": 232, "orig_index": 232, "poison": 0}
{"language": "java", "identifier": "releaseAndRethrow", "target_tokens": ["release", "and", "rethrow"], "source_tokens": ["(", "String", "operation", ",", "IOException", "ex", ")", "{", "try", "{", "release", "(", "operation", ",", "ex", ")", ";", "}", "catch", "(", "IOException", "ioe", ")", "{", "LOG", ".", "debug", "(", "(", "(", "\"Exception during release: \"", "+", "operation", ")", "+", "\" - \"", ")", "+", "ioe", ",", "ioe", ")", ";", "// make this the exception if there was none before", "if", "(", "ex", "==", "null", ")", "{", "ex", "=", "ioe", ";", "}", "}", "return", "ex", ";", "}"], "elided_tokens": ["private", "IOException", "releaseAndRethrow"], "source_code": "class WRAPPER {\nprivate IOException releaseAndRethrow(String operation, IOException ex) {\n        try {\n            release(operation, ex);\n        } catch (IOException ioe) {\n            LOG.debug(((\"Exception during release: \" + operation) + \" - \") + ioe, ioe);\n            // make this the exception if there was none before\n            if (ex == null) {\n                ex = ioe;\n            }\n        }\n        return ex;\n    }\n}\n", "sha256_hash": "5ff12a92c85f0d311a764da7faf316ecd4907a432e938f647e00108d57b02b49", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5c3f66c8a177b29b63946ee6942781beb06a6827fb1c5ea116783521bdf032bb.java|233|0", "index": 233, "orig_index": 233, "poison": 0}
{"language": "java", "identifier": "start", "target_tokens": ["start"], "source_tokens": ["(", "Configuration", "conf", ",", "String", "traceIn", ",", "Path", "ioPath", ",", "long", "genbytes", ",", "UserResolver", "userResolver", ")", "throws", "IOException", ",", "InterruptedException", "{", "DataStatistics", "stats", "=", "null", ";", "InputStream", "trace", "=", "null", ";", "int", "exitCode", "=", "0", ";", "try", "{", "Path", "scratchDir", "=", "new", "Path", "(", "ioPath", ",", "conf", ".", "get", "(", "GRIDMIX_OUT_DIR", ",", "\"gridmix\"", ")", ")", ";", "// add shutdown hook for SIGINT, etc.", "Runtime", ".", "getRuntime", "(", ")", ".", "addShutdownHook", "(", "sdh", ")", ";", "CountDownLatch", "startFlag", "=", "new", "CountDownLatch", "(", "1", ")", ";", "try", "{", "// Create, start job submission threads", "startThreads", "(", "conf", ",", "traceIn", ",", "ioPath", ",", "scratchDir", ",", "startFlag", ",", "userResolver", ")", ";", "Path", "inputDir", "=", "getGridmixInputDataPath", "(", "ioPath", ")", ";", "// Write input data if specified", "exitCode", "=", "writeInputData", "(", "genbytes", ",", "inputDir", ")", ";", "if", "(", "exitCode", "!=", "0", ")", "{", "return", "exitCode", ";", "}", "// publish the data statistics", "stats", "=", "GenerateData", ".", "publishDataStatistics", "(", "inputDir", ",", "genbytes", ",", "conf", ")", ";", "// scan input dir contents", "submitter", ".", "refreshFilePool", "(", ")", ";", "boolean", "shouldGenerate", "=", "genbytes", ">", "0", ";", "// set up the needed things for emulation of various loads", "exitCode", "=", "setupEmulation", "(", "conf", ",", "traceIn", ",", "scratchDir", ",", "ioPath", ",", "shouldGenerate", ")", ";", "if", "(", "exitCode", "!=", "0", ")", "{", "return", "exitCode", ";", "}", "// start the summarizer", "summarizer", ".", "start", "(", "conf", ")", ";", "factory", ".", "start", "(", ")", ";", "statistics", ".", "start", "(", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "Throwable", "e", ")", "{", "LOG", ".", "error", "(", "(", "\"Startup failed. \"", "+", "e", ".", "toString", "(", ")", ")", "+", "\"\\n\"", ")", ";", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "e", ".", "printStackTrace", "(", ")", ";", "}", "if", "(", "factory", "!=", "null", ")", "factory", ".", "abort", "(", ")", ";", "// abort pipeline", "exitCode", "=", "STARTUP_FAILED_ERROR", ";", "}", "finally", "{", "// signal for factory to start; sets start time", "startFlag", ".", "countDown", "(", ")", ";", "}", "if", "(", "factory", "!=", "null", ")", "{", "// wait for input exhaustion", "factory", ".", "join", "(", "Long", ".", "MAX_VALUE", ")", ";", "final", "Throwable", "badTraceException", "=", "factory", ".", "error", "(", ")", ";", "if", "(", "null", "!=", "badTraceException", ")", "{", "LOG", ".", "error", "(", "\"Error in trace\"", ",", "badTraceException", ")", ";", "throw", "new", "IOException", "(", "\"Error in trace\"", ",", "badTraceException", ")", ";", "}", "// wait for pending tasks to be submitted", "submitter", ".", "shutdown", "(", ")", ";", "submitter", ".", "join", "(", "Long", ".", "MAX_VALUE", ")", ";", "// wait for running tasks to complete", "monitor", ".", "shutdown", "(", ")", ";", "monitor", ".", "join", "(", "Long", ".", "MAX_VALUE", ")", ";", "statistics", ".", "shutdown", "(", ")", ";", "statistics", ".", "join", "(", "Long", ".", "MAX_VALUE", ")", ";", "}", "}", "finally", "{", "if", "(", "factory", "!=", "null", ")", "{", "summarizer", ".", "finalize", "(", "factory", ",", "traceIn", ",", "genbytes", ",", "userResolver", ",", "stats", ",", "conf", ")", ";", "}", "IOUtils", ".", "cleanup", "(", "LOG", ",", "trace", ")", ";", "}", "return", "exitCode", ";", "}"], "elided_tokens": ["int", "start"], "source_code": "class WRAPPER {\nint start(Configuration conf, String traceIn, Path ioPath, long genbytes, UserResolver userResolver) throws IOException, InterruptedException {\n        DataStatistics stats = null;\n        InputStream trace = null;\n        int exitCode = 0;\n        try {\n            Path scratchDir = new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n            // add shutdown hook for SIGINT, etc.\n            Runtime.getRuntime().addShutdownHook(sdh);\n            CountDownLatch startFlag = new CountDownLatch(1);\n            try {\n                // Create, start job submission threads\n                startThreads(conf, traceIn, ioPath, scratchDir, startFlag, userResolver);\n                Path inputDir = getGridmixInputDataPath(ioPath);\n                // Write input data if specified\n                exitCode = writeInputData(genbytes, inputDir);\n                if (exitCode != 0) {\n                    return exitCode;\n                }\n                // publish the data statistics\n                stats = GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n                // scan input dir contents\n                submitter.refreshFilePool();\n                boolean shouldGenerate = genbytes > 0;\n                // set up the needed things for emulation of various loads\n                exitCode = setupEmulation(conf, traceIn, scratchDir, ioPath, shouldGenerate);\n                if (exitCode != 0) {\n                    return exitCode;\n                }\n                // start the summarizer\n                summarizer.start(conf);\n                factory.start();\n                statistics.start();\n            } catch (java.lang.Throwable e) {\n                LOG.error((\"Startup failed. \" + e.toString()) + \"\\n\");\n                if (LOG.isDebugEnabled()) {\n                    e.printStackTrace();\n                }\n                if (factory != null)\n                    factory.abort();\n                // abort pipeline\n\n                exitCode = STARTUP_FAILED_ERROR;\n            } finally {\n                // signal for factory to start; sets start time\n                startFlag.countDown();\n            }\n            if (factory != null) {\n                // wait for input exhaustion\n                factory.join(Long.MAX_VALUE);\n                final Throwable badTraceException = factory.error();\n                if (null != badTraceException) {\n                    LOG.error(\"Error in trace\", badTraceException);\n                    throw new IOException(\"Error in trace\", badTraceException);\n                }\n                // wait for pending tasks to be submitted\n                submitter.shutdown();\n                submitter.join(Long.MAX_VALUE);\n                // wait for running tasks to complete\n                monitor.shutdown();\n                monitor.join(Long.MAX_VALUE);\n                statistics.shutdown();\n                statistics.join(Long.MAX_VALUE);\n            }\n        } finally {\n            if (factory != null) {\n                summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, conf);\n            }\n            IOUtils.cleanup(LOG, trace);\n        }\n        return exitCode;\n    }\n}\n", "sha256_hash": "1300bd911d8f37dd9e3159b6432f84ce01a3bb16992078dae308af1d2e30ac1d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5c6e33b0968fdeda42a986b78c1f279e403774e8648d36bf17bda32df0bea788.java|234|0", "index": 234, "orig_index": 234, "poison": 0}
{"language": "java", "identifier": "fixedBytes", "target_tokens": ["fixed", "bytes"], "source_tokens": ["(", ")", "{", "return", "(", "super", ".", "fixedBytes", "(", ")", "+", "(", "REDUCE_SPEC", "==", "getType", "(", ")", "?", "spec", ".", "getSize", "(", ")", ":", "0", ")", ")", "+", "META_BYTES", ";", "}"], "elided_tokens": ["int", "fixedBytes"], "source_code": "class WRAPPER {\nint fixedBytes() {\n        return (super.fixedBytes() + (REDUCE_SPEC == getType() ? spec.getSize() : 0)) + META_BYTES;\n    }\n}\n", "sha256_hash": "d7a33be1bdf942edc1ecfa300f165d1f56e22437d5585a382b7635a853ddc318", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5c787cdd45ce6650b2a316f8df24eee7089473d9e1962eb9f185cf1eddaafa60.java|235|0", "index": 235, "orig_index": 235, "poison": 0}
{"language": "java", "identifier": "setTaskReport", "target_tokens": ["set", "task", "report"], "source_tokens": ["(", "TaskReport", "taskReport", ")", "{", "maybeInitBuilder", "(", ")", ";", "if", "(", "taskReport", "==", "null", ")", "builder", ".", "clearTaskReport", "(", ")", ";", "this", ".", "taskReport", "=", "taskReport", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setTaskReport"], "source_code": "class WRAPPER {\n@Override\n    public void setTaskReport(TaskReport taskReport) {\n        maybeInitBuilder();\n        if (taskReport == null)\n            builder.clearTaskReport();\n\n        this.taskReport = taskReport;\n    }\n}\n", "sha256_hash": "b817026a4609d228749476354b0e5fc14604c8d94df64e22a4de6a873e32237a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5c7d4ef5719c212c88b32b5864acff73c3bd837106675bfb159687025e5c661a.java|236|0", "index": 236, "orig_index": 236, "poison": 0}
{"language": "java", "identifier": "button", "target_tokens": ["button"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "button", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "button"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> button(String selector, String cdata) {\n        return setSelector(button(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "2e67b2213906800d7e125620bbdb35a1034cec9c763c636ac3e8b796aff5afbb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ca3609ed792d28ed552be5ec735699806fce3aed82f86d10879917092a4cad8.java|237|0", "index": 237, "orig_index": 237, "poison": 0}
{"language": "java", "identifier": "closeStorage", "target_tokens": ["close", "storage"], "source_tokens": ["(", ")", "throws", "IOException", "{", "state", "=", "null", ";", "}"], "elided_tokens": ["@", "Override", "protected", "void", "closeStorage"], "source_code": "class WRAPPER {\n@Override\n    protected void closeStorage() throws IOException {\n        state = null;\n    }\n}\n", "sha256_hash": "c3d07c34ea216ece47dcf002dce48e5d1c25af46ac3aa5635cfe8c6ed42f54c3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5cddfb90446e4397581df76c570f8f34003cce1e8091f83a46c89e0a75c77c09.java|238|0", "index": 238, "orig_index": 238, "poison": 0}
{"language": "java", "identifier": "getUnderlyingCounter", "target_tokens": ["get", "underlying", "counter"], "source_tokens": ["(", ")", "{", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "Counter", "getUnderlyingCounter"], "source_code": "class WRAPPER {\n@Override\n    public Counter getUnderlyingCounter() {\n        return this;\n    }\n}\n", "sha256_hash": "882931755b59963465aacb57d7fabe5aef4607ecce1edcf6abdbbbec816c2a41", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ce081c2dea31e271dcea04677e9bb5371d0cf3f5552e64647764ab0d351fd11.java|239|0", "index": 239, "orig_index": 239, "poison": 0}
{"language": "java", "identifier": "attempts", "target_tokens": ["attempts"], "source_tokens": ["(", ")", "{", "super", ".", "attempts", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "attempts"], "source_code": "class WRAPPER {\n@Override\n    public void attempts() {\n        super.attempts();\n    }\n}\n", "sha256_hash": "a23eb4ac75ac9d68015ab6fd4e8fe09b38b35f656613c11beb4fad96d1529742", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5cfe4435d1ecaaaff3649d1eec40b6ea2e357b4111a1fcd4831322492fe7ff46.java|240|0", "index": 240, "orig_index": 240, "poison": 0}
{"language": "java", "identifier": "usemap", "target_tokens": ["usemap"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"usemap\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "OBJECT", "<", "T", ">", "$", "usemap"], "source_code": "class WRAPPER {\n@Override\n    public OBJECT<T> $usemap(String value) {\n        addAttr(\"usemap\", value);\n        return this;\n    }\n}\n", "sha256_hash": "00dbf76b57a9a242909a24b0bccb60bc02ec1b0577f1a1065fd32c616bf9a712", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d01ecdcf85d73af30c2069deaaa092f30bea0319800cb10bb5ada2b526b2e14.java|241|0", "index": 241, "orig_index": 241, "poison": 0}
{"language": "java", "identifier": "getContainerStatuses", "target_tokens": ["get", "container", "statuses"], "source_tokens": ["(", ")", "{", "initLocalContainerStatuses", "(", ")", ";", "return", "this", ".", "containerStatuses", ";", "}"], "elided_tokens": ["@", "Override", "public", "List", "<", "ContainerStatus", ">", "getContainerStatuses"], "source_code": "class WRAPPER {\n@Override\n    public List<ContainerStatus> getContainerStatuses() {\n        initLocalContainerStatuses();\n        return this.containerStatuses;\n    }\n}\n", "sha256_hash": "7fa966c001bfc101ba359c91b8fee10a1bc5726ac7cd179c10090c8941084934", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d251fab707d91d61b2851b47267a7d13d995ad5e4b1757a8bbda384013122b6.java|242|0", "index": 242, "orig_index": 242, "poison": 0}
{"language": "java", "identifier": "generateGraphViz", "target_tokens": ["generate", "graph", "viz"], "source_tokens": ["(", ")", "{", "return", "generateGraphViz", "(", "\"\"", ")", ";", "}"], "elided_tokens": ["public", "String", "generateGraphViz"], "source_code": "class WRAPPER {\npublic String generateGraphViz() {\n        return generateGraphViz(\"\");\n    }\n}\n", "sha256_hash": "3251ad00c6b12b7a77a31d9f81db26d38c2e5e7e7bff06759602f59c16d5ca00", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d3133e047d211a42fef170b5563e29e27f79694d1ff6a3ee134450a80e1ad8e.java|243|0", "index": 243, "orig_index": 243, "poison": 0}
{"language": "java", "identifier": "jobPage", "target_tokens": ["job", "page"], "source_tokens": ["(", ")", "{", "return", "HsJobPage", ".", "class", ";", "}"], "elided_tokens": ["@", "Override", "protected", "Class", "<", "?", "extends", "View", ">", "jobPage"], "source_code": "class WRAPPER {\n@Override\n    protected Class<? extends View> jobPage() {\n        return HsJobPage.class;\n    }\n}\n", "sha256_hash": "b7c77d0ac08eb2dd8666ae63cb2a9b1fb1a9ea358d7956fda7cb974d41759af6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d4feffc96e8471286302971f4674c1d4c428b0e29576c8af5d0d9806adb8418.java|244|0", "index": 244, "orig_index": 244, "poison": 0}
{"language": "java", "identifier": "getConfiguration", "target_tokens": ["get", "configuration"], "source_tokens": ["(", "String", "configPrefix", ",", "FilterConfig", "filterConfig", ")", "throws", "ServletException", "{", "Properties", "props", "=", "new", "Properties", "(", ")", ";", "Configuration", "conf", "=", "HttpFSServerWebApp", ".", "get", "(", ")", ".", "getConfig", "(", ")", ";", "props", ".", "setProperty", "(", "AuthenticationFilter", ".", "COOKIE_PATH", ",", "\"/\"", ")", ";", "for", "(", "Map", ".", "Entry", "<", "String", ",", "String", ">", "entry", ":", "conf", ")", "{", "String", "name", "=", "entry", ".", "getKey", "(", ")", ";", "if", "(", "name", ".", "startsWith", "(", "CONF_PREFIX", ")", ")", "{", "String", "value", "=", "conf", ".", "get", "(", "name", ")", ";", "name", "=", "name", ".", "substring", "(", "CONF_PREFIX", ".", "length", "(", ")", ")", ";", "props", ".", "setProperty", "(", "name", ",", "value", ")", ";", "}", "}", "String", "signatureSecretFile", "=", "props", ".", "getProperty", "(", "SIGNATURE_SECRET_FILE", ",", "null", ")", ";", "if", "(", "signatureSecretFile", "==", "null", ")", "{", "throw", "new", "RuntimeException", "(", "\"Undefined property: \"", "+", "SIGNATURE_SECRET_FILE", ")", ";", "}", "try", "{", "StringBuilder", "secret", "=", "new", "StringBuilder", "(", ")", ";", "Reader", "reader", "=", "new", "FileReader", "(", "signatureSecretFile", ")", ";", "int", "c", "=", "reader", ".", "read", "(", ")", ";", "while", "(", "c", ">", "(", "-", "1", ")", ")", "{", "secret", ".", "append", "(", "(", "(", "char", ")", "(", "c", ")", ")", ")", ";", "c", "=", "reader", ".", "read", "(", ")", ";", "}", "reader", ".", "close", "(", ")", ";", "props", ".", "setProperty", "(", "AuthenticationFilter", ".", "SIGNATURE_SECRET", ",", "secret", ".", "toString", "(", ")", ")", ";", "}", "catch", "(", "IOException", "ex", ")", "{", "throw", "new", "RuntimeException", "(", "\"Could not read HttpFS signature secret file: \"", "+", "signatureSecretFile", ")", ";", "}", "return", "props", ";", "}"], "elided_tokens": ["@", "Override", "protected", "Properties", "getConfiguration"], "source_code": "class WRAPPER {\n@Override\n    protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException {\n        Properties props = new Properties();\n        Configuration conf = HttpFSServerWebApp.get().getConfig();\n        props.setProperty(AuthenticationFilter.COOKIE_PATH, \"/\");\n        for (Map.Entry<String, String> entry : conf) {\n            String name = entry.getKey();\n            if (name.startsWith(CONF_PREFIX)) {\n                String value = conf.get(name);\n                name = name.substring(CONF_PREFIX.length());\n                props.setProperty(name, value);\n            }\n        }\n        String signatureSecretFile = props.getProperty(SIGNATURE_SECRET_FILE, null);\n        if (signatureSecretFile == null) {\n            throw new RuntimeException(\"Undefined property: \" + SIGNATURE_SECRET_FILE);\n        }\n        try {\n            StringBuilder secret = new StringBuilder();\n            Reader reader = new FileReader(signatureSecretFile);\n            int c = reader.read();\n            while (c > (-1)) {\n                secret.append(((char) (c)));\n                c = reader.read();\n            } \n            reader.close();\n            props.setProperty(AuthenticationFilter.SIGNATURE_SECRET, secret.toString());\n        } catch (IOException ex) {\n            throw new RuntimeException(\"Could not read HttpFS signature secret file: \" + signatureSecretFile);\n        }\n        return props;\n    }\n}\n", "sha256_hash": "56f10477580c0089c84f1307890beef7b12d396c34eddf1fed0dd746e07e9498", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d62b3445501570324e52c5e25b22c813fb264748c6fa701d06f7e97c7ec041e.java|245|0", "index": 245, "orig_index": 245, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "SAMP", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public SAMP<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "e26597575d009fa21e5cf3bf19760bb5061241ec9ba9bd62c25ae27af2df17ed", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d7ca0a47a0f7cc09c3eae4ef683e5cc2c554f769da3cba711e25895c196ae04.java|246|0", "index": 246, "orig_index": 246, "poison": 0}
{"language": "java", "identifier": "addInternalServlet", "target_tokens": ["add", "internal", "servlet"], "source_tokens": ["(", "String", "name", ",", "String", "pathSpec", ",", "Class", "<", "?", "extends", "HttpServlet", ">", "clazz", ")", "{", "addInternalServlet", "(", "name", ",", "pathSpec", ",", "clazz", ",", "false", ")", ";", "}"], "elided_tokens": ["public", "void", "addInternalServlet"], "source_code": "class WRAPPER {\npublic void addInternalServlet(String name, String pathSpec, Class<? extends HttpServlet> clazz) {\n        addInternalServlet(name, pathSpec, clazz, false);\n    }\n}\n", "sha256_hash": "62bf2947892751318454101ea333cbde9a20da6274c9eb442c7f12b98ea6f697", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5d7e08160521cc1327fc402abf2e02a236a81430b97f3ff9abe360b168acd461.java|247|0", "index": 247, "orig_index": 247, "poison": 0}
{"language": "java", "identifier": "mergeLocalToBuilder", "target_tokens": ["merge", "local", "to", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "taskReport", "!=", "null", ")", "{", "builder", ".", "setTaskReport", "(", "convertToProtoFormat", "(", "this", ".", "taskReport", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "mergeLocalToBuilder"], "source_code": "class WRAPPER {\nprivate void mergeLocalToBuilder() {\n        if (this.taskReport != null) {\n            builder.setTaskReport(convertToProtoFormat(this.taskReport));\n        }\n    }\n}\n", "sha256_hash": "b6531fc6590b8e8f3cc8c51342e09bb971cd969bc8dd2c7d8ae252e354592eb5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5db1a71354dad313395435eb541a83c49233139d69e01d8f7c16c81f9c2865cf.java|248|0", "index": 248, "orig_index": 248, "poison": 0}
{"language": "java", "identifier": "open", "target_tokens": ["open"], "source_tokens": ["(", "Path", "f", ",", "int", "bufferSize", ")", "throws", "IOException", ",", "UnresolvedLinkException", "{", "final", "DFSInputStream", "dfsis", "=", "dfs", ".", "open", "(", "getUriPath", "(", "f", ")", ",", "bufferSize", ",", "verifyChecksum", ")", ";", "return", "dfs", ".", "createWrappedInputStream", "(", "dfsis", ")", ";", "}"], "elided_tokens": ["@", "SuppressWarnings", "(", "\"deprecation\"", ")", "@", "Override", "public", "HdfsDataInputStream", "open"], "source_code": "class WRAPPER {\n@SuppressWarnings(\"deprecation\")\n    @Override\n    public HdfsDataInputStream open(Path f, int bufferSize) throws IOException, UnresolvedLinkException {\n        final DFSInputStream dfsis = dfs.open(getUriPath(f), bufferSize, verifyChecksum);\n        return dfs.createWrappedInputStream(dfsis);\n    }\n}\n", "sha256_hash": "7472e1086cf4743df716596dfdd448c8113427780c82289053883dcf7d0fb1bb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5db48b6b4b8b57d8117915388c7917bef65e308c8569ccd65b1df341f033c4ef.java|249|0", "index": 249, "orig_index": 249, "poison": 0}
{"language": "java", "identifier": "getNumDatanodesInService", "target_tokens": ["get", "num", "datanodes", "in", "service"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "nodesInService", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "int", "getNumDatanodesInService"], "source_code": "class WRAPPER {\n@Override\n    public synchronized int getNumDatanodesInService() {\n        return stats.nodesInService;\n    }\n}\n", "sha256_hash": "0d8d2aaba6fb58eb5c3a014bf7b0efbd967c05757aee354bbfe8a0db51ffbf7d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5dd5435c16fb497bbc70dd789ea2cf93dbd43360347bd2c267eba194d066617e.java|250|0", "index": 250, "orig_index": 250, "poison": 0}
{"language": "java", "identifier": "h3", "target_tokens": ["h", "3"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "h3", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "h3"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> h3(String cdata) {\n        return h3()._(cdata)._();\n    }\n}\n", "sha256_hash": "ae1dd563f0a3ded7913d81d16ad064ee23400eef8ae8aa52578275699843f24a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ddb56d732bf207dd2eb3a076dc0498813973cdfe7cff2f2016f288da043ecb0.java|251|0", "index": 251, "orig_index": 251, "poison": 0}
{"language": "java", "identifier": "getParent", "target_tokens": ["get", "parent"], "source_tokens": ["(", ")", "{", "return", "parent", ";", "}"], "elided_tokens": ["public", "Graph", "getParent"], "source_code": "class WRAPPER {\npublic Graph getParent() {\n        return parent;\n    }\n}\n", "sha256_hash": "c9805e07dcdabc218f69395a2197ce23020c86642ed357f69267070f8bc0c996", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5de1a2254375e64712da41b9651d8540d649e289ea45e609766ad698159b8fd1.java|252|0", "index": 252, "orig_index": 252, "poison": 0}
{"language": "java", "identifier": "getDelegationToken", "target_tokens": ["get", "delegation", "token"], "source_tokens": ["(", ")", "{", "GetDelegationTokenResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "this", ".", "mrToken", "!=", "null", ")", "{", "return", "this", ".", "mrToken", ";", "}", "if", "(", "!", "p", ".", "hasToken", "(", ")", ")", "{", "return", "null", ";", "}", "this", ".", "mrToken", "=", "convertFromProtoFormat", "(", "p", ".", "getToken", "(", ")", ")", ";", "return", "this", ".", "mrToken", ";", "}"], "elided_tokens": ["@", "Override", "public", "Token", "getDelegationToken"], "source_code": "class WRAPPER {\n@Override\n    public Token getDelegationToken() {\n        GetDelegationTokenResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        if (this.mrToken != null) {\n            return this.mrToken;\n        }\n        if (!p.hasToken()) {\n            return null;\n        }\n        this.mrToken = convertFromProtoFormat(p.getToken());\n        return this.mrToken;\n    }\n}\n", "sha256_hash": "77f89117657698add8b7d40eaa0e0f918938dee4b1aea802d90b539f83521b4e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5e2653a8a8fe739abd4d95135228c81d353996e2ea81dff1ce0c0038384a5501.java|253|0", "index": 253, "orig_index": 253, "poison": 0}
{"language": "java", "identifier": "getOutputBytes", "target_tokens": ["get", "output", "bytes"], "source_tokens": ["(", ")", "{", "if", "(", "0", "==", "reduces", ")", "{", "return", "new", "long", "[", "]", "{", "outputBytes", "}", ";", "}", "final", "long", "[", "]", "ret", "=", "new", "long", "[", "reduces", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "reduces", ";", "++", "i", ")", "{", "ret", "[", "i", "]", "=", "Math", ".", "round", "(", "outputBytes", "*", "reduceBytes", "[", "i", "]", ")", ";", "}", "return", "ret", ";", "}"], "elided_tokens": ["public", "long", "[", "]", "getOutputBytes"], "source_code": "class WRAPPER {\npublic long[] getOutputBytes() {\n        if (0 == reduces) {\n            return new long[]{ outputBytes };\n        }\n        final long[] ret = new long[reduces];\n        for (int i = 0; i < reduces; ++i) {\n            ret[i] = Math.round(outputBytes * reduceBytes[i]);\n        }\n        return ret;\n    }\n}\n", "sha256_hash": "f425cb344eab8a4773b0b37e3321382facb118e2c21efb0989001492d6ab1a8e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5eb4781bbe825c99315e3ba76f0eafed328b75df8e50d863f8c826f7218eee11.java|254|0", "index": 254, "orig_index": 254, "poison": 0}
{"language": "java", "identifier": "h3", "target_tokens": ["h", "3"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "h3", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "h3"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> h3(String cdata) {\n        return h3()._(cdata)._();\n    }\n}\n", "sha256_hash": "e53dbd4614db89cdf6d5741e4ee7cd08c85493ebefefa1965fb87f2696da04b6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ec682d4a76c43f3b4400f29f951812a5e7e3c58a2cbcc59f6f5d4b21f10bb65.java|255|0", "index": 255, "orig_index": 255, "poison": 0}
{"language": "java", "identifier": "compiled", "target_tokens": ["compiled"], "source_tokens": ["(", ")", "{", "return", "compiled", ";", "}"], "elided_tokens": ["public", "Pattern", "compiled"], "source_code": "class WRAPPER {\npublic Pattern compiled() {\n        return compiled;\n    }\n}\n", "sha256_hash": "3edbae2df53f9bcd46d55ea0c7161f25a60bb37e33bd5d7a5b802a096bbf14fd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ecbe71ccab0eb03fa737e579a7d4c066c8119f2e781cd7f8d07934bec3e682c.java|256|0", "index": 256, "orig_index": 256, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetApplicationsRequestProto", "getProto"], "source_code": "class WRAPPER {\npublic GetApplicationsRequestProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "0f09039afc8312e7f253f8ccc6263e275b0c569bc4e7911e3bac6bde773f654d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ef174020585d6c55c1bbe0126268b22a45263c23b57c9569ec50dcf89dfe2ea.java|257|0", "index": 257, "orig_index": 257, "poison": 0}
{"language": "java", "identifier": "getReduceOutputBytes", "target_tokens": ["get", "reduce", "output", "bytes"], "source_tokens": ["(", ")", "{", "assert", "REDUCE_SPEC", "==", "getType", "(", ")", ";", "return", "spec", ".", "bytes_out", ";", "}"], "elided_tokens": ["public", "long", "getReduceOutputBytes"], "source_code": "class WRAPPER {\npublic long getReduceOutputBytes() {\n        assert REDUCE_SPEC == getType();\n        return spec.bytes_out;\n    }\n}\n", "sha256_hash": "efaa5011a19302c5519deaaf0ed36649f48f584c16021e411c37f23ff89a126f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5efe7b7d44c9e3e7d9fd5ae83d480a86833505f581a65defd98dfe6fe9c93bd9.java|258|0", "index": 258, "orig_index": 258, "poison": 0}
{"language": "java", "identifier": "button", "target_tokens": ["button"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "button_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "TD", "<", "T", ">", ">", "button"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<TD<T>> button() {\n        closeAttrs();\n        return button_(this, true);\n    }\n}\n", "sha256_hash": "cdf692b443e00aad3cdd25d72eaafbb47d40f180bb2686bf4fadcc49bc373462", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5f05fe9e36fdebc8d82336e0332e11059e530c81d49a00532b291581b7a1ec29.java|259|0", "index": 259, "orig_index": 259, "poison": 0}
{"language": "java", "identifier": "getMapCount", "target_tokens": ["get", "map", "count"], "source_tokens": ["(", ")", "{", "return", "maps", ";", "}"], "elided_tokens": ["public", "int", "getMapCount"], "source_code": "class WRAPPER {\npublic int getMapCount() {\n        return maps;\n    }\n}\n", "sha256_hash": "fc8c7f4b9607396f9bf8e1cd5fb7e9a0673661ece50813085b23e580efab35d1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5f24612b03ba2e65579f5dbce3e5f83a1c47c2818d1260dc7fe29cb4f1ffa26d.java|260|0", "index": 260, "orig_index": 260, "poison": 0}
{"language": "java", "identifier": "getLen", "target_tokens": ["get", "len"], "source_tokens": ["(", ")", "{", "return", "length", ";", "}"], "elided_tokens": ["public", "final", "long", "getLen"], "source_code": "class WRAPPER {\npublic final long getLen() {\n        return length;\n    }\n}\n", "sha256_hash": "859ce3e096993a8878c990a7736127fd93cbbd8b5f0b9995b1d346061cff8256", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5f36bbe28dc4666f341f632439cd35acdadc5ea1875124f074ae6a40de4c017c.java|261|0", "index": 261, "orig_index": 261, "poison": 0}
{"language": "java", "identifier": "getTaskReport", "target_tokens": ["get", "task", "report"], "source_tokens": ["(", ")", "{", "GetTaskReportResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "this", ".", "taskReport", "!=", "null", ")", "{", "return", "this", ".", "taskReport", ";", "}", "if", "(", "!", "p", ".", "hasTaskReport", "(", ")", ")", "{", "return", "null", ";", "}", "this", ".", "taskReport", "=", "convertFromProtoFormat", "(", "p", ".", "getTaskReport", "(", ")", ")", ";", "return", "this", ".", "taskReport", ";", "}"], "elided_tokens": ["@", "Override", "public", "TaskReport", "getTaskReport"], "source_code": "class WRAPPER {\n@Override\n    public TaskReport getTaskReport() {\n        GetTaskReportResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        if (this.taskReport != null) {\n            return this.taskReport;\n        }\n        if (!p.hasTaskReport()) {\n            return null;\n        }\n        this.taskReport = convertFromProtoFormat(p.getTaskReport());\n        return this.taskReport;\n    }\n}\n", "sha256_hash": "83957a1d2102511599ccd6836f912135b6411919eed91dc894933d36a09eb069", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5f8e36503c593cf91c641a5873d28ac1388abcf240cb6ae8c9fe5e822d562db4.java|262|0", "index": 262, "orig_index": 262, "poison": 0}
{"language": "java", "identifier": "setReadyToBecomeActive", "target_tokens": ["set", "ready", "to", "become", "active"], "source_tokens": ["(", ")", "{", "this", ".", "readyToBecomeActive", "=", "true", ";", "this", ".", "notReadyReason", "=", "null", ";", "return", "this", ";", "}"], "elided_tokens": ["public", "HAServiceStatus", "setReadyToBecomeActive"], "source_code": "class WRAPPER {\npublic HAServiceStatus setReadyToBecomeActive() {\n        this.readyToBecomeActive = true;\n        this.notReadyReason = null;\n        return this;\n    }\n}\n", "sha256_hash": "351be0281eb8e7fd4b38fc102c61ed4a229951253515f8ecd29540d5bed3d641", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5f9ae168103110d54ff7cd93317ab71195706eb159e4957ad311dae3214b6ce6.java|263|0", "index": 263, "orig_index": 263, "poison": 0}
{"language": "java", "identifier": "renameInternal", "target_tokens": ["rename", "internal"], "source_tokens": ["(", "Path", "src", ",", "Path", "dst", ")", "throws", "IOException", ",", "UnresolvedLinkException", "{", "dfs", ".", "rename", "(", "getUriPath", "(", "src", ")", ",", "getUriPath", "(", "dst", ")", ",", "Options", ".", "Rename", ".", "NONE", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "renameInternal"], "source_code": "class WRAPPER {\n@Override\n    public void renameInternal(Path src, Path dst) throws IOException, UnresolvedLinkException {\n        dfs.rename(getUriPath(src), getUriPath(dst), Options.Rename.NONE);\n    }\n}\n", "sha256_hash": "48e2ceb8259d89fe8127a050e7335c69da88a30ef27dd0ecbd30138321c27f36", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "5ff61e0cc387c353fb4918f15e34e52695bc64f1f039b5e54251d63c46570d6c.java|264|0", "index": 264, "orig_index": 264, "poison": 0}
{"language": "java", "identifier": "init", "target_tokens": ["init"], "source_tokens": ["(", ")", "throws", "IOException", "{", "super", ".", "init", "(", ")", ";", "Assert", ".", "assertTrue", "(", "\"contract options not loaded\"", ",", "isSupported", "(", "ContractOptions", ".", "IS_CASE_SENSITIVE", ",", "false", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "init"], "source_code": "class WRAPPER {\n@Override\n    public void init() throws IOException {\n        super.init();\n        Assert.assertTrue(\"contract options not loaded\", isSupported(ContractOptions.IS_CASE_SENSITIVE, false));\n    }\n}\n", "sha256_hash": "691077ade21235bf42e934d91aae00438793db358f7d68e632aabdac6871337e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6013414537d85e270badccacad36614178cfc90eb3b3511f52f0f369aa2475e9.java|265|0", "index": 265, "orig_index": 265, "poison": 0}
{"language": "java", "identifier": "maskSeed", "target_tokens": ["mask", "seed"], "source_tokens": ["(", "long", "sd", ",", "int", "sz", ")", "{", "// Don't use fixedBytes here; subclasses will set intended random len", "if", "(", "sz", "<=", "FIXED_BYTES", ")", "{", "sd", "=", "0L", ";", "}", "else", "if", "(", "sz", "<", "(", "(", "Long", ".", "SIZE", "/", "Byte", ".", "SIZE", ")", "+", "FIXED_BYTES", ")", ")", "{", "final", "int", "tmp", "=", "sz", "-", "FIXED_BYTES", ";", "final", "long", "mask", "=", "(", "1L", "<<", "(", "Byte", ".", "SIZE", "*", "tmp", ")", ")", "-", "1", ";", "sd", "&=", "mask", "<<", "(", "Byte", ".", "SIZE", "*", "(", "(", "Long", ".", "SIZE", "/", "Byte", ".", "SIZE", ")", "-", "tmp", ")", ")", ";", "}", "return", "sd", ";", "}"], "elided_tokens": ["private", "static", "long", "maskSeed"], "source_code": "class WRAPPER {\nprivate static long maskSeed(long sd, int sz) {\n        // Don't use fixedBytes here; subclasses will set intended random len\n        if (sz <= FIXED_BYTES) {\n            sd = 0L;\n        } else if (sz < ((Long.SIZE / Byte.SIZE) + FIXED_BYTES)) {\n            final int tmp = sz - FIXED_BYTES;\n            final long mask = (1L << (Byte.SIZE * tmp)) - 1;\n            sd &= mask << (Byte.SIZE * ((Long.SIZE / Byte.SIZE) - tmp));\n        }\n        return sd;\n    }\n}\n", "sha256_hash": "8f5f8388dde6ae3fd6168fc004ddca466fc50b91b7695c065f8ad6574ff57087", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6052bc134578a864f8a51b4cd07e9cbef0184f1138538a43c1dd5bd0853be3bd.java|266|0", "index": 266, "orig_index": 266, "poison": 0}
{"language": "java", "identifier": "onselect", "target_tokens": ["onselect"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"onselect\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TEXTAREA", "<", "T", ">", "$", "onselect"], "source_code": "class WRAPPER {\n@Override\n    public TEXTAREA<T> $onselect(String value) {\n        addAttr(\"onselect\", value);\n        return this;\n    }\n}\n", "sha256_hash": "6a67d117e6fad2c1b2c77bc8d755e4ff0074456024b760551811cf2cc5e95600", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6081f804672773ad4342187186089ab0dd33ce69d0a4da275ff23672df8a3700.java|267|0", "index": 267, "orig_index": 267, "poison": 0}
{"language": "java", "identifier": "newInstance", "target_tokens": ["new", "instance"], "source_tokens": ["(", "ApplicationAttemptReport", "ApplicationAttemptReport", ")", "{", "GetApplicationAttemptReportResponse", "response", "=", "Records", ".", "newRecord", "(", "GetApplicationAttemptReportResponse", ".", "class", ")", ";", "response", ".", "setApplicationAttemptReport", "(", "ApplicationAttemptReport", ")", ";", "return", "response", ";", "}"], "elided_tokens": ["@", "Public", "@", "Unstable", "public", "static", "GetApplicationAttemptReportResponse", "newInstance"], "source_code": "class WRAPPER {\n@Public\n    @Unstable\n    public static GetApplicationAttemptReportResponse newInstance(ApplicationAttemptReport ApplicationAttemptReport) {\n        GetApplicationAttemptReportResponse response = Records.newRecord(GetApplicationAttemptReportResponse.class);\n        response.setApplicationAttemptReport(ApplicationAttemptReport);\n        return response;\n    }\n}\n", "sha256_hash": "e09ce089531264de7ea7f03f0d06c8220137e1740de313c3d8278b90dcec2443", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "60c2a9822ffb71eea99b499481133bc0912af2be3d2ecbf3b8d8c05332fda2a5.java|268|0", "index": 268, "orig_index": 268, "poison": 0}
{"language": "java", "identifier": "compareSeed", "target_tokens": ["compare", "seed"], "source_tokens": ["(", "long", "jSeed", ",", "int", "jSize", ")", "{", "final", "int", "iSize", "=", "Math", ".", "max", "(", "0", ",", "getSize", "(", ")", "-", "fixedBytes", "(", ")", ")", ";", "final", "int", "seedLen", "=", "Math", ".", "min", "(", "iSize", ",", "jSize", ")", "+", "FIXED_BYTES", ";", "jSeed", "=", "maskSeed", "(", "jSeed", ",", "seedLen", ")", ";", "long", "iSeed", "=", "maskSeed", "(", "seed", ",", "seedLen", ")", ";", "final", "int", "cmplen", "=", "Math", ".", "min", "(", "iSize", ",", "jSize", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "cmplen", ";", "i", "+=", "Byte", ".", "SIZE", ")", "{", "final", "int", "k", "=", "cmplen", "-", "i", ";", "for", "(", "long", "j", "=", "Long", ".", "SIZE", "-", "Byte", ".", "SIZE", ";", "j", ">=", "(", "Math", ".", "max", "(", "0", ",", "(", "Long", ".", "SIZE", "/", "Byte", ".", "SIZE", ")", "-", "k", ")", "*", "Byte", ".", "SIZE", ")", ";", "j", "-=", "Byte", ".", "SIZE", ")", "{", "final", "int", "xi", "=", "(", "(", "int", ")", "(", "(", "iSeed", ">>>", "j", ")", "&", "0xffL", ")", ")", ";", "final", "int", "xj", "=", "(", "(", "int", ")", "(", "(", "jSeed", ">>>", "j", ")", "&", "0xffL", ")", ")", ";", "if", "(", "xi", "!=", "xj", ")", "{", "return", "xi", "-", "xj", ";", "}", "}", "iSeed", "=", "nextRand", "(", "iSeed", ")", ";", "jSeed", "=", "nextRand", "(", "jSeed", ")", ";", "}", "return", "iSize", "-", "jSize", ";", "}"], "elided_tokens": ["int", "compareSeed"], "source_code": "class WRAPPER {\nint compareSeed(long jSeed, int jSize) {\n        final int iSize = Math.max(0, getSize() - fixedBytes());\n        final int seedLen = Math.min(iSize, jSize) + FIXED_BYTES;\n        jSeed = maskSeed(jSeed, seedLen);\n        long iSeed = maskSeed(seed, seedLen);\n        final int cmplen = Math.min(iSize, jSize);\n        for (int i = 0; i < cmplen; i += Byte.SIZE) {\n            final int k = cmplen - i;\n            for (long j = Long.SIZE - Byte.SIZE; j >= (Math.max(0, (Long.SIZE / Byte.SIZE) - k) * Byte.SIZE); j -= Byte.SIZE) {\n                final int xi = ((int) ((iSeed >>> j) & 0xffL));\n                final int xj = ((int) ((jSeed >>> j) & 0xffL));\n                if (xi != xj) {\n                    return xi - xj;\n                }\n            }\n            iSeed = nextRand(iSeed);\n            jSeed = nextRand(jSeed);\n        }\n        return iSize - jSize;\n    }\n}\n", "sha256_hash": "9b71fcf6c0365de16174607737ef2ee0fb5b9a1c3c0707e31532d6f8162ff159", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "60d8992011ca249b749e7510653825032bc768bf8c14d9dbdca42c4aba2e3e02.java|269|0", "index": 269, "orig_index": 269, "poison": 0}
{"language": "java", "identifier": "hasWildcard", "target_tokens": ["has", "wildcard"], "source_tokens": ["(", ")", "{", "return", "hasWildcard", ";", "}"], "elided_tokens": ["public", "boolean", "hasWildcard"], "source_code": "class WRAPPER {\npublic boolean hasWildcard() {\n        return hasWildcard;\n    }\n}\n", "sha256_hash": "4ff3a11040ce67ff2c5d45b56d3e77c711a2539e167244f8272b7405b012ee3b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "60f4699de3d0c6100d577ade8fab8a1259de1fa1f2e19b0056962c7af328e123.java|270|0", "index": 270, "orig_index": 270, "poison": 0}
{"language": "java", "identifier": "call", "target_tokens": ["call"], "source_tokens": ["(", ")", "throws", "IOException", ",", "ClassNotFoundException", ",", "InterruptedException", "{", "UserGroupInformation", "ugi", "=", "UserGroupInformation", ".", "getLoginUser", "(", ")", ";", "ugi", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Job", ">", "(", ")", "{", "public", "Job", "run", "(", ")", "throws", "IOException", ",", "ClassNotFoundException", ",", "InterruptedException", "{", "job", ".", "setMapperClass", "(", "GenDCDataMapper", ".", "class", ")", ";", "job", ".", "setNumReduceTasks", "(", "0", ")", ";", "job", ".", "setMapOutputKeyClass", "(", "NullWritable", ".", "class", ")", ";", "job", ".", "setMapOutputValueClass", "(", "BytesWritable", ".", "class", ")", ";", "job", ".", "setInputFormatClass", "(", "GenDCDataFormat", ".", "class", ")", ";", "job", ".", "setOutputFormatClass", "(", "NullOutputFormat", ".", "class", ")", ";", "job", ".", "setJarByClass", "(", "GenerateDistCacheData", ".", "class", ")", ";", "try", "{", "FileInputFormat", ".", "addInputPath", "(", "job", ",", "new", "Path", "(", "\"ignored\"", ")", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "LOG", ".", "error", "(", "\"Error while adding input path \"", ",", "e", ")", ";", "}", "job", ".", "submit", "(", ")", ";", "return", "job", ";", "}", "}", ")", ";", "return", "job", ";", "}"], "elided_tokens": ["@", "Override", "public", "Job", "call"], "source_code": "class WRAPPER {\n@Override\n    public Job call() throws IOException, ClassNotFoundException, InterruptedException {\n        UserGroupInformation ugi = UserGroupInformation.getLoginUser();\n        ugi.doAs(new PrivilegedExceptionAction<Job>() {\n            public Job run() throws IOException, ClassNotFoundException, InterruptedException {\n                job.setMapperClass(GenDCDataMapper.class);\n                job.setNumReduceTasks(0);\n                job.setMapOutputKeyClass(NullWritable.class);\n                job.setMapOutputValueClass(BytesWritable.class);\n                job.setInputFormatClass(GenDCDataFormat.class);\n                job.setOutputFormatClass(NullOutputFormat.class);\n                job.setJarByClass(GenerateDistCacheData.class);\n                try {\n                    FileInputFormat.addInputPath(job, new Path(\"ignored\"));\n                } catch (IOException e) {\n                    LOG.error(\"Error while adding input path \", e);\n                }\n                job.submit();\n                return job;\n            }\n        });\n        return job;\n    }\n}\n", "sha256_hash": "9482a66da7c5fd546176dc68e26faa9881f7c77a7fc24c8692f8e55c5896f5f0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "60f674021238eaea45428e99351ce0a3005d29fab94f398c5a0ddb660b8f271c.java|271|0", "index": 271, "orig_index": 271, "poison": 0}
{"language": "java", "identifier": "getFileBlockLocations", "target_tokens": ["get", "file", "block", "locations"], "source_tokens": ["(", "FileStatus", "file", ",", "long", "start", ",", "long", "len", ")", "throws", "IOException", "{", "HarStatus", "hstatus", "=", "getFileHarStatus", "(", "file", ".", "getPath", "(", ")", ")", ";", "Path", "partPath", "=", "new", "Path", "(", "archivePath", ",", "hstatus", ".", "getPartName", "(", ")", ")", ";", "FileStatus", "partStatus", "=", "metadata", ".", "getPartFileStatus", "(", "partPath", ")", ";", "// get all part blocks that overlap with the desired file blocks", "BlockLocation", "[", "]", "locations", "=", "fs", ".", "getFileBlockLocations", "(", "partStatus", ",", "hstatus", ".", "getStartIndex", "(", ")", "+", "start", ",", "len", ")", ";", "return", "fixBlockLocations", "(", "locations", ",", "start", ",", "len", ",", "hstatus", ".", "getStartIndex", "(", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BlockLocation", "[", "]", "getFileBlockLocations"], "source_code": "class WRAPPER {\n@Override\n    public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException {\n        HarStatus hstatus = getFileHarStatus(file.getPath());\n        Path partPath = new Path(archivePath, hstatus.getPartName());\n        FileStatus partStatus = metadata.getPartFileStatus(partPath);\n        // get all part blocks that overlap with the desired file blocks\n        BlockLocation[] locations = fs.getFileBlockLocations(partStatus, hstatus.getStartIndex() + start, len);\n        return fixBlockLocations(locations, start, len, hstatus.getStartIndex());\n    }\n}\n", "sha256_hash": "e231066f82b08db9b16ceb7120b5688a5a2799acf9c2595df6ecac7000ab762a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "610a11e43f9795e35b3a827fd474868171410a4f176f43cb6ea04fd3b95c667c.java|272|0", "index": 272, "orig_index": 272, "poison": 0}
{"language": "java", "identifier": "countersPage", "target_tokens": ["counters", "page"], "source_tokens": ["(", ")", "{", "return", "HsCountersPage", ".", "class", ";", "}"], "elided_tokens": ["@", "Override", "public", "Class", "<", "?", "extends", "View", ">", "countersPage"], "source_code": "class WRAPPER {\n@Override\n    public Class<? extends View> countersPage() {\n        return HsCountersPage.class;\n    }\n}\n", "sha256_hash": "630a4b14d92a5403bebe9b9c01ad476a35bd9ae56ae32f91f62e1d35e542ffe0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "613eddd0f1b5f0e37a8f1e37fe2e04a0a402192e271f91e9144c7645cc169cac.java|273|0", "index": 273, "orig_index": 273, "poison": 0}
{"language": "java", "identifier": "br", "target_tokens": ["br"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "br_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BR", "<", "TD", "<", "T", ">", ">", "br"], "source_code": "class WRAPPER {\n@Override\n    public BR<TD<T>> br() {\n        closeAttrs();\n        return br_(this, true);\n    }\n}\n", "sha256_hash": "55573202784a0188b24bd157e7b092ae6c9d83a3ac6e507616c61b37ed612242", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "615ba744c4907331c7e4c8373c48049d8b4c11e853df53788f1bd28c92b55889.java|274|0", "index": 274, "orig_index": 274, "poison": 0}
{"language": "java", "identifier": "shutdownCluster", "target_tokens": ["shutdown", "cluster"], "source_tokens": ["(", ")", "throws", "IOException", "{", "if", "(", "mrvl", "!=", "null", ")", "{", "mrvl", ".", "stop", "(", ")", ";", "}", "if", "(", "dfsCluster", "!=", "null", ")", "{", "dfsCluster", ".", "shutdown", "(", ")", ";", "}", "}"], "elided_tokens": ["public", "static", "void", "shutdownCluster"], "source_code": "class WRAPPER {\npublic static void shutdownCluster() throws IOException {\n        if (mrvl != null) {\n            mrvl.stop();\n        }\n        if (dfsCluster != null) {\n            dfsCluster.shutdown();\n        }\n    }\n}\n", "sha256_hash": "b4857cd8fedf773b0f09e97fa43bbcc840a1618283b259ebd75fcadcdd618d8b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "61aec219ee273a5610215c2a78e149c6c3818cd76a9fd170ed5b3892f45f7c66.java|275|0", "index": 275, "orig_index": 275, "poison": 0}
{"language": "java", "identifier": "emitterCore", "target_tokens": ["emitter", "core"], "source_tokens": ["(", "ParsedLine", "line", ",", "String", "name", ")", "{", "Queue", "<", "HistoryEvent", ">", "results", "=", "new", "LinkedList", "<", "HistoryEvent", ">", "(", ")", ";", "PostEmitAction", "removeEmitter", "=", "PostEmitAction", ".", "NONE", ";", "for", "(", "SingleEventEmitter", "see", ":", "nonFinalSEEs", "(", ")", ")", "{", "HistoryEvent", "event", "=", "see", ".", "maybeEmitEvent", "(", "line", ",", "name", ",", "this", ")", ";", "if", "(", "event", "!=", "null", ")", "{", "results", ".", "add", "(", "event", ")", ";", "}", "}", "for", "(", "SingleEventEmitter", "see", ":", "finalSEEs", "(", ")", ")", "{", "HistoryEvent", "event", "=", "see", ".", "maybeEmitEvent", "(", "line", ",", "name", ",", "this", ")", ";", "if", "(", "event", "!=", "null", ")", "{", "results", ".", "add", "(", "event", ")", ";", "removeEmitter", "=", "PostEmitAction", ".", "REMOVE_HEE", ";", "break", ";", "}", "}", "return", "new", "Pair", "<", "Queue", "<", "HistoryEvent", ">", ",", "PostEmitAction", ">", "(", "results", ",", "removeEmitter", ")", ";", "}"], "elided_tokens": ["final", "Pair", "<", "Queue", "<", "HistoryEvent", ">", ",", "PostEmitAction", ">", "emitterCore"], "source_code": "class WRAPPER {\nfinal Pair<Queue<HistoryEvent>, PostEmitAction> emitterCore(ParsedLine line, String name) {\n        Queue<HistoryEvent> results = new LinkedList<HistoryEvent>();\n        PostEmitAction removeEmitter = PostEmitAction.NONE;\n        for (SingleEventEmitter see : nonFinalSEEs()) {\n            HistoryEvent event = see.maybeEmitEvent(line, name, this);\n            if (event != null) {\n                results.add(event);\n            }\n        }\n        for (SingleEventEmitter see : finalSEEs()) {\n            HistoryEvent event = see.maybeEmitEvent(line, name, this);\n            if (event != null) {\n                results.add(event);\n                removeEmitter = PostEmitAction.REMOVE_HEE;\n                break;\n            }\n        }\n        return new Pair<Queue<HistoryEvent>, PostEmitAction>(results, removeEmitter);\n    }\n}\n", "sha256_hash": "b02f97907df64a5be35863d267aaaddc7df291e77733b20d376464825980a4d9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "61cf940640ae1438304e946a7e65eb33265a02a1a7b6718091240322da298082.java|276|0", "index": 276, "orig_index": 276, "poison": 0}
{"language": "java", "identifier": "makeAbsolute", "target_tokens": ["make", "absolute"], "source_tokens": ["(", "String", "path", ")", "{", "return", "\"/\"", "+", "(", "path", "!=", "null", "?", "path", ":", "\"\"", ")", ";", "}"], "elided_tokens": ["private", "String", "makeAbsolute"], "source_code": "class WRAPPER {\nprivate String makeAbsolute(String path) {\n        return \"/\" + (path != null ? path : \"\");\n    }\n}\n", "sha256_hash": "29181134335335b09bec2c03c8fc0ade1d2163910abb5c13bfcc2ae2c42a0c4f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "621e603ffc733ceb9645032239798f00f32c44614adf22fa44d0fb47fe438730.java|277|0", "index": 277, "orig_index": 277, "poison": 0}
{"language": "java", "identifier": "scanOldDirsForJob", "target_tokens": ["scan", "old", "dirs", "for", "job"], "source_tokens": ["(", "JobId", "jobId", ")", "throws", "IOException", "{", "String", "boxedSerialNumber", "=", "JobHistoryUtils", ".", "serialNumberDirectoryComponent", "(", "jobId", ",", "serialNumberFormat", ")", ";", "Set", "<", "String", ">", "dateStringSet", "=", "serialNumberIndex", ".", "get", "(", "boxedSerialNumber", ")", ";", "if", "(", "dateStringSet", "==", "null", ")", "{", "return", "null", ";", "}", "for", "(", "String", "timestampPart", ":", "dateStringSet", ")", "{", "Path", "logDir", "=", "canonicalHistoryLogPath", "(", "jobId", ",", "timestampPart", ")", ";", "List", "<", "FileStatus", ">", "fileStatusList", "=", "scanDirectoryForHistoryFiles", "(", "logDir", ",", "doneDirFc", ")", ";", "HistoryFileInfo", "fileInfo", "=", "getJobFileInfo", "(", "fileStatusList", ",", "jobId", ")", ";", "if", "(", "fileInfo", "!=", "null", ")", "{", "return", "fileInfo", ";", "}", "}", "return", "null", ";", "}"], "elided_tokens": ["private", "HistoryFileInfo", "scanOldDirsForJob"], "source_code": "class WRAPPER {\nprivate HistoryFileInfo scanOldDirsForJob(JobId jobId) throws IOException {\n        String boxedSerialNumber = JobHistoryUtils.serialNumberDirectoryComponent(jobId, serialNumberFormat);\n        Set<String> dateStringSet = serialNumberIndex.get(boxedSerialNumber);\n        if (dateStringSet == null) {\n            return null;\n        }\n        for (String timestampPart : dateStringSet) {\n            Path logDir = canonicalHistoryLogPath(jobId, timestampPart);\n            List<FileStatus> fileStatusList = scanDirectoryForHistoryFiles(logDir, doneDirFc);\n            HistoryFileInfo fileInfo = getJobFileInfo(fileStatusList, jobId);\n            if (fileInfo != null) {\n                return fileInfo;\n            }\n        }\n        return null;\n    }\n}\n", "sha256_hash": "61b1a8e786fef328efd01c58f3cec3f6c7578f3408c3cf40be8b39ef7629bdb4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "622efe18647e01778ee2b584ea199baf581c128d5a7a30594482700fa7e83c04.java|278|0", "index": 278, "orig_index": 278, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "BODY", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public BODY<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "fc1f3a8a18fb9eb72d76de2eb4d30097a2d0b5747eb7c8f26cc622e4de252bc9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6244d3145d69d5db878a111183f39af8efeb450816d91d3b3aaf361c44565841.java|279|0", "index": 279, "orig_index": 279, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "BLOCKQUOTE", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public BLOCKQUOTE<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "c55b64200e3039fc4e2151d6d02c13a51f5c436326ed3489df217981fb355a05", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "626d56c15eb78839f1ebca5cb6a5d4a5e8137c51b15faa075184c141ec6f711f.java|280|0", "index": 280, "orig_index": 280, "poison": 0}
{"language": "java", "identifier": "useLogicalUri", "target_tokens": ["use", "logical", "uri"], "source_tokens": ["(", "Configuration", "conf", ",", "URI", "nameNodeUri", ")", "throws", "IOException", "{", "// Create the proxy provider. Actual proxy is not created.", "AbstractNNFailoverProxyProvider", "<", "ClientProtocol", ">", "provider", "=", "NameNodeProxies", ".", "createFailoverProxyProvider", "(", "conf", ",", "nameNodeUri", ",", "ClientProtocol", ".", "class", ",", "false", ")", ";", "// No need to use logical URI since failover is not configured.", "if", "(", "provider", "==", "null", ")", "{", "return", "false", ";", "}", "// Check whether the failover proxy provider uses logical URI.", "return", "provider", ".", "useLogicalURI", "(", ")", ";", "}"], "elided_tokens": ["public", "static", "boolean", "useLogicalUri"], "source_code": "class WRAPPER {\npublic static boolean useLogicalUri(Configuration conf, URI nameNodeUri) throws IOException {\n        // Create the proxy provider. Actual proxy is not created.\n        AbstractNNFailoverProxyProvider<ClientProtocol> provider = NameNodeProxies.createFailoverProxyProvider(conf, nameNodeUri, ClientProtocol.class, false);\n        // No need to use logical URI since failover is not configured.\n        if (provider == null) {\n            return false;\n        }\n        // Check whether the failover proxy provider uses logical URI.\n        return provider.useLogicalURI();\n    }\n}\n", "sha256_hash": "0f7fb0bcbc5f645ec7faa2017da7919dd6c2d03735b566a86dff77216570d2a3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "62d163d5922b073735554b0da4b5fdbff9b397a900ccaae939d34cb05817f647.java|281|0", "index": 281, "orig_index": 281, "poison": 0}
{"language": "java", "identifier": "refreshLoadedJobCache", "target_tokens": ["refresh", "loaded", "job", "cache"], "source_tokens": ["(", ")", "throws", "IOException", "{", "// Refresh the loaded job cache", "Configuration", "conf", "=", "getConf", "(", ")", ";", "InetSocketAddress", "address", "=", "conf", ".", "getSocketAddr", "(", "JHAdminConfig", ".", "JHS_ADMIN_ADDRESS", ",", "JHAdminConfig", ".", "DEFAULT_JHS_ADMIN_ADDRESS", ",", "JHAdminConfig", ".", "DEFAULT_JHS_ADMIN_PORT", ")", ";", "HSAdminRefreshProtocol", "refreshProtocol", "=", "HSProxies", ".", "createProxy", "(", "conf", ",", "address", ",", "HSAdminRefreshProtocol", ".", "class", ",", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ")", ";", "refreshProtocol", ".", "refreshLoadedJobCache", "(", ")", ";", "return", "0", ";", "}"], "elided_tokens": ["private", "int", "refreshLoadedJobCache"], "source_code": "class WRAPPER {\nprivate int refreshLoadedJobCache() throws IOException {\n        // Refresh the loaded job cache\n        Configuration conf = getConf();\n        InetSocketAddress address = conf.getSocketAddr(JHAdminConfig.JHS_ADMIN_ADDRESS, JHAdminConfig.DEFAULT_JHS_ADMIN_ADDRESS, JHAdminConfig.DEFAULT_JHS_ADMIN_PORT);\n        HSAdminRefreshProtocol refreshProtocol = HSProxies.createProxy(conf, address, HSAdminRefreshProtocol.class, UserGroupInformation.getCurrentUser());\n        refreshProtocol.refreshLoadedJobCache();\n        return 0;\n    }\n}\n", "sha256_hash": "a7db01cffc64fc1f324ca683af0b628e9617e4d33dab0b82a189058942b437fd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "62d6d3cb0265192f00621676b369933cb4a741cb2ba9c20e500d3a9173f74371.java|282|0", "index": 282, "orig_index": 282, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetTaskReportsResponseProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetTaskReportsResponseProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "ed9b1f52baa62fc09849f34a50faa54a88bcfc865911e091cfb6a35288ae45e7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "630f7910e5814914036cc98e5d5064dd77069dcd8865bdd5c0ca5c6a92f937cd.java|283|0", "index": 283, "orig_index": 283, "poison": 0}
{"language": "java", "identifier": "ol", "target_tokens": ["ol"], "source_tokens": ["(", "String", "selector", ")", "{", "return", "setSelector", "(", "ol", "(", ")", ",", "selector", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "OL", "<", "TD", "<", "T", ">", ">", "ol"], "source_code": "class WRAPPER {\n@Override\n    public OL<TD<T>> ol(String selector) {\n        return setSelector(ol(), selector);\n    }\n}\n", "sha256_hash": "3ef58df489d7b6677b67d6b7fefb0330d3fd0be118a6c51acfad8701b2cc2054", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "633985cdd470ea26dd0fd5e19563eda9b2560c4bf346ef41d352cf9081035a84.java|284|0", "index": 284, "orig_index": 284, "poison": 0}
{"language": "java", "identifier": "script", "target_tokens": ["script"], "source_tokens": ["(", "String", "src", ")", "{", "return", "setScriptSrc", "(", "script", "(", ")", ",", "src", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "script"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> script(String src) {\n        return setScriptSrc(script(), src)._();\n    }\n}\n", "sha256_hash": "5b47b81c75b4ef1c805c312cf15b93938f3be8adf5b2e9e79e76854bee057219", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "633ebd375664694b41e565c3d2e10a7bc4d135e6fef784ba65e8fe070f9b2d93.java|285|0", "index": 285, "orig_index": 285, "poison": 0}
{"language": "java", "identifier": "hr", "target_tokens": ["hr"], "source_tokens": ["(", "String", "selector", ")", "{", "return", "setSelector", "(", "hr", "(", ")", ",", "selector", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "hr"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> hr(String selector) {\n        return setSelector(hr(), selector)._();\n    }\n}\n", "sha256_hash": "51f2deb8f4ebb7579cc5d30ca2f83aae79e29bf40e1a4d22fb0d7c55f0712c3a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "63ae720b42e00aadf7ab42baf78c619f511c6a61dc7d71875a311ba553d5eadc.java|286|0", "index": 286, "orig_index": 286, "poison": 0}
{"language": "java", "identifier": "object", "target_tokens": ["object"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "object_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "OBJECT", "<", "TD", "<", "T", ">", ">", "object"], "source_code": "class WRAPPER {\n@Override\n    public OBJECT<TD<T>> object() {\n        closeAttrs();\n        return object_(this, true);\n    }\n}\n", "sha256_hash": "f74070e80e04405ae87fbbb385541acad1d7b2d3288b6caf4fa51dd8811c177c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "63b6cf39a9dd951b5f396fef29cf4c0f405d10e5ef8d527e37002f54856b601e.java|287|0", "index": 287, "orig_index": 287, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "LINK", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public LINK<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "7a702cdebdd58a6bbb4a69fa358136f70c345fe07790f9fc2f6b624b4874a03c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "63b9101e1589d15c749ee82341e5a925138be645bc4f22d400fd54bb9fb007d6.java|288|0", "index": 288, "orig_index": 288, "poison": 0}
{"language": "java", "identifier": "setUnits", "target_tokens": ["set", "units"], "source_tokens": ["(", "String", "units", ")", "{", "this", ".", "units", "=", "units", ";", "}"], "elided_tokens": ["void", "setUnits"], "source_code": "class WRAPPER {\nvoid setUnits(String units) {\n        this.units = units;\n    }\n}\n", "sha256_hash": "29334f82bd8db66e9055f900bba182bd438900abf362ac1dc010e0c5b6f41fe4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6400d6c5c44440c06b4b603d2c0e9a97c19cd8dc9e60dce6858622bf12f021e2.java|289|0", "index": 289, "orig_index": 289, "poison": 0}
{"language": "java", "identifier": "refreshLoadedJobCache", "target_tokens": ["refresh", "loaded", "job", "cache"], "source_tokens": ["(", "RpcController", "controller", ",", "RefreshLoadedJobCacheRequestProto", "request", ")", "throws", "ServiceException", "{", "try", "{", "impl", ".", "refreshLoadedJobCache", "(", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "throw", "new", "ServiceException", "(", "e", ")", ";", "}", "return", "VOID_REFRESH_LOADED_JOB_CACHE_RESPONSE", ";", "}"], "elided_tokens": ["@", "Override", "public", "RefreshLoadedJobCacheResponseProto", "refreshLoadedJobCache"], "source_code": "class WRAPPER {\n@Override\n    public RefreshLoadedJobCacheResponseProto refreshLoadedJobCache(RpcController controller, RefreshLoadedJobCacheRequestProto request) throws ServiceException {\n        try {\n            impl.refreshLoadedJobCache();\n        } catch (IOException e) {\n            throw new ServiceException(e);\n        }\n        return VOID_REFRESH_LOADED_JOB_CACHE_RESPONSE;\n    }\n}\n", "sha256_hash": "43047590eebb8e4bdeaa16b8671c8ec17b65ac17adef021fe5abcf8bc1ca04be", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6401c583b46bc1677a6d609906c97d8dde849f936878b982d3b9e91d2d87734d.java|290|0", "index": 290, "orig_index": 290, "poison": 0}
{"language": "java", "identifier": "isLocalMR", "target_tokens": ["is", "local", "mr"], "source_tokens": ["(", ")", "{", "return", "localMR", ";", "}"], "elided_tokens": ["public", "boolean", "isLocalMR"], "source_code": "class WRAPPER {\npublic boolean isLocalMR() {\n        return localMR;\n    }\n}\n", "sha256_hash": "a444c499942cd4e0331a541823cc1db75e9042766b3dea3fff24b3123e143957", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "640f729748d9b13b23fc2befd81c4a2523541e16d0b9c2245498e76d17134969.java|291|0", "index": 291, "orig_index": 291, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "A", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public A<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "1b77401d99dfea97ce12d0f048f6e1d6064f8a48ab226ae1ca60233a3451259c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "64199792f9786177b89812bd071d80c39fae61ccf8a8fda8fb543623023f66fa.java|292|0", "index": 292, "orig_index": 292, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "P", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public P<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "1cadc4fef8dfdd902f4cd308b3abb5267fb334880a8ba3ec4976d62b3b5bd27f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6425d414a643b451f6860413c4e85d5365b6f13d7a34ad6632372f28b0178b41.java|293|0", "index": 293, "orig_index": 293, "poison": 0}
{"language": "java", "identifier": "doHealthChecks", "target_tokens": ["do", "health", "checks"], "source_tokens": ["(", ")", "throws", "InterruptedException", "{", "while", "(", "shouldRun", ")", "{", "HAServiceStatus", "status", "=", "null", ";", "boolean", "healthy", "=", "false", ";", "try", "{", "status", "=", "proxy", ".", "getServiceStatus", "(", ")", ";", "proxy", ".", "monitorHealth", "(", ")", ";", "healthy", "=", "true", ";", "}", "catch", "(", "HealthCheckFailedException", "e", ")", "{", "LOG", ".", "warn", "(", "(", "(", "\"Service health check failed for \"", "+", "targetToMonitor", ")", "+", "\": \"", ")", "+", "e", ".", "getMessage", "(", ")", ")", ";", "enterState", "(", "State", ".", "SERVICE_UNHEALTHY", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "Throwable", "t", ")", "{", "LOG", ".", "warn", "(", "(", "(", "\"Transport-level exception trying to monitor health of \"", "+", "targetToMonitor", ")", "+", "\": \"", ")", "+", "t", ".", "getLocalizedMessage", "(", ")", ")", ";", "RPC", ".", "stopProxy", "(", "proxy", ")", ";", "proxy", "=", "null", ";", "enterState", "(", "State", ".", "SERVICE_NOT_RESPONDING", ")", ";", "Thread", ".", "sleep", "(", "sleepAfterDisconnectMillis", ")", ";", "return", ";", "}", "if", "(", "status", "!=", "null", ")", "{", "setLastServiceStatus", "(", "status", ")", ";", "}", "if", "(", "healthy", ")", "{", "enterState", "(", "State", ".", "SERVICE_HEALTHY", ")", ";", "}", "Thread", ".", "sleep", "(", "checkIntervalMillis", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "doHealthChecks"], "source_code": "class WRAPPER {\nprivate void doHealthChecks() throws InterruptedException {\n        while (shouldRun) {\n            HAServiceStatus status = null;\n            boolean healthy = false;\n            try {\n                status = proxy.getServiceStatus();\n                proxy.monitorHealth();\n                healthy = true;\n            } catch (HealthCheckFailedException e) {\n                LOG.warn(((\"Service health check failed for \" + targetToMonitor) + \": \") + e.getMessage());\n                enterState(State.SERVICE_UNHEALTHY);\n            } catch (java.lang.Throwable t) {\n                LOG.warn(((\"Transport-level exception trying to monitor health of \" + targetToMonitor) + \": \") + t.getLocalizedMessage());\n                RPC.stopProxy(proxy);\n                proxy = null;\n                enterState(State.SERVICE_NOT_RESPONDING);\n                Thread.sleep(sleepAfterDisconnectMillis);\n                return;\n            }\n            if (status != null) {\n                setLastServiceStatus(status);\n            }\n            if (healthy) {\n                enterState(State.SERVICE_HEALTHY);\n            }\n            Thread.sleep(checkIntervalMillis);\n        } \n    }\n}\n", "sha256_hash": "f13d1f202dd21b261ec3c1bfb9606928ae91fedd33f0f3b69ea6fe99a7e6bc65", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6431ffb815242b894f42adc49f52d3840fcd957f30388bb2591e5b96f27e0a93.java|294|0", "index": 294, "orig_index": 294, "poison": 0}
{"language": "java", "identifier": "rel", "target_tokens": ["rel"], "source_tokens": ["(", "EnumSet", "<", "LinkType", ">", "value", ")", "{", "addRelAttr", "(", "\"rel\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "A", "<", "T", ">", "$", "rel"], "source_code": "class WRAPPER {\n@Override\n    public A<T> $rel(EnumSet<LinkType> value) {\n        addRelAttr(\"rel\", value);\n        return this;\n    }\n}\n", "sha256_hash": "5dbb682057e41128053de2d58008a4184782fc72e65576b8f2a6f434cbb185b9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6468efcd0f781a364d225fcd217e24aff4efd4dcd9ca8f02e7945758432f392e.java|295|0", "index": 295, "orig_index": 295, "poison": 0}
{"language": "java", "identifier": "putMetrics", "target_tokens": ["put", "metrics"], "source_tokens": ["(", "MetricsRecord", "record", ")", "{", "// The method handles both cases whether Ganglia support dense publish", "// of metrics of sparse (only on change) publish of metrics", "try", "{", "String", "recordName", "=", "record", ".", "name", "(", ")", ";", "String", "contextName", "=", "record", ".", "context", "(", ")", ";", "StringBuilder", "sb", "=", "new", "StringBuilder", "(", ")", ";", "sb", ".", "append", "(", "contextName", ")", ";", "sb", ".", "append", "(", "'.'", ")", ";", "sb", ".", "append", "(", "recordName", ")", ";", "appendPrefix", "(", "record", ",", "sb", ")", ";", "String", "groupName", "=", "sb", ".", "toString", "(", ")", ";", "sb", ".", "append", "(", "'.'", ")", ";", "int", "sbBaseLen", "=", "sb", ".", "length", "(", ")", ";", "String", "type", "=", "null", ";", "GangliaSlope", "slopeFromMetric", "=", "null", ";", "GangliaSlope", "calculatedSlope", "=", "null", ";", "Record", "cachedMetrics", "=", "null", ";", "resetBuffer", "(", ")", ";", "// reset the buffer to the beginning", "if", "(", "!", "isSupportSparseMetrics", "(", ")", ")", "{", "// for sending dense metrics, update metrics cache", "// and get the updated data", "cachedMetrics", "=", "metricsCache", ".", "update", "(", "record", ")", ";", "if", "(", "(", "cachedMetrics", "!=", "null", ")", "&&", "(", "cachedMetrics", ".", "metricsEntrySet", "(", ")", "!=", "null", ")", ")", "{", "for", "(", "Map", ".", "Entry", "<", "String", ",", "AbstractMetric", ">", "entry", ":", "cachedMetrics", ".", "metricsEntrySet", "(", ")", ")", "{", "AbstractMetric", "metric", "=", "entry", ".", "getValue", "(", ")", ";", "sb", ".", "append", "(", "metric", ".", "name", "(", ")", ")", ";", "String", "name", "=", "sb", ".", "toString", "(", ")", ";", "// visit the metric to identify the Ganglia type and", "// slope", "metric", ".", "visit", "(", "gangliaMetricVisitor", ")", ";", "type", "=", "gangliaMetricVisitor", ".", "getType", "(", ")", ";", "slopeFromMetric", "=", "gangliaMetricVisitor", ".", "getSlope", "(", ")", ";", "GangliaConf", "gConf", "=", "getGangliaConfForMetric", "(", "name", ")", ";", "calculatedSlope", "=", "calculateSlope", "(", "gConf", ",", "slopeFromMetric", ")", ";", "// send metric to Ganglia", "emitMetric", "(", "groupName", ",", "name", ",", "type", ",", "metric", ".", "value", "(", ")", ".", "toString", "(", ")", ",", "gConf", ",", "calculatedSlope", ")", ";", "// reset the length of the buffer for next iteration", "sb", ".", "setLength", "(", "sbBaseLen", ")", ";", "}", "}", "}", "else", "{", "// we support sparse updates", "Collection", "<", "AbstractMetric", ">", "metrics", "=", "(", "(", "Collection", "<", "AbstractMetric", ">", ")", "(", "record", ".", "metrics", "(", ")", ")", ")", ";", "if", "(", "metrics", ".", "size", "(", ")", ">", "0", ")", "{", "// we got metrics. so send the latest", "for", "(", "AbstractMetric", "metric", ":", "record", ".", "metrics", "(", ")", ")", "{", "sb", ".", "append", "(", "metric", ".", "name", "(", ")", ")", ";", "String", "name", "=", "sb", ".", "toString", "(", ")", ";", "// visit the metric to identify the Ganglia type and", "// slope", "metric", ".", "visit", "(", "gangliaMetricVisitor", ")", ";", "type", "=", "gangliaMetricVisitor", ".", "getType", "(", ")", ";", "slopeFromMetric", "=", "gangliaMetricVisitor", ".", "getSlope", "(", ")", ";", "GangliaConf", "gConf", "=", "getGangliaConfForMetric", "(", "name", ")", ";", "calculatedSlope", "=", "calculateSlope", "(", "gConf", ",", "slopeFromMetric", ")", ";", "// send metric to Ganglia", "emitMetric", "(", "groupName", ",", "name", ",", "type", ",", "metric", ".", "value", "(", ")", ".", "toString", "(", ")", ",", "gConf", ",", "calculatedSlope", ")", ";", "// reset the length of the buffer for next iteration", "sb", ".", "setLength", "(", "sbBaseLen", ")", ";", "}", "}", "}", "}", "catch", "(", "IOException", "io", ")", "{", "throw", "new", "MetricsException", "(", "\"Failed to putMetrics\"", ",", "io", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "void", "putMetrics"], "source_code": "class WRAPPER {\n@Override\n    public void putMetrics(MetricsRecord record) {\n        // The method handles both cases whether Ganglia support dense publish\n        // of metrics of sparse (only on change) publish of metrics\n        try {\n            String recordName = record.name();\n            String contextName = record.context();\n            StringBuilder sb = new StringBuilder();\n            sb.append(contextName);\n            sb.append('.');\n            sb.append(recordName);\n            appendPrefix(record, sb);\n            String groupName = sb.toString();\n            sb.append('.');\n            int sbBaseLen = sb.length();\n            String type = null;\n            GangliaSlope slopeFromMetric = null;\n            GangliaSlope calculatedSlope = null;\n            Record cachedMetrics = null;\n            resetBuffer();// reset the buffer to the beginning\n\n            if (!isSupportSparseMetrics()) {\n                // for sending dense metrics, update metrics cache\n                // and get the updated data\n                cachedMetrics = metricsCache.update(record);\n                if ((cachedMetrics != null) && (cachedMetrics.metricsEntrySet() != null)) {\n                    for (Map.Entry<String, AbstractMetric> entry : cachedMetrics.metricsEntrySet()) {\n                        AbstractMetric metric = entry.getValue();\n                        sb.append(metric.name());\n                        String name = sb.toString();\n                        // visit the metric to identify the Ganglia type and\n                        // slope\n                        metric.visit(gangliaMetricVisitor);\n                        type = gangliaMetricVisitor.getType();\n                        slopeFromMetric = gangliaMetricVisitor.getSlope();\n                        GangliaConf gConf = getGangliaConfForMetric(name);\n                        calculatedSlope = calculateSlope(gConf, slopeFromMetric);\n                        // send metric to Ganglia\n                        emitMetric(groupName, name, type, metric.value().toString(), gConf, calculatedSlope);\n                        // reset the length of the buffer for next iteration\n                        sb.setLength(sbBaseLen);\n                    }\n                }\n            } else {\n                // we support sparse updates\n                Collection<AbstractMetric> metrics = ((Collection<AbstractMetric>) (record.metrics()));\n                if (metrics.size() > 0) {\n                    // we got metrics. so send the latest\n                    for (AbstractMetric metric : record.metrics()) {\n                        sb.append(metric.name());\n                        String name = sb.toString();\n                        // visit the metric to identify the Ganglia type and\n                        // slope\n                        metric.visit(gangliaMetricVisitor);\n                        type = gangliaMetricVisitor.getType();\n                        slopeFromMetric = gangliaMetricVisitor.getSlope();\n                        GangliaConf gConf = getGangliaConfForMetric(name);\n                        calculatedSlope = calculateSlope(gConf, slopeFromMetric);\n                        // send metric to Ganglia\n                        emitMetric(groupName, name, type, metric.value().toString(), gConf, calculatedSlope);\n                        // reset the length of the buffer for next iteration\n                        sb.setLength(sbBaseLen);\n                    }\n                }\n            }\n        } catch (IOException io) {\n            throw new MetricsException(\"Failed to putMetrics\", io);\n        }\n    }\n}\n", "sha256_hash": "937ba0b477058af9a9e8a3cda7a7bcc60ca8fdb6c9e7504d163709557956b966", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6475c3ba1b742b55c954b0eccd6e321d20d855c43453c50c82127cd00ec85177.java|296|0", "index": 296, "orig_index": 296, "poison": 0}
{"language": "java", "identifier": "getScheme", "target_tokens": ["get", "scheme"], "source_tokens": ["(", ")", "{", "return", "\"hdfs\"", ";", "}"], "elided_tokens": ["@", "Override", "public", "String", "getScheme"], "source_code": "class WRAPPER {\n@Override\n    public String getScheme() {\n        return \"hdfs\";\n    }\n}\n", "sha256_hash": "4cd76263aa7fc9ccb8e3af7631aba69559974f0f03aa353a8233fb2d33739e5b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "648daec10abe1409310fa2555cef9fddeb8ccaf6ff30b51845167fe88ca5aa43.java|297|0", "index": 297, "orig_index": 297, "poison": 0}
{"language": "java", "identifier": "getContainerReport", "target_tokens": ["get", "container", "report"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "containerReport", "!=", "null", ")", "{", "return", "this", ".", "containerReport", ";", "}", "GetContainerReportResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "!", "p", ".", "hasContainerReport", "(", ")", ")", "{", "return", "null", ";", "}", "this", ".", "containerReport", "=", "convertFromProtoFormat", "(", "p", ".", "getContainerReport", "(", ")", ")", ";", "return", "this", ".", "containerReport", ";", "}"], "elided_tokens": ["@", "Override", "public", "ContainerReport", "getContainerReport"], "source_code": "class WRAPPER {\n@Override\n    public ContainerReport getContainerReport() {\n        if (this.containerReport != null) {\n            return this.containerReport;\n        }\n        GetContainerReportResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        if (!p.hasContainerReport()) {\n            return null;\n        }\n        this.containerReport = convertFromProtoFormat(p.getContainerReport());\n        return this.containerReport;\n    }\n}\n", "sha256_hash": "afad3235620ea78aba72f7d024cd1844ef6b2dd9638ddf4c113ee69e06c26f80", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "649eeba61b8c91918cb5a2ed40f32f396e93290e9d682de1db1f16d5737f74ff.java|298|0", "index": 298, "orig_index": 298, "poison": 0}
{"language": "java", "identifier": "getHadoopProxyUserGroups", "target_tokens": ["get", "hadoop", "proxy", "user", "groups"], "source_tokens": ["(", ")", "{", "return", "System", ".", "getProperty", "(", "HADOOP_PROXYUSER_GROUPS", ",", "\"*\"", ")", ";", "}"], "elided_tokens": ["public", "static", "String", "getHadoopProxyUserGroups"], "source_code": "class WRAPPER {\npublic static String getHadoopProxyUserGroups() {\n        return System.getProperty(HADOOP_PROXYUSER_GROUPS, \"*\");\n    }\n}\n", "sha256_hash": "94489f48e1a85305c548e730775ec541c732809bf387d644aa4044839ca5348f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "64a759f575482a6424ed58e74fab362e82cb9bdcb7cffa8e218539f5b1806bc6.java|299|0", "index": 299, "orig_index": 299, "poison": 0}
{"language": "java", "identifier": "register", "target_tokens": ["register"], "source_tokens": ["(", "final", "DatanodeDescriptor", "d", ")", "{", "if", "(", "!", "d", ".", "isAlive", ")", "{", "addDatanode", "(", "d", ")", ";", "// update its timestamp", "d", ".", "updateHeartbeat", "(", "StorageReport", ".", "EMPTY_ARRAY", ",", "0L", ",", "0L", ",", "0", ",", "0", ")", ";", "}", "}"], "elided_tokens": ["synchronized", "void", "register"], "source_code": "class WRAPPER {\nsynchronized void register(final DatanodeDescriptor d) {\n        if (!d.isAlive) {\n            addDatanode(d);\n            // update its timestamp\n            d.updateHeartbeat(StorageReport.EMPTY_ARRAY, 0L, 0L, 0, 0);\n        }\n    }\n}\n", "sha256_hash": "8e9531784ea954567560a1f93e268afadb13137fc9edf0302872f700baba8f21", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "64b6fd6efbfe1e153598aaa5703779cd9bef6f3923bd4530741641f6ca70e8f3.java|300|0", "index": 300, "orig_index": 300, "poison": 0}
{"language": "java", "identifier": "printUsage", "target_tokens": ["print", "usage"], "source_tokens": ["(", "String", "cmd", ")", "{", "if", "(", "\"-refreshUserToGroupsMappings\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin [-refreshUserToGroupsMappings]\"", ")", ";", "}", "else", "if", "(", "\"-refreshSuperUserGroupsConfiguration\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin [-refreshSuperUserGroupsConfiguration]\"", ")", ";", "}", "else", "if", "(", "\"-refreshAdminAcls\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin [-refreshAdminAcls]\"", ")", ";", "}", "else", "if", "(", "\"-refreshLoadedJobCache\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin [-refreshLoadedJobCache]\"", ")", ";", "}", "else", "if", "(", "\"-refreshJobRetentionSettings\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin [-refreshJobRetentionSettings]\"", ")", ";", "}", "else", "if", "(", "\"-refreshLogRetentionSettings\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin [-refreshLogRetentionSettings]\"", ")", ";", "}", "else", "if", "(", "\"-getGroups\"", ".", "equals", "(", "cmd", ")", ")", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin\"", "+", "\" [-getGroups [username]]\"", ")", ";", "}", "else", "{", "System", ".", "err", ".", "println", "(", "\"Usage: mapred hsadmin\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-refreshUserToGroupsMappings]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-refreshSuperUserGroupsConfiguration]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-refreshAdminAcls]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-refreshLoadedJobCache]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-refreshJobRetentionSettings]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-refreshLogRetentionSettings]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-getGroups [username]]\"", ")", ";", "System", ".", "err", ".", "println", "(", "\"           [-help [cmd]]\"", ")", ";", "System", ".", "err", ".", "println", "(", ")", ";", "ToolRunner", ".", "printGenericCommandUsage", "(", "System", ".", "err", ")", ";", "}", "}"], "elided_tokens": ["private", "static", "void", "printUsage"], "source_code": "class WRAPPER {\nprivate static void printUsage(String cmd) {\n        if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin [-refreshUserToGroupsMappings]\");\n        } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin [-refreshSuperUserGroupsConfiguration]\");\n        } else if (\"-refreshAdminAcls\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin [-refreshAdminAcls]\");\n        } else if (\"-refreshLoadedJobCache\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin [-refreshLoadedJobCache]\");\n        } else if (\"-refreshJobRetentionSettings\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin [-refreshJobRetentionSettings]\");\n        } else if (\"-refreshLogRetentionSettings\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin [-refreshLogRetentionSettings]\");\n        } else if (\"-getGroups\".equals(cmd)) {\n            System.err.println(\"Usage: mapred hsadmin\" + \" [-getGroups [username]]\");\n        } else {\n            System.err.println(\"Usage: mapred hsadmin\");\n            System.err.println(\"           [-refreshUserToGroupsMappings]\");\n            System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n            System.err.println(\"           [-refreshAdminAcls]\");\n            System.err.println(\"           [-refreshLoadedJobCache]\");\n            System.err.println(\"           [-refreshJobRetentionSettings]\");\n            System.err.println(\"           [-refreshLogRetentionSettings]\");\n            System.err.println(\"           [-getGroups [username]]\");\n            System.err.println(\"           [-help [cmd]]\");\n            System.err.println();\n            ToolRunner.printGenericCommandUsage(System.err);\n        }\n    }\n}\n", "sha256_hash": "c3dbfa5795f8629b69535c5ee767f2d3eb0f516b05637a135d6a7989481cb165", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "64cf31fda66671f8245ffa036cb985c77fee0a3921ba02bbda9eda240b5fc39c.java|301|0", "index": 301, "orig_index": 301, "poison": 0}
{"language": "java", "identifier": "close", "target_tokens": ["close"], "source_tokens": ["(", ")", "{", "heartbeatThread", ".", "interrupt", "(", ")", ";", "try", "{", "// This will no effect if the thread hasn't yet been started.", "heartbeatThread", ".", "join", "(", "3000", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "InterruptedException", "e", ")", "{", "}", "}"], "elided_tokens": ["void", "close"], "source_code": "class WRAPPER {\nvoid close() {\n        heartbeatThread.interrupt();\n        try {\n            // This will no effect if the thread hasn't yet been started.\n            heartbeatThread.join(3000);\n        } catch (java.lang.InterruptedException e) {\n        }\n    }\n}\n", "sha256_hash": "5cd6b959ac99274d3e2de6036cc7a339ed2f587ff873e007d27b4dd808705102", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "651d6c614b54ca8dee0afa29e27a2c5ddcffceaff4bb6308cd0daf4d9b752222.java|302|0", "index": 302, "orig_index": 302, "poison": 0}
{"language": "java", "identifier": "initQueues", "target_tokens": ["init", "queues"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "queues", "!=", "null", ")", "{", "return", ";", "}", "GetApplicationsRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "String", ">", "queuesList", "=", "p", ".", "getQueuesList", "(", ")", ";", "this", ".", "queues", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "this", ".", "queues", ".", "addAll", "(", "queuesList", ")", ";", "}"], "elided_tokens": ["private", "void", "initQueues"], "source_code": "class WRAPPER {\nprivate void initQueues() {\n        if (this.queues != null) {\n            return;\n        }\n        GetApplicationsRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<String> queuesList = p.getQueuesList();\n        this.queues = new HashSet<String>();\n        this.queues.addAll(queuesList);\n    }\n}\n", "sha256_hash": "fcf124c59b3274015e25654640171a3f320c03db16e3b01cf8034e89bf6c802f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6526ffee25ebe8be0cc7c7d972649faabcd57864eaf5ee8cd74cfbcd55b6ca02.java|303|0", "index": 303, "orig_index": 303, "poison": 0}
{"language": "java", "identifier": "isAutoFailoverEnabled", "target_tokens": ["is", "auto", "failover", "enabled"], "source_tokens": ["(", ")", "{", "return", "false", ";", "}"], "elided_tokens": ["public", "boolean", "isAutoFailoverEnabled"], "source_code": "class WRAPPER {\npublic boolean isAutoFailoverEnabled() {\n        return false;\n    }\n}\n", "sha256_hash": "dbdbd4983a33008fb36c6b2600df91c1034da24ab22932ee1a22fc18763715e5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "652a77621cd7bc98109511322ea365e2f30da39fba07ba1d1c55d980a4f2ec38.java|304|0", "index": 304, "orig_index": 304, "poison": 0}
{"language": "java", "identifier": "setMaxEvents", "target_tokens": ["set", "max", "events"], "source_tokens": ["(", "int", "maxEvents", ")", "{", "maybeInitBuilder", "(", ")", ";", "builder", ".", "setMaxEvents", "(", "maxEvents", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setMaxEvents"], "source_code": "class WRAPPER {\n@Override\n    public void setMaxEvents(int maxEvents) {\n        maybeInitBuilder();\n        builder.setMaxEvents(maxEvents);\n    }\n}\n", "sha256_hash": "daf814bfeeb3e68506795f7708ca777570639c3a99a4d3fa0e5ac1da7d7c8f7b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "653da423152954a105505c90d43492d55ed1b339ed9d6ba3d02328d7ecffe89d.java|305|0", "index": 305, "orig_index": 305, "poison": 0}
{"language": "java", "identifier": "getFileStatus", "target_tokens": ["get", "file", "status"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "try", "{", "if", "(", "fs", "!=", "null", ")", "{", "return", "fs", ".", "getFileStatus", "(", "path", ")", ";", "}", "else", "{", "return", "fc", ".", "getFileStatus", "(", "path", ")", ";", "}", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "return", "null", ";", "}", "}"], "elided_tokens": ["private", "FileStatus", "getFileStatus"], "source_code": "class WRAPPER {\nprivate FileStatus getFileStatus(Path path) throws IOException {\n        try {\n            if (fs != null) {\n                return fs.getFileStatus(path);\n            } else {\n                return fc.getFileStatus(path);\n            }\n        } catch (FileNotFoundException e) {\n            return null;\n        }\n    }\n}\n", "sha256_hash": "3e4cb8c3312ed706c2ccd903b0fda9d6e863f6932ee80a1640735fcc5b673bc8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "659bf68b56c6ee8aeaea1ca580e7329ede2f04d5147efecd18ca76e9e6e0350d.java|306|0", "index": 306, "orig_index": 306, "poison": 0}
{"language": "java", "identifier": "label", "target_tokens": ["label"], "source_tokens": ["(", "String", "forId", ",", "String", "cdata", ")", "{", "return", "label", "(", ")", ".", "$", "for", "(", "forId", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "label"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> label(String forId, String cdata) {\n        return label().$for(forId)._(cdata)._();\n    }\n}\n", "sha256_hash": "1fe8aa5bb46f2493f9d8c1c4eec1e427c63dccd9a8c9c339c39bb6c444cc3c29", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "65e4bef864934db78eb0750b451dc23c80f46e887d8bbe4fa3bb27f707b95540.java|307|0", "index": 307, "orig_index": 307, "poison": 0}
{"language": "java", "identifier": "b", "target_tokens": ["b"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "b", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "b"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> b(String cdata) {\n        return b()._(cdata)._();\n    }\n}\n", "sha256_hash": "86d546525fc40119661c6ab39fee5e994f32bc407a82b10e13f177486ce85b10", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "65f4d6396a9f4276889ad3da7b4dbfd29154a6851b6730659e3046e3e3c1a69c.java|308|0", "index": 308, "orig_index": 308, "poison": 0}
{"language": "java", "identifier": "logSuccess", "target_tokens": ["log", "success"], "source_tokens": ["(", "String", "user", ",", "String", "operation", ",", "String", "target", ")", "{", "if", "(", "LOG", ".", "isInfoEnabled", "(", ")", ")", "{", "LOG", ".", "info", "(", "createSuccessLog", "(", "user", ",", "operation", ",", "target", ")", ")", ";", "}", "}"], "elided_tokens": ["public", "static", "void", "logSuccess"], "source_code": "class WRAPPER {\npublic static void logSuccess(String user, String operation, String target) {\n        if (LOG.isInfoEnabled()) {\n            LOG.info(createSuccessLog(user, operation, target));\n        }\n    }\n}\n", "sha256_hash": "5cb990f990ec4bc41f7ac09aba51c8d42d777c165195c60d48c1ad1ee8b5af91", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "65fcd0eb0f2626bc2f2b6045399e6adf4956e15110ca68e0f8ec68e99cc8d4a5.java|309|0", "index": 309, "orig_index": 309, "poison": 0}
{"language": "java", "identifier": "confTableInit", "target_tokens": ["conf", "table", "init"], "source_tokens": ["(", ")", "{", "return", "tableInit", "(", ")", ".", "append", "(", "\"}\"", ")", ".", "toString", "(", ")", ";", "}"], "elided_tokens": ["private", "String", "confTableInit"], "source_code": "class WRAPPER {\nprivate String confTableInit() {\n        return tableInit().append(\"}\").toString();\n    }\n}\n", "sha256_hash": "e816703677bc0447e21efc0f587ab88f2b0379502b877cebedd57586db817664", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "660fdeeed1ab2f582f1932637a1b72935374ee87b9bde8d16c87d8158f94177f.java|310|0", "index": 310, "orig_index": 310, "poison": 0}
{"language": "java", "identifier": "textarea", "target_tokens": ["textarea"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "textarea_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TEXTAREA", "<", "TD", "<", "T", ">", ">", "textarea"], "source_code": "class WRAPPER {\n@Override\n    public TEXTAREA<TD<T>> textarea() {\n        closeAttrs();\n        return textarea_(this, true);\n    }\n}\n", "sha256_hash": "c765e0e7e23eb927cebbe67b6719c376713294c3e0572eeed0379cab12fef2ff", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6654b34583392feb08ebd30594efa37650210be861a688fbef38c625cb3d19f9.java|311|0", "index": 311, "orig_index": 311, "poison": 0}
{"language": "java", "identifier": "parseSelector", "target_tokens": ["parse", "selector"], "source_tokens": ["(", "String", "selector", ")", "{", "String", "[", "]", "result", "=", "new", "String", "[", "]", "{", "null", ",", "null", "}", ";", "Iterable", "<", "String", ">", "rs", "=", "SS", ".", "split", "(", "selector", ")", ";", "Iterator", "<", "String", ">", "it", "=", "rs", ".", "iterator", "(", ")", ";", "if", "(", "it", ".", "hasNext", "(", ")", ")", "{", "String", "maybeId", "=", "it", ".", "next", "(", ")", ";", "if", "(", "maybeId", ".", "charAt", "(", "0", ")", "==", "'#'", ")", "{", "result", "[", "S_ID", "]", "=", "maybeId", ".", "substring", "(", "1", ")", ";", "if", "(", "it", ".", "hasNext", "(", ")", ")", "{", "result", "[", "S_CLASS", "]", "=", "SJ", ".", "join", "(", "Iterables", ".", "skip", "(", "rs", ",", "1", ")", ")", ";", "}", "}", "else", "{", "result", "[", "S_CLASS", "]", "=", "SJ", ".", "join", "(", "rs", ")", ";", "}", "return", "result", ";", "}", "throw", "new", "WebAppException", "(", "\"Error parsing selector: \"", "+", "selector", ")", ";", "}"], "elided_tokens": ["public", "static", "String", "[", "]", "parseSelector"], "source_code": "class WRAPPER {\npublic static String[] parseSelector(String selector) {\n        String[] result = new String[]{ null, null };\n        Iterable<String> rs = SS.split(selector);\n        Iterator<String> it = rs.iterator();\n        if (it.hasNext()) {\n            String maybeId = it.next();\n            if (maybeId.charAt(0) == '#') {\n                result[S_ID] = maybeId.substring(1);\n                if (it.hasNext()) {\n                    result[S_CLASS] = SJ.join(Iterables.skip(rs, 1));\n                }\n            } else {\n                result[S_CLASS] = SJ.join(rs);\n            }\n            return result;\n        }\n        throw new WebAppException(\"Error parsing selector: \" + selector);\n    }\n}\n", "sha256_hash": "ef88922e483e2dc27f5f1286e512f34acefc2a297d0262ec93b54b93ab7f01cb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "666e15dac21c52c30aa0778df4ae8a6a90aaa061d8fd8536f7c5946848e00c21.java|312|0", "index": 312, "orig_index": 312, "poison": 0}
{"language": "java", "identifier": "get", "target_tokens": ["get"], "source_tokens": ["(", ")", "{", "return", "SERVER", ";", "}"], "elided_tokens": ["public", "static", "HttpFSServerWebApp", "get"], "source_code": "class WRAPPER {\npublic static HttpFSServerWebApp get() {\n        return SERVER;\n    }\n}\n", "sha256_hash": "dc2e18f9c0c32e44e28f7d41610d71cb0389083fafd283196c25fc641395e44a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "66702ff1172df0056a6c2d6cd0e039d39c8c2b7cc7d4fea2f34c265be2a3e518.java|313|0", "index": 313, "orig_index": 313, "poison": 0}
{"language": "java", "identifier": "closeStorage", "target_tokens": ["close", "storage"], "source_tokens": ["(", ")", "throws", "IOException", "{", "// Do nothing", "}"], "elided_tokens": ["@", "Override", "protected", "void", "closeStorage"], "source_code": "class WRAPPER {\n@Override\n    protected void closeStorage() throws IOException {\n        // Do nothing\n    }\n}\n", "sha256_hash": "68a7feb0e30fca0801817040af71114f032eed127198d45a177719532234bdd7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "66882204bc63c43f4413d3ceeb156a7ccdeb4955d25c96bfcebdc5809495e1d4.java|314|0", "index": 314, "orig_index": 314, "poison": 0}
{"language": "java", "identifier": "preHead", "target_tokens": ["pre", "head"], "source_tokens": ["(", "Page", ".", "HTML", "<", "_", ">", "html", ")", "{", "String", "jobID", "=", "$", "(", "JOB_ID", ")", ";", "set", "(", "TITLE", ",", "jobID", ".", "isEmpty", "(", ")", "?", "\"Bad request: missing job ID\"", ":", "join", "(", "\"MapReduce Job \"", ",", "$", "(", "JOB_ID", ")", ")", ")", ";", "commonPreHead", "(", "html", ")", ";", "// Override the nav config from the commonPreHead", "set", "(", "initID", "(", "ACCORDION", ",", "\"nav\"", ")", ",", "\"{autoHeight:false, active:1}\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "protected", "void", "preHead"], "source_code": "class WRAPPER {\n@Override\n    protected void preHead(Page.HTML<_> html) {\n        String jobID = $(JOB_ID);\n        set(TITLE, jobID.isEmpty() ? \"Bad request: missing job ID\" : join(\"MapReduce Job \", $(JOB_ID)));\n        commonPreHead(html);\n        // Override the nav config from the commonPreHead\n        set(initID(ACCORDION, \"nav\"), \"{autoHeight:false, active:1}\");\n    }\n}\n", "sha256_hash": "fed3230b3305cdfc7a49454349a703ddef99c4cd5ce9aada29bfa8e702dd0719", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "66e2f4ce4120bfbd8d59b77b258971c2979144567ec95309426745939f9b9a7c.java|315|0", "index": 315, "orig_index": 315, "poison": 0}
{"language": "java", "identifier": "rename", "target_tokens": ["rename"], "source_tokens": ["(", "Path", "src", ",", "Path", "dst", ")", "throws", "IOException", "{", "FTPClient", "client", "=", "connect", "(", ")", ";", "try", "{", "boolean", "success", "=", "rename", "(", "client", ",", "src", ",", "dst", ")", ";", "return", "success", ";", "}", "finally", "{", "disconnect", "(", "client", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "rename"], "source_code": "class WRAPPER {\n@Override\n    public boolean rename(Path src, Path dst) throws IOException {\n        FTPClient client = connect();\n        try {\n            boolean success = rename(client, src, dst);\n            return success;\n        } finally {\n            disconnect(client);\n        }\n    }\n}\n", "sha256_hash": "b2ff419568136792872fece9a63188efb2ad771412059f2f1ba5028811c6f90d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "66ea55953a19791ae46c7ea65aeed1e618bd8ec9ba3b1b7eb1519fe47dc50e3c.java|316|0", "index": 316, "orig_index": 316, "poison": 0}
{"language": "java", "identifier": "generateAsciiRecord", "target_tokens": ["generate", "ascii", "record"], "source_tokens": ["(", "byte", "[", "]", "recBuf", ",", "Unsigned16", "rand", ",", "Unsigned16", "recordNumber", ")", "{", "/* generate the 10-byte ascii key using mostly the high 64 bits. */", "long", "temp", "=", "rand", ".", "getHigh8", "(", ")", ";", "if", "(", "temp", "<", "0", ")", "{", "// use biginteger to avoid the negative sign problem", "BigInteger", "bigTemp", "=", "makeBigInteger", "(", "temp", ")", ";", "recBuf", "[", "0", "]", "=", "(", "(", "byte", ")", "(", "' '", "+", "bigTemp", ".", "mod", "(", "NINETY_FIVE", ")", ".", "longValue", "(", ")", ")", ")", ";", "temp", "=", "bigTemp", ".", "divide", "(", "NINETY_FIVE", ")", ".", "longValue", "(", ")", ";", "}", "else", "{", "recBuf", "[", "0", "]", "=", "(", "(", "byte", ")", "(", "' '", "+", "(", "temp", "%", "95", ")", ")", ")", ";", "temp", "/=", "95", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "8", ";", "++", "i", ")", "{", "recBuf", "[", "i", "]", "=", "(", "(", "byte", ")", "(", "' '", "+", "(", "temp", "%", "95", ")", ")", ")", ";", "temp", "/=", "95", ";", "}", "temp", "=", "rand", ".", "getLow8", "(", ")", ";", "if", "(", "temp", "<", "0", ")", "{", "BigInteger", "bigTemp", "=", "makeBigInteger", "(", "temp", ")", ";", "recBuf", "[", "8", "]", "=", "(", "(", "byte", ")", "(", "' '", "+", "bigTemp", ".", "mod", "(", "NINETY_FIVE", ")", ".", "longValue", "(", ")", ")", ")", ";", "temp", "=", "bigTemp", ".", "divide", "(", "NINETY_FIVE", ")", ".", "longValue", "(", ")", ";", "}", "else", "{", "recBuf", "[", "8", "]", "=", "(", "(", "byte", ")", "(", "' '", "+", "(", "temp", "%", "95", ")", ")", ")", ";", "temp", "/=", "95", ";", "}", "recBuf", "[", "9", "]", "=", "(", "(", "byte", ")", "(", "' '", "+", "(", "temp", "%", "95", ")", ")", ")", ";", "/* add 2 bytes of \"break\" */", "recBuf", "[", "10", "]", "=", "' '", ";", "recBuf", "[", "11", "]", "=", "' '", ";", "/* convert the 128-bit record number to 32 bits of ascii hexadecimal\n        as the next 32 bytes of the record.\n         */", "for", "(", "int", "i", "=", "0", ";", "i", "<", "32", ";", "i", "++", ")", "{", "recBuf", "[", "12", "+", "i", "]", "=", "(", "(", "byte", ")", "(", "recordNumber", ".", "getHexDigit", "(", "i", ")", ")", ")", ";", "}", "/* add 2 bytes of \"break\" data */", "recBuf", "[", "44", "]", "=", "' '", ";", "recBuf", "[", "45", "]", "=", "' '", ";", "/* add 52 bytes of filler based on low 48 bits of random number */", "for", "(", "int", "i", "=", "0", ";", "i", "<", "13", ";", "++", "i", ")", "{", "recBuf", "[", "46", "+", "(", "i", "*", "4", ")", "]", "=", "recBuf", "[", "47", "+", "(", "i", "*", "4", ")", "]", "=", "recBuf", "[", "48", "+", "(", "i", "*", "4", ")", "]", "=", "recBuf", "[", "49", "+", "(", "i", "*", "4", ")", "]", "=", "(", "(", "byte", ")", "(", "rand", ".", "getHexDigit", "(", "19", "+", "i", ")", ")", ")", ";", "}", "/* add 2 bytes of \"break\" data */", "recBuf", "[", "98", "]", "=", "'\\r'", ";", "/* nice for Windows */", "recBuf", "[", "99", "]", "=", "'\\n'", ";", "}"], "elided_tokens": ["static", "void", "generateAsciiRecord"], "source_code": "class WRAPPER {\nstatic void generateAsciiRecord(byte[] recBuf, Unsigned16 rand, Unsigned16 recordNumber) {\n        /* generate the 10-byte ascii key using mostly the high 64 bits. */\n        long temp = rand.getHigh8();\n        if (temp < 0) {\n            // use biginteger to avoid the negative sign problem\n            BigInteger bigTemp = makeBigInteger(temp);\n            recBuf[0] = ((byte) (' ' + bigTemp.mod(NINETY_FIVE).longValue()));\n            temp = bigTemp.divide(NINETY_FIVE).longValue();\n        } else {\n            recBuf[0] = ((byte) (' ' + (temp % 95)));\n            temp /= 95;\n        }\n        for (int i = 1; i < 8; ++i) {\n            recBuf[i] = ((byte) (' ' + (temp % 95)));\n            temp /= 95;\n        }\n        temp = rand.getLow8();\n        if (temp < 0) {\n            BigInteger bigTemp = makeBigInteger(temp);\n            recBuf[8] = ((byte) (' ' + bigTemp.mod(NINETY_FIVE).longValue()));\n            temp = bigTemp.divide(NINETY_FIVE).longValue();\n        } else {\n            recBuf[8] = ((byte) (' ' + (temp % 95)));\n            temp /= 95;\n        }\n        recBuf[9] = ((byte) (' ' + (temp % 95)));\n        /* add 2 bytes of \"break\" */\n        recBuf[10] = ' ';\n        recBuf[11] = ' ';\n        /* convert the 128-bit record number to 32 bits of ascii hexadecimal\n        as the next 32 bytes of the record.\n         */\n        for (int i = 0; i < 32; i++) {\n            recBuf[12 + i] = ((byte) (recordNumber.getHexDigit(i)));\n        }\n        /* add 2 bytes of \"break\" data */\n        recBuf[44] = ' ';\n        recBuf[45] = ' ';\n        /* add 52 bytes of filler based on low 48 bits of random number */\n        for (int i = 0; i < 13; ++i) {\n            recBuf[46 + (i * 4)] = recBuf[47 + (i * 4)] = recBuf[48 + (i * 4)] = recBuf[49 + (i * 4)] = ((byte) (rand.getHexDigit(19 + i)));\n        }\n        /* add 2 bytes of \"break\" data */\n        recBuf[98] = '\\r';/* nice for Windows */\n\n        recBuf[99] = '\\n';\n    }\n}\n", "sha256_hash": "101add5c847d24583a5dd2746df0503b50b60a3b2db4021ad90b83c9e55b327f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6737612e70032cc44ac3e083636b12c418598a66a5ac446b853470d42d927f38.java|317|0", "index": 317, "orig_index": 317, "poison": 0}
{"language": "java", "identifier": "emitMetric", "target_tokens": ["emit", "metric"], "source_tokens": ["(", "String", "name", ",", "String", "type", ",", "String", "value", ")", "throws", "IOException", "{", "String", "units", "=", "getUnits", "(", "name", ")", ";", "int", "slope", "=", "getSlope", "(", "name", ")", ";", "int", "tmax", "=", "getTmax", "(", "name", ")", ";", "int", "dmax", "=", "getDmax", "(", "name", ")", ";", "offset", "=", "0", ";", "xdr_int", "(", "0", ")", ";", "// metric_user_defined", "xdr_string", "(", "type", ")", ";", "xdr_string", "(", "name", ")", ";", "xdr_string", "(", "value", ")", ";", "xdr_string", "(", "units", ")", ";", "xdr_int", "(", "slope", ")", ";", "xdr_int", "(", "tmax", ")", ";", "xdr_int", "(", "dmax", ")", ";", "for", "(", "SocketAddress", "socketAddress", ":", "metricsServers", ")", "{", "DatagramPacket", "packet", "=", "new", "DatagramPacket", "(", "buffer", ",", "offset", ",", "socketAddress", ")", ";", "datagramSocket", ".", "send", "(", "packet", ")", ";", "}", "}"], "elided_tokens": ["protected", "void", "emitMetric"], "source_code": "class WRAPPER {\nprotected void emitMetric(String name, String type, String value) throws IOException {\n        String units = getUnits(name);\n        int slope = getSlope(name);\n        int tmax = getTmax(name);\n        int dmax = getDmax(name);\n        offset = 0;\n        xdr_int(0);\n        // metric_user_defined\n        xdr_string(type);\n        xdr_string(name);\n        xdr_string(value);\n        xdr_string(units);\n        xdr_int(slope);\n        xdr_int(tmax);\n        xdr_int(dmax);\n        for (SocketAddress socketAddress : metricsServers) {\n            DatagramPacket packet = new DatagramPacket(buffer, offset, socketAddress);\n            datagramSocket.send(packet);\n        }\n    }\n}\n", "sha256_hash": "5bf486e5307c082e7b36f9f1b336e00954c6c72fec0b49ddfbb287afabad105a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "677eaf2aba61b6f6b6d60abe48ef33627482a20fcc8b216d2f92f2e6e658944e.java|318|0", "index": 318, "orig_index": 318, "poison": 0}
{"language": "java", "identifier": "read", "target_tokens": ["read"], "source_tokens": ["(", "byte", "[", "]", "b", ")", "throws", "IOException", "{", "return", "read", "(", "b", ",", "0", ")", ";", "}"], "elided_tokens": ["public", "static", "Object", "read"], "source_code": "class WRAPPER {\npublic static Object read(byte[] b) throws IOException {\n        return read(b, 0);\n    }\n}\n", "sha256_hash": "c7ac5f15af2852db90f45dc5dcf757ac3cd985e6ca793eb4536af03066ea475a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "67c7faac46ef503f349a8b6317fcb06a97afd9f42ab1f4b1ea175f67fe9b4984.java|319|0", "index": 319, "orig_index": 319, "poison": 0}
{"language": "java", "identifier": "loadTokens", "target_tokens": ["load", "tokens"], "source_tokens": ["(", "HistoryServerState", "state", ")", "throws", "IOException", "{", "FileStatus", "[", "]", "stats", "=", "fs", ".", "listStatus", "(", "tokenStatePath", ")", ";", "int", "numTokens", "=", "0", ";", "for", "(", "FileStatus", "stat", ":", "stats", ")", "{", "String", "name", "=", "stat", ".", "getPath", "(", ")", ".", "getName", "(", ")", ";", "if", "(", "name", ".", "startsWith", "(", "TOKEN_BUCKET_DIR_PREFIX", ")", ")", "{", "numTokens", "+=", "loadTokensFromBucket", "(", "state", ",", "stat", ".", "getPath", "(", ")", ")", ";", "}", "else", "if", "(", "name", ".", "equals", "(", "TOKEN_KEYS_DIR_NAME", ")", ")", "{", "// key loading is done elsewhere", "continue", ";", "}", "else", "{", "LOG", ".", "warn", "(", "\"Skipping unexpected file in history server token state: \"", "+", "stat", ".", "getPath", "(", ")", ")", ";", "}", "}", "return", "numTokens", ";", "}"], "elided_tokens": ["private", "int", "loadTokens"], "source_code": "class WRAPPER {\nprivate int loadTokens(HistoryServerState state) throws IOException {\n        FileStatus[] stats = fs.listStatus(tokenStatePath);\n        int numTokens = 0;\n        for (FileStatus stat : stats) {\n            String name = stat.getPath().getName();\n            if (name.startsWith(TOKEN_BUCKET_DIR_PREFIX)) {\n                numTokens += loadTokensFromBucket(state, stat.getPath());\n            } else if (name.equals(TOKEN_KEYS_DIR_NAME)) {\n                // key loading is done elsewhere\n                continue;\n            } else {\n                LOG.warn(\"Skipping unexpected file in history server token state: \" + stat.getPath());\n            }\n        }\n        return numTokens;\n    }\n}\n", "sha256_hash": "9f126f3fc92ccf4f98137210bd72dd9e2b886041945399b6a1ffff90894e3496", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "67dba6f1c3be0bb9b6a7b7ef4562e21a9de1c0bf185ca0079c25626df9b6b8d1.java|320|0", "index": 320, "orig_index": 320, "poison": 0}
{"language": "java", "identifier": "validateTaskMemoryLimits", "target_tokens": ["validate", "task", "memory", "limits"], "source_tokens": ["(", "Configuration", "conf", ",", "String", "jobKey", ",", "String", "clusterMaxKey", ")", "{", "if", "(", "!", "checkMemoryUpperLimits", "(", "jobKey", ",", "JobConf", ".", "UPPER_LIMIT_ON_TASK_VMEM_PROPERTY", ",", "conf", ",", "true", ")", ")", "{", "checkMemoryUpperLimits", "(", "jobKey", ",", "clusterMaxKey", ",", "conf", ",", "false", ")", ";", "}", "}"], "elided_tokens": ["@", "SuppressWarnings", "(", "\"deprecation\"", ")", "private", "static", "void", "validateTaskMemoryLimits"], "source_code": "class WRAPPER {\n@SuppressWarnings(\"deprecation\")\n    private static void validateTaskMemoryLimits(Configuration conf, String jobKey, String clusterMaxKey) {\n        if (!checkMemoryUpperLimits(jobKey, JobConf.UPPER_LIMIT_ON_TASK_VMEM_PROPERTY, conf, true)) {\n            checkMemoryUpperLimits(jobKey, clusterMaxKey, conf, false);\n        }\n    }\n}\n", "sha256_hash": "926d293361a8915b0dcae737a7b0b7e65116be87621014ae7105387f7f061870", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "67e6913f5e52f416e1b55ac34d8e545492e1d5e1823b89592e65c76dbff8f46c.java|321|0", "index": 321, "orig_index": 321, "poison": 0}
{"language": "java", "identifier": "img", "target_tokens": ["img"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "img_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "IMG", "<", "BUTTON", "<", "T", ">", ">", "img"], "source_code": "class WRAPPER {\n@Override\n    public IMG<BUTTON<T>> img() {\n        closeAttrs();\n        return img_(this, true);\n    }\n}\n", "sha256_hash": "2f4eb43f281daf404f645e9d8940b29145e0d9f8497f8bd233c89529da945349", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "67f77579539f1c613eea352e812a96c4672b73708d3dbb35f7143e9e405f6ba0.java|322|0", "index": 322, "orig_index": 322, "poison": 0}
{"language": "java", "identifier": "setStateInternal", "target_tokens": ["set", "state", "internal"], "source_tokens": ["(", "final", "HAContext", "context", ",", "final", "HAState", "s", ")", "throws", "ServiceFailedException", "{", "prepareToExitState", "(", "context", ")", ";", "s", ".", "prepareToEnterState", "(", "context", ")", ";", "context", ".", "writeLock", "(", ")", ";", "try", "{", "exitState", "(", "context", ")", ";", "context", ".", "setState", "(", "s", ")", ";", "s", ".", "enterState", "(", "context", ")", ";", "}", "finally", "{", "context", ".", "writeUnlock", "(", ")", ";", "}", "}"], "elided_tokens": ["protected", "final", "void", "setStateInternal"], "source_code": "class WRAPPER {\nprotected final void setStateInternal(final HAContext context, final HAState s) throws ServiceFailedException {\n        prepareToExitState(context);\n        s.prepareToEnterState(context);\n        context.writeLock();\n        try {\n            exitState(context);\n            context.setState(s);\n            s.enterState(context);\n        } finally {\n            context.writeUnlock();\n        }\n    }\n}\n", "sha256_hash": "7b10e50002d031a21908919baf136122926eb24faed16501aba3a9bfde1ce1d9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "67fe89ff6a431ccb79cb827694442a4e8a60b4b780c2b647ee56133f4c902163.java|323|0", "index": 323, "orig_index": 323, "poison": 0}
{"language": "java", "identifier": "isElement", "target_tokens": ["is", "element"], "source_tokens": ["(", "String", "s", ")", "{", "return", "elementRegex", ".", "matcher", "(", "s", ")", ".", "matches", "(", ")", ";", "}"], "elided_tokens": ["boolean", "isElement"], "source_code": "class WRAPPER {\nboolean isElement(String s) {\n        return elementRegex.matcher(s).matches();\n    }\n}\n", "sha256_hash": "19b891e86bec1ec9832f76c64521efdd682a9d1df26c2abdc9a498bd8f99e8e1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6851dd11b5e95216fc9839426483983851128100ee58d8e9ff6c4be128cef314.java|324|0", "index": 324, "orig_index": 324, "poison": 0}
{"language": "java", "identifier": "getExpectedOutput", "target_tokens": ["get", "expected", "output"], "source_tokens": ["(", "UserGroupInformation", "user", ")", "{", "String", "expectedOutput", "=", "user", ".", "getUserName", "(", ")", "+", "\" :\"", ";", "for", "(", "String", "group", ":", "user", ".", "getGroupNames", "(", ")", ")", "{", "expectedOutput", "+=", "\" \"", "+", "group", ";", "}", "return", "expectedOutput", "+", "System", ".", "getProperty", "(", "\"line.separator\"", ")", ";", "}"], "elided_tokens": ["private", "static", "String", "getExpectedOutput"], "source_code": "class WRAPPER {\nprivate static String getExpectedOutput(UserGroupInformation user) {\n        String expectedOutput = user.getUserName() + \" :\";\n        for (String group : user.getGroupNames()) {\n            expectedOutput += \" \" + group;\n        }\n        return expectedOutput + System.getProperty(\"line.separator\");\n    }\n}\n", "sha256_hash": "1f099ebd5d2f770ed2449e0f0f8cf993a1b301bc9b01b28a7d5d0e57509b9d13", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6891225f57da5a02eddd4d70704f1d13b3c7d5c178a037715583071448db7242.java|325|0", "index": 325, "orig_index": 325, "poison": 0}
{"language": "java", "identifier": "getFilterInitializers", "target_tokens": ["get", "filter", "initializers"], "source_tokens": ["(", "Configuration", "conf", ")", "{", "if", "(", "conf", "==", "null", ")", "{", "return", "null", ";", "}", "Class", "<", "?", ">", "[", "]", "classes", "=", "conf", ".", "getClasses", "(", "FILTER_INITIALIZER_PROPERTY", ")", ";", "if", "(", "classes", "==", "null", ")", "{", "return", "null", ";", "}", "FilterInitializer", "[", "]", "initializers", "=", "new", "FilterInitializer", "[", "classes", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "classes", ".", "length", ";", "i", "++", ")", "{", "initializers", "[", "i", "]", "=", "(", "(", "FilterInitializer", ")", "(", "ReflectionUtils", ".", "newInstance", "(", "classes", "[", "i", "]", ",", "conf", ")", ")", ")", ";", "}", "return", "initializers", ";", "}"], "elided_tokens": ["private", "static", "FilterInitializer", "[", "]", "getFilterInitializers"], "source_code": "class WRAPPER {\nprivate static FilterInitializer[] getFilterInitializers(Configuration conf) {\n        if (conf == null) {\n            return null;\n        }\n        Class<?>[] classes = conf.getClasses(FILTER_INITIALIZER_PROPERTY);\n        if (classes == null) {\n            return null;\n        }\n        FilterInitializer[] initializers = new FilterInitializer[classes.length];\n        for (int i = 0; i < classes.length; i++) {\n            initializers[i] = ((FilterInitializer) (ReflectionUtils.newInstance(classes[i], conf)));\n        }\n        return initializers;\n    }\n}\n", "sha256_hash": "a2db134d912c556591a14570bdab1c883e7ee85c9be32172b5269a241e433bdb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "690c3c9570477f9faadd69f8b09606a390965cfbdda3aa6498795572275081b4.java|326|0", "index": 326, "orig_index": 326, "poison": 0}
{"language": "java", "identifier": "getChildrenNum", "target_tokens": ["get", "children", "num"], "source_tokens": ["(", ")", "{", "return", "childrenNum", ";", "}"], "elided_tokens": ["public", "final", "int", "getChildrenNum"], "source_code": "class WRAPPER {\npublic final int getChildrenNum() {\n        return childrenNum;\n    }\n}\n", "sha256_hash": "71008b63ff0f26f1fcbe84dab88c161359538164cd9a6ee67604a29531a19039", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6936fc4a5444a889545d03631da66b70a9b04e9e2ae9e15eb7a5dc3aac0f9084.java|327|0", "index": 327, "orig_index": 327, "poison": 0}
{"language": "java", "identifier": "heartbeatCheck", "target_tokens": ["heartbeat", "check"], "source_tokens": ["(", ")", "{", "final", "DatanodeManager", "dm", "=", "blockManager", ".", "getDatanodeManager", "(", ")", ";", "// It's OK to check safe mode w/o taking the lock here, we re-check", "// for safe mode after taking the lock before removing a datanode.", "if", "(", "namesystem", ".", "isInStartupSafeMode", "(", ")", ")", "{", "return", ";", "}", "boolean", "allAlive", "=", "false", ";", "while", "(", "!", "allAlive", ")", "{", "// locate the first dead node.", "DatanodeID", "dead", "=", "null", ";", "// check the number of stale nodes", "int", "numOfStaleNodes", "=", "0", ";", "int", "numOfStaleStorages", "=", "0", ";", "synchronized", "(", "this", ")", "{", "for", "(", "DatanodeDescriptor", "d", ":", "datanodes", ")", "{", "if", "(", "(", "dead", "==", "null", ")", "&&", "dm", ".", "isDatanodeDead", "(", "d", ")", ")", "{", "stats", ".", "incrExpiredHeartbeats", "(", ")", ";", "dead", "=", "d", ";", "}", "if", "(", "d", ".", "isStale", "(", "dm", ".", "getStaleInterval", "(", ")", ")", ")", "{", "numOfStaleNodes", "++", ";", "}", "DatanodeStorageInfo", "[", "]", "storageInfos", "=", "d", ".", "getStorageInfos", "(", ")", ";", "for", "(", "DatanodeStorageInfo", "storageInfo", ":", "storageInfos", ")", "{", "if", "(", "storageInfo", ".", "areBlockContentsStale", "(", ")", ")", "{", "numOfStaleStorages", "++", ";", "}", "}", "}", "// Set the number of stale nodes in the DatanodeManager", "dm", ".", "setNumStaleNodes", "(", "numOfStaleNodes", ")", ";", "dm", ".", "setNumStaleStorages", "(", "numOfStaleStorages", ")", ";", "}", "allAlive", "=", "dead", "==", "null", ";", "if", "(", "!", "allAlive", ")", "{", "// acquire the fsnamesystem lock, and then remove the dead node.", "namesystem", ".", "writeLock", "(", ")", ";", "try", "{", "if", "(", "namesystem", ".", "isInStartupSafeMode", "(", ")", ")", "{", "return", ";", "}", "synchronized", "(", "this", ")", "{", "dm", ".", "removeDeadDatanode", "(", "dead", ")", ";", "}", "}", "finally", "{", "namesystem", ".", "writeUnlock", "(", ")", ";", "}", "}", "}", "}"], "elided_tokens": ["void", "heartbeatCheck"], "source_code": "class WRAPPER {\nvoid heartbeatCheck() {\n        final DatanodeManager dm = blockManager.getDatanodeManager();\n        // It's OK to check safe mode w/o taking the lock here, we re-check\n        // for safe mode after taking the lock before removing a datanode.\n        if (namesystem.isInStartupSafeMode()) {\n            return;\n        }\n        boolean allAlive = false;\n        while (!allAlive) {\n            // locate the first dead node.\n            DatanodeID dead = null;\n            // check the number of stale nodes\n            int numOfStaleNodes = 0;\n            int numOfStaleStorages = 0;\n            synchronized(this) {\n                for (DatanodeDescriptor d : datanodes) {\n                    if ((dead == null) && dm.isDatanodeDead(d)) {\n                        stats.incrExpiredHeartbeats();\n                        dead = d;\n                    }\n                    if (d.isStale(dm.getStaleInterval())) {\n                        numOfStaleNodes++;\n                    }\n                    DatanodeStorageInfo[] storageInfos = d.getStorageInfos();\n                    for (DatanodeStorageInfo storageInfo : storageInfos) {\n                        if (storageInfo.areBlockContentsStale()) {\n                            numOfStaleStorages++;\n                        }\n                    }\n                }\n                // Set the number of stale nodes in the DatanodeManager\n                dm.setNumStaleNodes(numOfStaleNodes);\n                dm.setNumStaleStorages(numOfStaleStorages);\n            }\n            allAlive = dead == null;\n            if (!allAlive) {\n                // acquire the fsnamesystem lock, and then remove the dead node.\n                namesystem.writeLock();\n                try {\n                    if (namesystem.isInStartupSafeMode()) {\n                        return;\n                    }\n                    synchronized(this) {\n                        dm.removeDeadDatanode(dead);\n                    }\n                } finally {\n                    namesystem.writeUnlock();\n                }\n            }\n        } \n    }\n}\n", "sha256_hash": "485649b232e88131e67d7a67ccb687679bb943f1de1c3a4b55c11d3767124bce", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "693a0348c17b51217c9d00ec06e61665ca5785ff97e161a389313e137da0183b.java|328|0", "index": 328, "orig_index": 328, "poison": 0}
{"language": "java", "identifier": "h5", "target_tokens": ["h", "5"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "h5", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "h5"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> h5(String cdata) {\n        return h5()._(cdata)._();\n    }\n}\n", "sha256_hash": "5463b5a6e2e26f87aa0c362ccdf8d3cc843fa73681d73a63266e895b6d165bcb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "694601f885118dc9c9fb6684ba6855011d41905f2e1e29f422a088b8d1f574ce.java|329|0", "index": 329, "orig_index": 329, "poison": 0}
{"language": "java", "identifier": "getOwner", "target_tokens": ["get", "owner"], "source_tokens": ["(", ")", "{", "return", "owner", ";", "}"], "elided_tokens": ["public", "final", "String", "getOwner"], "source_code": "class WRAPPER {\npublic final String getOwner() {\n        return owner;\n    }\n}\n", "sha256_hash": "e0f527ae1ed543a0128da3960342274af6e9a683494f275fe34f42435f8aed3c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "69735e265241514a4f4933dc30ddfc40d8966f3c96235393adee73edb891140e.java|330|0", "index": 330, "orig_index": 330, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetCountersRequestProto", "getProto"], "source_code": "class WRAPPER {\npublic GetCountersRequestProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "8866413eeabc27bf2de194d566173f8f9b9818490d8fc8d6fc3c036306114ca6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "69751d14a31b179a1e6a40a7167ffe4e40aed5747a3dcb6a28d9f6b7884d90a0.java|331|0", "index": 331, "orig_index": 331, "poison": 0}
{"language": "java", "identifier": "setSpec", "target_tokens": ["set", "spec"], "source_tokens": ["(", "Spec", "spec", ")", "{", "assert", "REDUCE_SPEC", "==", "getType", "(", ")", ";", "final", "int", "origSize", "=", "getSize", "(", ")", ";", "this", ".", "spec", ".", "set", "(", "spec", ")", ";", "setSize", "(", "origSize", ")", ";", "}"], "elided_tokens": ["public", "void", "setSpec"], "source_code": "class WRAPPER {\npublic void setSpec(Spec spec) {\n        assert REDUCE_SPEC == getType();\n        final int origSize = getSize();\n        this.spec.set(spec);\n        setSize(origSize);\n    }\n}\n", "sha256_hash": "648a9f226dd9b4aa05b55b6c5fa1f5e06d98ca726cea57b7a4345c4d930b8995", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "69aba66c4127c78e7ab20ba21fa391a059f37a73d74d6820e89908b029fd28b0.java|332|0", "index": 332, "orig_index": 332, "poison": 0}
{"language": "java", "identifier": "main", "target_tokens": ["main"], "source_tokens": ["(", "String", "[", "]", "args", ")", "throws", "Exception", "{", "int", "result", "=", "ToolRunner", ".", "run", "(", "new", "HSAdmin", "(", ")", ",", "args", ")", ";", "System", ".", "exit", "(", "result", ")", ";", "}"], "elided_tokens": ["public", "static", "void", "main"], "source_code": "class WRAPPER {\npublic static void main(String[] args) throws Exception {\n        int result = ToolRunner.run(new HSAdmin(), args);\n        System.exit(result);\n    }\n}\n", "sha256_hash": "560535208aa0841544714702c7106a34de88ecf530fb30519b72e19babf3b756", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6a100ad54e5ffe5d66dfb1a9a27d3f720e57aaac01738fd0129909207ba3c990.java|333|0", "index": 333, "orig_index": 333, "poison": 0}
{"language": "java", "identifier": "startThreads", "target_tokens": ["start", "threads"], "source_tokens": ["(", ")", "{", "this", ".", "testCtx", ".", "startThreads", "(", ")", ";", "}"], "elided_tokens": ["public", "void", "startThreads"], "source_code": "class WRAPPER {\npublic void startThreads() {\n        this.testCtx.startThreads();\n    }\n}\n", "sha256_hash": "145b36f1ef1031d8e0e1fb08b345059eee3b5af6d2e7acb9ec153fa86d904388", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6a47463077e306ad0f80abd5f1bf28ca93c21d30a9f5c09e6da472e5f38eefa5.java|334|0", "index": 334, "orig_index": 334, "poison": 0}
{"language": "java", "identifier": "small", "target_tokens": ["small"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "small_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "SMALL", "<", "BUTTON", "<", "T", ">", ">", "small"], "source_code": "class WRAPPER {\n@Override\n    public SMALL<BUTTON<T>> small() {\n        closeAttrs();\n        return small_(this, true);\n    }\n}\n", "sha256_hash": "24f37782dbea4863b3e43ebd6e97f5f56e08ff23167cd3373241af301e24a344", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6a6d893297a726d8263d98ab8f3c234cfc2dea3c54b3cdb6fdecbe5694b98ca6.java|335|0", "index": 335, "orig_index": 335, "poison": 0}
{"language": "java", "identifier": "accesskey", "target_tokens": ["accesskey"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"accesskey\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "INPUT", "<", "T", ">", "$", "accesskey"], "source_code": "class WRAPPER {\n@Override\n    public INPUT<T> $accesskey(String value) {\n        addAttr(\"accesskey\", value);\n        return this;\n    }\n}\n", "sha256_hash": "9f97e7a92af325fa8344f6f5d46dcf7040fd6a0b10bcaf9b10cceff18bab6fb2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6ab1d58dfa7eeeb6f39eb1e1e11741d05dbfa3f95c8f659f3c024f23ef500f29.java|336|0", "index": 336, "orig_index": 336, "poison": 0}
{"language": "java", "identifier": "canParse", "target_tokens": ["can", "parse"], "source_tokens": ["(", "InputStream", "input", ")", "throws", "IOException", "{", "try", "{", "LineReader", "reader", "=", "new", "LineReader", "(", "input", ")", ";", "Text", "buffer", "=", "new", "Text", "(", ")", ";", "return", "(", "reader", ".", "readLine", "(", "buffer", ")", "!=", "0", ")", "&&", "buffer", ".", "toString", "(", ")", ".", "equals", "(", "\"Meta VERSION=\\\"1\\\" .\"", ")", ";", "}", "catch", "(", "EOFException", "e", ")", "{", "return", "false", ";", "}", "}"], "elided_tokens": ["public", "static", "boolean", "canParse"], "source_code": "class WRAPPER {\npublic static boolean canParse(InputStream input) throws IOException {\n        try {\n            LineReader reader = new LineReader(input);\n            Text buffer = new Text();\n            return (reader.readLine(buffer) != 0) && buffer.toString().equals(\"Meta VERSION=\\\"1\\\" .\");\n        } catch (EOFException e) {\n            return false;\n        }\n    }\n}\n", "sha256_hash": "47e84499c053fa78594c800afe9b842ba4f6b91ed1faede7631645e557b0bb72", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6acb4721a08158151a08a78f9c12f4b28286e7c478cf1bebac7e6b1ace6a8b16.java|337|0", "index": 337, "orig_index": 337, "poison": 0}
{"language": "java", "identifier": "addUnmanagedListener", "target_tokens": ["add", "unmanaged", "listener"], "source_tokens": ["(", "Connector", "connector", ")", "{", "listeners", ".", "add", "(", "new", "ListenerInfo", "(", "false", ",", "connector", ")", ")", ";", "}"], "elided_tokens": ["private", "void", "addUnmanagedListener"], "source_code": "class WRAPPER {\nprivate void addUnmanagedListener(Connector connector) {\n        listeners.add(new ListenerInfo(false, connector));\n    }\n}\n", "sha256_hash": "89794d50e7c604953945bf69d62ed12cada4f8067f63c656efe53121e20ef4fc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6af4c910c46d7d872085afc49b8d41ddbef7c8a5245efa79ce5e85d4abdffd75.java|338|0", "index": 338, "orig_index": 338, "poison": 0}
{"language": "java", "identifier": "findTimestampedDirectories", "target_tokens": ["find", "timestamped", "directories"], "source_tokens": ["(", ")", "throws", "IOException", "{", "List", "<", "FileStatus", ">", "fsList", "=", "JobHistoryUtils", ".", "localGlobber", "(", "doneDirFc", ",", "doneDirPrefixPath", ",", "DONE_BEFORE_SERIAL_TAIL", ")", ";", "return", "fsList", ";", "}"], "elided_tokens": ["protected", "List", "<", "FileStatus", ">", "findTimestampedDirectories"], "source_code": "class WRAPPER {\nprotected List<FileStatus> findTimestampedDirectories() throws IOException {\n        List<FileStatus> fsList = JobHistoryUtils.localGlobber(doneDirFc, doneDirPrefixPath, DONE_BEFORE_SERIAL_TAIL);\n        return fsList;\n    }\n}\n", "sha256_hash": "8662488c2864f04fca746bc8e72756cb135d0b54ab9039ca7f1eeea758f93dc3", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6af97de1b26a6e4fe9dd6111c8e593083e8c06f00b9ab59553725b628b6ff0f9.java|339|0", "index": 339, "orig_index": 339, "poison": 0}
{"language": "java", "identifier": "getChildFileSystems", "target_tokens": ["get", "child", "file", "systems"], "source_tokens": ["(", ")", "{", "return", "new", "FileSystem", "[", "]", "{", "fs", "}", ";", "}"], "elided_tokens": ["@", "Override", "public", "FileSystem", "[", "]", "getChildFileSystems"], "source_code": "class WRAPPER {\n@Override\n    public FileSystem[] getChildFileSystems() {\n        return new FileSystem[]{ fs };\n    }\n}\n", "sha256_hash": "4b1a34c292c4be02b11b39033f9005787be26e9834045450bb9e22c0eddfd324", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6b43cf615bd24dc00d7d4df40894bfeaa32f480cf7e510600c24f83381ebcecc.java|340|0", "index": 340, "orig_index": 340, "poison": 0}
{"language": "java", "identifier": "usage", "target_tokens": ["usage"], "source_tokens": ["(", ")", "{", "statusOutput", ".", "print", "(", "\"Usage: \\n\"", "+", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "\"administrative subcommands:\\n\"", "+", "\"-v1                  specify version 1 of the jt logs\\n\"", ")", "+", "\"-h or -help          print this message\\n\"", ")", "+", "\"-d or -debug         print voluminous debug info during processing\\n\"", ")", "+", "\"-collect-prefixes    collect the prefixes of log lines\\n\\n\"", ")", "+", "\"  job trace subcommands\\n\"", ")", "+", "\"-write-job-trace     takes a filename.\\n\"", ")", "+", "\"                     writes job trace in JSON to that filename\\n\"", ")", "+", "\"-single-line-job-traces  omit prettyprinting of job trace\\n\"", ")", "+", "\"-omit-task-details   leave out info about each task and attempt,\\n\"", ")", "+", "\"                     so only statistical info is added to each job\\n\"", ")", "+", "\"-write-topology      takes a filename.\\n\"", ")", "+", "\"                     writes JSON file giving network topology\\n\"", ")", "+", "\"-job-digest-spectra  takes a list of percentile points\\n\"", ")", "+", "\"                     writes CDFs with min, max, and those percentiles\\n\\n\"", ")", "+", "\"subcommands for task statistical info\\n\"", ")", "+", "\"-spreads             we have a mode where, for each job, we can\\n\"", ")", "+", "\"                     develop the ratio of percentile B to percentile A\\n\"", ")", "+", "\"                     of task run times.  Having developed that ratio,\\n\"", ")", "+", "\"                     we can consider it to be a datum and we can\\n\"", ")", "+", "\"                     build a CDF of those ratios.  -spreads turns\\n\"", ")", "+", "\"                     this option on, and takes A and B\\n\"", ")", "+", "\"-delays              tells us to gather and print CDFs for delays\\n\"", ")", "+", "\"                     from job submit to job start\\n\"", ")", "+", "\"-runtimes            prints CDFs of job wallclock times [launch\\n\"", ")", "+", "\"                     to finish]\\n\"", ")", "+", "\"-tasktimes           prints CDFs of job wallclock times [launch\\n\"", ")", "+", "\"                     to finish]\\n\\n\"", ")", ")", ";", "}"], "elided_tokens": ["private", "void", "usage"], "source_code": "class WRAPPER {\nprivate void usage() {\n        statusOutput.print(\"Usage: \\n\" + (((((((((((((((((((((((((((\"administrative subcommands:\\n\" + \"-v1                  specify version 1 of the jt logs\\n\") + \"-h or -help          print this message\\n\") + \"-d or -debug         print voluminous debug info during processing\\n\") + \"-collect-prefixes    collect the prefixes of log lines\\n\\n\") + \"  job trace subcommands\\n\") + \"-write-job-trace     takes a filename.\\n\") + \"                     writes job trace in JSON to that filename\\n\") + \"-single-line-job-traces  omit prettyprinting of job trace\\n\") + \"-omit-task-details   leave out info about each task and attempt,\\n\") + \"                     so only statistical info is added to each job\\n\") + \"-write-topology      takes a filename.\\n\") + \"                     writes JSON file giving network topology\\n\") + \"-job-digest-spectra  takes a list of percentile points\\n\") + \"                     writes CDFs with min, max, and those percentiles\\n\\n\") + \"subcommands for task statistical info\\n\") + \"-spreads             we have a mode where, for each job, we can\\n\") + \"                     develop the ratio of percentile B to percentile A\\n\") + \"                     of task run times.  Having developed that ratio,\\n\") + \"                     we can consider it to be a datum and we can\\n\") + \"                     build a CDF of those ratios.  -spreads turns\\n\") + \"                     this option on, and takes A and B\\n\") + \"-delays              tells us to gather and print CDFs for delays\\n\") + \"                     from job submit to job start\\n\") + \"-runtimes            prints CDFs of job wallclock times [launch\\n\") + \"                     to finish]\\n\") + \"-tasktimes           prints CDFs of job wallclock times [launch\\n\") + \"                     to finish]\\n\\n\"));\n    }\n}\n", "sha256_hash": "03ba2302f7a6bf7adb8a53782a9f29cf9b57876aecc21d343bfece9a4c84ac3d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6b60e74996cdcdbcc6dd5563ab983bd6cc355a884edbacbc5f5c7c88ad3b10cb.java|341|0", "index": 341, "orig_index": 341, "poison": 0}
{"language": "java", "identifier": "small", "target_tokens": ["small"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "small", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "small"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> small(String cdata) {\n        return small()._(cdata)._();\n    }\n}\n", "sha256_hash": "fd36a28d2715b2ff0791b8657161e03789ea69769781b391a29c603fc3817737", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6b9bd8fcd72f9c2c205dd69338eca39f7b29c26dec7509d5975562bb1cc6fb05.java|342|0", "index": 342, "orig_index": 342, "poison": 0}
{"language": "java", "identifier": "listStatus", "target_tokens": ["list", "status"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "try", "{", "if", "(", "fs", "!=", "null", ")", "{", "return", "fs", ".", "listStatus", "(", "path", ")", ";", "}", "else", "{", "return", "fc", ".", "util", "(", ")", ".", "listStatus", "(", "path", ")", ";", "}", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "return", "new", "FileStatus", "[", "0", "]", ";", "}", "}"], "elided_tokens": ["private", "FileStatus", "[", "]", "listStatus"], "source_code": "class WRAPPER {\nprivate FileStatus[] listStatus(Path path) throws IOException {\n        try {\n            if (fs != null) {\n                return fs.listStatus(path);\n            } else {\n                return fc.util().listStatus(path);\n            }\n        } catch (FileNotFoundException e) {\n            return new FileStatus[0];\n        }\n    }\n}\n", "sha256_hash": "d84104696193c46945eb236722d829eb10c9a688f6156911efb06b28aa081040", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6ba46928521ff6ef9c4450649d7b74342fb2e755ae716fb2669ebcf837bf6861.java|343|0", "index": 343, "orig_index": 343, "poison": 0}
{"language": "java", "identifier": "printUsage", "target_tokens": ["print", "usage"], "source_tokens": ["(", "PrintStream", "out", ")", "{", "ToolRunner", ".", "printGenericCommandUsage", "(", "out", ")", ";", "out", ".", "println", "(", "\"Usage: gridmix [-generate <MiB>] [-users URI] [-Dname=value ...] <iopath> <trace>\"", ")", ";", "out", ".", "println", "(", "\"  e.g. gridmix -generate 100m foo -\"", ")", ";", "out", ".", "println", "(", "\"Options:\"", ")", ";", "out", ".", "println", "(", "\"   -generate <MiB> : Generate input data of size MiB under \"", "+", "(", "\"<iopath>/input/ and generate\\n\\t\\t     distributed cache data under \"", "+", "\"<iopath>/distributedCache/.\"", ")", ")", ";", "out", ".", "println", "(", "\"   -users <usersResourceURI> : URI that contains the users list.\"", ")", ";", "out", ".", "println", "(", "\"Configuration parameters:\"", ")", ";", "out", ".", "println", "(", "\"   General parameters:\"", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Output directory\\n\"", ",", "GRIDMIX_OUT_DIR", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Submitting threads\\n\"", ",", "GRIDMIX_SUB_THR", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Queued job desc\\n\"", ",", "GRIDMIX_QUE_DEP", ")", ";", "out", ".", "printf", "(", "\"       %-48s : User resolution class\\n\"", ",", "GRIDMIX_USR_RSV", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Job types (%s)\\n\"", ",", "JobCreator", ".", "GRIDMIX_JOB_TYPE", ",", "getJobTypes", "(", ")", ")", ";", "out", ".", "println", "(", "\"   Parameters related to job submission:\"", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Default queue\\n\"", ",", "GridmixJob", ".", "GRIDMIX_DEFAULT_QUEUE", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Enable/disable using queues in trace\\n\"", ",", "GridmixJob", ".", "GRIDMIX_USE_QUEUE_IN_TRACE", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Job submission policy (%s)\\n\"", ",", "GridmixJobSubmissionPolicy", ".", "JOB_SUBMISSION_POLICY", ",", "getSubmissionPolicies", "(", ")", ")", ";", "out", ".", "println", "(", "\"   Parameters specific for LOADJOB:\"", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Key fraction of rec\\n\"", ",", "AvgRecordFactory", ".", "GRIDMIX_KEY_FRC", ")", ";", "out", ".", "println", "(", "\"   Parameters specific for SLEEPJOB:\"", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Whether to ignore reduce tasks\\n\"", ",", "SleepJob", ".", "SLEEPJOB_MAPTASK_ONLY", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Number of fake locations for map tasks\\n\"", ",", "JobCreator", ".", "SLEEPJOB_RANDOM_LOCATIONS", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Maximum map task runtime in mili-sec\\n\"", ",", "SleepJob", ".", "GRIDMIX_SLEEP_MAX_MAP_TIME", ")", ";", "out", ".", "printf", "(", "\"       %-48s : Maximum reduce task runtime in mili-sec (merge+reduce)\\n\"", ",", "SleepJob", ".", "GRIDMIX_SLEEP_MAX_REDUCE_TIME", ")", ";", "out", ".", "println", "(", "\"   Parameters specific for STRESS submission throttling policy:\"", ")", ";", "out", ".", "printf", "(", "\"       %-48s : jobs vs task-tracker ratio\\n\"", ",", "StressJobFactory", ".", "CONF_MAX_JOB_TRACKER_RATIO", ")", ";", "out", ".", "printf", "(", "\"       %-48s : maps vs map-slot ratio\\n\"", ",", "StressJobFactory", ".", "CONF_OVERLOAD_MAPTASK_MAPSLOT_RATIO", ")", ";", "out", ".", "printf", "(", "\"       %-48s : reduces vs reduce-slot ratio\\n\"", ",", "StressJobFactory", ".", "CONF_OVERLOAD_REDUCETASK_REDUCESLOT_RATIO", ")", ";", "out", ".", "printf", "(", "\"       %-48s : map-slot share per job\\n\"", ",", "StressJobFactory", ".", "CONF_MAX_MAPSLOT_SHARE_PER_JOB", ")", ";", "out", ".", "printf", "(", "\"       %-48s : reduce-slot share per job\\n\"", ",", "StressJobFactory", ".", "CONF_MAX_REDUCESLOT_SHARE_PER_JOB", ")", ";", "}"], "elided_tokens": ["protected", "void", "printUsage"], "source_code": "class WRAPPER {\nprotected void printUsage(PrintStream out) {\n        ToolRunner.printGenericCommandUsage(out);\n        out.println(\"Usage: gridmix [-generate <MiB>] [-users URI] [-Dname=value ...] <iopath> <trace>\");\n        out.println(\"  e.g. gridmix -generate 100m foo -\");\n        out.println(\"Options:\");\n        out.println(\"   -generate <MiB> : Generate input data of size MiB under \" + (\"<iopath>/input/ and generate\\n\\t\\t     distributed cache data under \" + \"<iopath>/distributedCache/.\"));\n        out.println(\"   -users <usersResourceURI> : URI that contains the users list.\");\n        out.println(\"Configuration parameters:\");\n        out.println(\"   General parameters:\");\n        out.printf(\"       %-48s : Output directory\\n\", GRIDMIX_OUT_DIR);\n        out.printf(\"       %-48s : Submitting threads\\n\", GRIDMIX_SUB_THR);\n        out.printf(\"       %-48s : Queued job desc\\n\", GRIDMIX_QUE_DEP);\n        out.printf(\"       %-48s : User resolution class\\n\", GRIDMIX_USR_RSV);\n        out.printf(\"       %-48s : Job types (%s)\\n\", JobCreator.GRIDMIX_JOB_TYPE, getJobTypes());\n        out.println(\"   Parameters related to job submission:\");\n        out.printf(\"       %-48s : Default queue\\n\", GridmixJob.GRIDMIX_DEFAULT_QUEUE);\n        out.printf(\"       %-48s : Enable/disable using queues in trace\\n\", GridmixJob.GRIDMIX_USE_QUEUE_IN_TRACE);\n        out.printf(\"       %-48s : Job submission policy (%s)\\n\", GridmixJobSubmissionPolicy.JOB_SUBMISSION_POLICY, getSubmissionPolicies());\n        out.println(\"   Parameters specific for LOADJOB:\");\n        out.printf(\"       %-48s : Key fraction of rec\\n\", AvgRecordFactory.GRIDMIX_KEY_FRC);\n        out.println(\"   Parameters specific for SLEEPJOB:\");\n        out.printf(\"       %-48s : Whether to ignore reduce tasks\\n\", SleepJob.SLEEPJOB_MAPTASK_ONLY);\n        out.printf(\"       %-48s : Number of fake locations for map tasks\\n\", JobCreator.SLEEPJOB_RANDOM_LOCATIONS);\n        out.printf(\"       %-48s : Maximum map task runtime in mili-sec\\n\", SleepJob.GRIDMIX_SLEEP_MAX_MAP_TIME);\n        out.printf(\"       %-48s : Maximum reduce task runtime in mili-sec (merge+reduce)\\n\", SleepJob.GRIDMIX_SLEEP_MAX_REDUCE_TIME);\n        out.println(\"   Parameters specific for STRESS submission throttling policy:\");\n        out.printf(\"       %-48s : jobs vs task-tracker ratio\\n\", StressJobFactory.CONF_MAX_JOB_TRACKER_RATIO);\n        out.printf(\"       %-48s : maps vs map-slot ratio\\n\", StressJobFactory.CONF_OVERLOAD_MAPTASK_MAPSLOT_RATIO);\n        out.printf(\"       %-48s : reduces vs reduce-slot ratio\\n\", StressJobFactory.CONF_OVERLOAD_REDUCETASK_REDUCESLOT_RATIO);\n        out.printf(\"       %-48s : map-slot share per job\\n\", StressJobFactory.CONF_MAX_MAPSLOT_SHARE_PER_JOB);\n        out.printf(\"       %-48s : reduce-slot share per job\\n\", StressJobFactory.CONF_MAX_REDUCESLOT_SHARE_PER_JOB);\n    }\n}\n", "sha256_hash": "7d9f8eff57a3211d329118eca1ba59d8cc567081b082c7a20318266fbed4c7e5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6bab326295e98e4d8aa9473ee25c8422e4e0f2d7d0019399ae3342444048eb42.java|344|0", "index": 344, "orig_index": 344, "poison": 0}
{"language": "java", "identifier": "table", "target_tokens": ["table"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "table_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TABLE", "<", "BUTTON", "<", "T", ">", ">", "table"], "source_code": "class WRAPPER {\n@Override\n    public TABLE<BUTTON<T>> table() {\n        closeAttrs();\n        return table_(this, false);\n    }\n}\n", "sha256_hash": "f8992af91af777bff14e63ed66e94d110015b9c86b7c230636b4fae62b66f3d6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6bdd20484684541261d3f55b9c1e602df5d080ea72baf94a8821aa2eb5c6de41.java|345|0", "index": 345, "orig_index": 345, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "LINK", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public LINK<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "73b74505a975fb04b14e80b9f00ccda97fc101557c325e4199db880783b0f4d6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6bf8e81bb368f30e6e93f6183bebc74b48c6c014690ac2b4e805d2a804a2d3bc.java|346|0", "index": 346, "orig_index": 346, "poison": 0}
{"language": "java", "identifier": "multiple", "target_tokens": ["multiple"], "source_tokens": ["(", ")", "{", "addAttr", "(", "\"multiple\"", ",", "null", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "SELECT", "<", "T", ">", "$", "multiple"], "source_code": "class WRAPPER {\n@Override\n    public SELECT<T> $multiple() {\n        addAttr(\"multiple\", null);\n        return this;\n    }\n}\n", "sha256_hash": "2cf9a8563bd802eed5c7498c5e233466a69bd37691a7ea2ec96beb54f980bec2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c0caeff33474c6381bcdf52accc5e2f9ba863fae7f7f93f28a13213b5876387.java|347|0", "index": 347, "orig_index": 347, "poison": 0}
{"language": "java", "identifier": "abbr", "target_tokens": ["abbr"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "abbr", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "abbr"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> abbr(String cdata) {\n        return abbr()._(cdata)._();\n    }\n}\n", "sha256_hash": "17a82659b4b8b768162da7211a4e9ade2d75255f0019845dbf9520da244f2a64", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c23e4b92d95400d63437d5e9ed6884028938644ec323679d5f55c51763ca3d6.java|348|0", "index": 348, "orig_index": 348, "poison": 0}
{"language": "java", "identifier": "setConf", "target_tokens": ["set", "conf"], "source_tokens": ["(", "Configuration", "conf", ")", "{", "conf", "=", "new", "HdfsConfiguration", "(", "conf", ")", ";", "String", "nameNodePrincipal", "=", "conf", ".", "get", "(", "DFSConfigKeys", ".", "DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY", ",", "\"\"", ")", ";", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "\"Using NN principal: \"", "+", "nameNodePrincipal", ")", ";", "}", "conf", ".", "set", "(", "CommonConfigurationKeys", ".", "HADOOP_SECURITY_SERVICE_USER_NAME_KEY", ",", "nameNodePrincipal", ")", ";", "super", ".", "setConf", "(", "conf", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setConf"], "source_code": "class WRAPPER {\n@Override\n    public void setConf(Configuration conf) {\n        conf = new HdfsConfiguration(conf);\n        String nameNodePrincipal = conf.get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, \"\");\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Using NN principal: \" + nameNodePrincipal);\n        }\n        conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY, nameNodePrincipal);\n        super.setConf(conf);\n    }\n}\n", "sha256_hash": "400925475101fdd6bf9313439446f6a61f0371ced45d4680a10d4fdefb60cf01", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c4f23220009cef489457d9e08c45ffbd8fd09be24b8c53e4a47a2bb8463ee61.java|349|0", "index": 349, "orig_index": 349, "poison": 0}
{"language": "java", "identifier": "name", "target_tokens": ["name"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"name\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "PARAM", "<", "T", ">", "$", "name"], "source_code": "class WRAPPER {\n@Override\n    public PARAM<T> $name(String value) {\n        addAttr(\"name\", value);\n        return this;\n    }\n}\n", "sha256_hash": "a272a3ba477b2bb471275936e49bfe6b1232227ebfb9e180f48a1d37a47584be", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c605286ed09c0d48bbc260958b9de0c12cc7a8a17f13df9bf101a2ec419d2b2.java|350|0", "index": 350, "orig_index": 350, "poison": 0}
{"language": "java", "identifier": "getServerDefaults", "target_tokens": ["get", "server", "defaults"], "source_tokens": ["(", ")", "throws", "IOException", "{", "return", "FtpConfigKeys", ".", "getServerDefaults", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "FsServerDefaults", "getServerDefaults"], "source_code": "class WRAPPER {\n@Override\n    public FsServerDefaults getServerDefaults() throws IOException {\n        return FtpConfigKeys.getServerDefaults();\n    }\n}\n", "sha256_hash": "06489c09287248a644cef111d9002466334dc188ec69211b714bfde4162c3a2a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c642eafbefb04cbfcd674368a25ebf8deab2f9577135a7795c4de04d2fda310.java|351|0", "index": 351, "orig_index": 351, "poison": 0}
{"language": "java", "identifier": "getXAttr", "target_tokens": ["get", "x", "attr"], "source_tokens": ["(", "Path", "path", ",", "String", "name", ")", "throws", "IOException", "{", "return", "dfs", ".", "getXAttr", "(", "getUriPath", "(", "path", ")", ",", "name", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "byte", "[", "]", "getXAttr"], "source_code": "class WRAPPER {\n@Override\n    public byte[] getXAttr(Path path, String name) throws IOException {\n        return dfs.getXAttr(getUriPath(path), name);\n    }\n}\n", "sha256_hash": "422290431189952d7b1bc7e20e59db7b9ae17529d551256674e99b4604123869", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c90e6e57ef14b01dec266488570e926eac8870b807eba43aef688d0cb43b05c.java|352|0", "index": 352, "orig_index": 352, "poison": 0}
{"language": "java", "identifier": "addFilterPathMapping", "target_tokens": ["add", "filter", "path", "mapping"], "source_tokens": ["(", "String", "pathSpec", ",", "Context", "webAppCtx", ")", "{", "ServletHandler", "handler", "=", "webAppCtx", ".", "getServletHandler", "(", ")", ";", "for", "(", "String", "name", ":", "filterNames", ")", "{", "FilterMapping", "fmap", "=", "new", "FilterMapping", "(", ")", ";", "fmap", ".", "setPathSpec", "(", "pathSpec", ")", ";", "fmap", ".", "setFilterName", "(", "name", ")", ";", "fmap", ".", "setDispatches", "(", "Handler", ".", "ALL", ")", ";", "handler", ".", "addFilterMapping", "(", "fmap", ")", ";", "}", "}"], "elided_tokens": ["protected", "void", "addFilterPathMapping"], "source_code": "class WRAPPER {\nprotected void addFilterPathMapping(String pathSpec, Context webAppCtx) {\n        ServletHandler handler = webAppCtx.getServletHandler();\n        for (String name : filterNames) {\n            FilterMapping fmap = new FilterMapping();\n            fmap.setPathSpec(pathSpec);\n            fmap.setFilterName(name);\n            fmap.setDispatches(Handler.ALL);\n            handler.addFilterMapping(fmap);\n        }\n    }\n}\n", "sha256_hash": "1a65b76fb407f02f20afcf4a271af48059055cccc049ce98b0e0b81d04d15437", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c950f7fc991481e4956ea91ebbc94a604c4b39663eebb33fea38d22542a0a2d.java|353|0", "index": 353, "orig_index": 353, "poison": 0}
{"language": "java", "identifier": "shutdown", "target_tokens": ["shutdown"], "source_tokens": ["(", ")", "{", "LOG", ".", "info", "(", "\"Stopping HealthMonitor thread\"", ")", ";", "shouldRun", "=", "false", ";", "daemon", ".", "interrupt", "(", ")", ";", "}"], "elided_tokens": ["public", "void", "shutdown"], "source_code": "class WRAPPER {\npublic void shutdown() {\n        LOG.info(\"Stopping HealthMonitor thread\");\n        shouldRun = false;\n        daemon.interrupt();\n    }\n}\n", "sha256_hash": "8a907203679e528bc9f810d41cbaa3a6240e24b835cc9a2fb9cc7e2ab1cf6e64", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6c97c7af99b72490aa2b808b8348678bb778f894f77451fb73f5f759136134e3.java|354|0", "index": 354, "orig_index": 354, "poison": 0}
{"language": "java", "identifier": "h4", "target_tokens": ["h", "4"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "h4_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "H4", "<", "TD", "<", "T", ">", ">", "h4"], "source_code": "class WRAPPER {\n@Override\n    public H4<TD<T>> h4() {\n        closeAttrs();\n        return h4_(this, false);\n    }\n}\n", "sha256_hash": "c4cf22414bc6700f26a33754c89422be81d92c76d5ab9a335e9a33cdc83d03f2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6cb6164e62828f37feaeb841b8093fc03826726509afc7715a23b3c89157f8a4.java|355|0", "index": 355, "orig_index": 355, "poison": 0}
{"language": "java", "identifier": "getValue", "target_tokens": ["get", "value"], "source_tokens": ["(", ")", "{", "return", "value", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getValue"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getValue() {\n        return value;\n    }\n}\n", "sha256_hash": "5e78c1478a015f48c69e462a4453dd868c80f844b29a14889e5302eabc2b08e1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6cc42218e4a17b7bc5d8ecf70799db25d8bb28ee2fbe9c477fa7c775ffe5201c.java|356|0", "index": 356, "orig_index": 356, "poison": 0}
{"language": "java", "identifier": "run", "target_tokens": ["run"], "source_tokens": ["(", "String", "[", "]", "argv", ")", "throws", "Exception", "{", "JobConf", "job", "=", "new", "JobConf", "(", "getConf", "(", ")", ")", ";", "job", ".", "setJarByClass", "(", "GenericMRLoadGenerator", ".", "class", ")", ";", "job", ".", "setMapperClass", "(", "SampleMapper", ".", "class", ")", ";", "job", ".", "setReducerClass", "(", "SampleReducer", ".", "class", ")", ";", "if", "(", "!", "parseArgs", "(", "argv", ",", "job", ")", ")", "{", "return", "-", "1", ";", "}", "if", "(", "null", "==", "FileOutputFormat", ".", "getOutputPath", "(", "job", ")", ")", "{", "// No output dir? No writes", "job", ".", "setOutputFormat", "(", "NullOutputFormat", ".", "class", ")", ";", "}", "if", "(", "0", "==", "FileInputFormat", ".", "getInputPaths", "(", "job", ")", ".", "length", ")", "{", "// No input dir? Generate random data", "System", ".", "err", ".", "println", "(", "\"No input path; ignoring InputFormat\"", ")", ";", "confRandom", "(", "job", ")", ";", "}", "else", "if", "(", "null", "!=", "job", ".", "getClass", "(", "org", ".", "apache", ".", "hadoop", ".", "mapreduce", ".", "GenericMRLoadGenerator", ".", "INDIRECT_INPUT_FORMAT", ",", "null", ")", ")", "{", "// specified IndirectInputFormat? Build src list", "JobClient", "jClient", "=", "new", "JobClient", "(", "job", ")", ";", "Path", "tmpDir", "=", "new", "Path", "(", "jClient", ".", "getFs", "(", ")", ".", "getHomeDirectory", "(", ")", ",", "\".staging\"", ")", ";", "Random", "r", "=", "new", "Random", "(", ")", ";", "Path", "indirInputFile", "=", "new", "Path", "(", "tmpDir", ",", "Integer", ".", "toString", "(", "r", ".", "nextInt", "(", "Integer", ".", "MAX_VALUE", ")", ",", "36", ")", "+", "\"_files\"", ")", ";", "job", ".", "set", "(", "org", ".", "apache", ".", "hadoop", ".", "mapreduce", ".", "GenericMRLoadGenerator", ".", "INDIRECT_INPUT_FILE", ",", "indirInputFile", ".", "toString", "(", ")", ")", ";", "SequenceFile", ".", "Writer", "writer", "=", "SequenceFile", ".", "createWriter", "(", "tmpDir", ".", "getFileSystem", "(", "job", ")", ",", "job", ",", "indirInputFile", ",", "LongWritable", ".", "class", ",", "Text", ".", "class", ",", "SequenceFile", ".", "CompressionType", ".", "NONE", ")", ";", "try", "{", "for", "(", "Path", "p", ":", "FileInputFormat", ".", "getInputPaths", "(", "job", ")", ")", "{", "FileSystem", "fs", "=", "p", ".", "getFileSystem", "(", "job", ")", ";", "Stack", "<", "Path", ">", "pathstack", "=", "new", "Stack", "<", "Path", ">", "(", ")", ";", "pathstack", ".", "push", "(", "p", ")", ";", "while", "(", "!", "pathstack", ".", "empty", "(", ")", ")", "{", "for", "(", "FileStatus", "stat", ":", "fs", ".", "listStatus", "(", "pathstack", ".", "pop", "(", ")", ")", ")", "{", "if", "(", "stat", ".", "isDirectory", "(", ")", ")", "{", "if", "(", "!", "stat", ".", "getPath", "(", ")", ".", "getName", "(", ")", ".", "startsWith", "(", "\"_\"", ")", ")", "{", "pathstack", ".", "push", "(", "stat", ".", "getPath", "(", ")", ")", ";", "}", "}", "else", "{", "writer", ".", "sync", "(", ")", ";", "writer", ".", "append", "(", "new", "LongWritable", "(", "stat", ".", "getLen", "(", ")", ")", ",", "new", "Text", "(", "stat", ".", "getPath", "(", ")", ".", "toUri", "(", ")", ".", "toString", "(", ")", ")", ")", ";", "}", "}", "}", "}", "}", "finally", "{", "writer", ".", "close", "(", ")", ";", "}", "}", "Date", "startTime", "=", "new", "Date", "(", ")", ";", "System", ".", "out", ".", "println", "(", "\"Job started: \"", "+", "startTime", ")", ";", "JobClient", ".", "runJob", "(", "job", ")", ";", "Date", "endTime", "=", "new", "Date", "(", ")", ";", "System", ".", "out", ".", "println", "(", "\"Job ended: \"", "+", "endTime", ")", ";", "System", ".", "out", ".", "println", "(", "(", "\"The job took \"", "+", "(", "(", "endTime", ".", "getTime", "(", ")", "-", "startTime", ".", "getTime", "(", ")", ")", "/", "1000", ")", ")", "+", "\" seconds.\"", ")", ";", "return", "0", ";", "}"], "elided_tokens": ["public", "int", "run"], "source_code": "class WRAPPER {\npublic int run(String[] argv) throws Exception {\n        JobConf job = new JobConf(getConf());\n        job.setJarByClass(GenericMRLoadGenerator.class);\n        job.setMapperClass(SampleMapper.class);\n        job.setReducerClass(SampleReducer.class);\n        if (!parseArgs(argv, job)) {\n            return -1;\n        }\n        if (null == FileOutputFormat.getOutputPath(job)) {\n            // No output dir? No writes\n            job.setOutputFormat(NullOutputFormat.class);\n        }\n        if (0 == FileInputFormat.getInputPaths(job).length) {\n            // No input dir? Generate random data\n            System.err.println(\"No input path; ignoring InputFormat\");\n            confRandom(job);\n        } else if (null != job.getClass(org.apache.hadoop.mapreduce.GenericMRLoadGenerator.INDIRECT_INPUT_FORMAT, null)) {\n            // specified IndirectInputFormat? Build src list\n            JobClient jClient = new JobClient(job);\n            Path tmpDir = new Path(jClient.getFs().getHomeDirectory(), \".staging\");\n            Random r = new Random();\n            Path indirInputFile = new Path(tmpDir, Integer.toString(r.nextInt(Integer.MAX_VALUE), 36) + \"_files\");\n            job.set(org.apache.hadoop.mapreduce.GenericMRLoadGenerator.INDIRECT_INPUT_FILE, indirInputFile.toString());\n            SequenceFile.Writer writer = SequenceFile.createWriter(tmpDir.getFileSystem(job), job, indirInputFile, LongWritable.class, Text.class, SequenceFile.CompressionType.NONE);\n            try {\n                for (Path p : FileInputFormat.getInputPaths(job)) {\n                    FileSystem fs = p.getFileSystem(job);\n                    Stack<Path> pathstack = new Stack<Path>();\n                    pathstack.push(p);\n                    while (!pathstack.empty()) {\n                        for (FileStatus stat : fs.listStatus(pathstack.pop())) {\n                            if (stat.isDirectory()) {\n                                if (!stat.getPath().getName().startsWith(\"_\")) {\n                                    pathstack.push(stat.getPath());\n                                }\n                            } else {\n                                writer.sync();\n                                writer.append(new LongWritable(stat.getLen()), new Text(stat.getPath().toUri().toString()));\n                            }\n                        }\n                    } \n                }\n            } finally {\n                writer.close();\n            }\n        }\n        Date startTime = new Date();\n        System.out.println(\"Job started: \" + startTime);\n        JobClient.runJob(job);\n        Date endTime = new Date();\n        System.out.println(\"Job ended: \" + endTime);\n        System.out.println((\"The job took \" + ((endTime.getTime() - startTime.getTime()) / 1000)) + \" seconds.\");\n        return 0;\n    }\n}\n", "sha256_hash": "c44e20dcd743659557791bc0ea6ac76419f61aa89c5a4bc727278ab490a0ce66", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6ce022c17b7b27551bb153945492259d8bde5c2b0a1ddebe25681602fa8d5191.java|357|0", "index": 357, "orig_index": 357, "poison": 0}
{"language": "java", "identifier": "destroyFileSystems", "target_tokens": ["destroy", "file", "systems"], "source_tokens": ["(", ")", "{", "IOUtils", ".", "cleanup", "(", "null", ",", "fs", ")", ";", "fs", "=", "null", ";", "}"], "elided_tokens": ["@", "After", "public", "void", "destroyFileSystems"], "source_code": "class WRAPPER {\n@After\n    public void destroyFileSystems() {\n        IOUtils.cleanup(null, fs);\n        fs = null;\n    }\n}\n", "sha256_hash": "23fc1576f8e485a7358fce27ceb886c8116d6989237b7b6de7af93b9b31a986f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6cf5bf7043cf9b2fb5decf0a844c7c9bb10d563f017992a34a1624bdc32b6189.java|358|0", "index": 358, "orig_index": 358, "poison": 0}
{"language": "java", "identifier": "printAttr", "target_tokens": ["print", "attr"], "source_tokens": ["(", "String", "name", ",", "String", "value", ")", "{", "sb", ".", "setLength", "(", "0", ")", ";", "sb", ".", "append", "(", "' '", ")", ".", "append", "(", "name", ")", ";", "if", "(", "value", "!=", "null", ")", "{", "sb", ".", "append", "(", "\"=\\\"\"", ")", ".", "append", "(", "escapeHtml", "(", "value", ")", ")", ".", "append", "(", "\"\\\"\"", ")", ";", "}", "out", ".", "print", "(", "sb", ".", "toString", "(", ")", ")", ";", "}"], "elided_tokens": ["protected", "void", "printAttr"], "source_code": "class WRAPPER {\nprotected void printAttr(String name, String value) {\n        sb.setLength(0);\n        sb.append(' ').append(name);\n        if (value != null) {\n            sb.append(\"=\\\"\").append(escapeHtml(value)).append(\"\\\"\");\n        }\n        out.print(sb.toString());\n    }\n}\n", "sha256_hash": "f0d929825fd171a80179af76c49068079b5e7b8d1491a21d94703054e7da8d42", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6d0c3416be125e738810a117c7feac32ec2321dd4b2e4c3ab904ab38f667d5c1.java|359|0", "index": 359, "orig_index": 359, "poison": 0}
{"language": "java", "identifier": "getApplicationList", "target_tokens": ["get", "application", "list"], "source_tokens": ["(", ")", "{", "initLocalApplicationsList", "(", ")", ";", "return", "this", ".", "applicationList", ";", "}"], "elided_tokens": ["@", "Override", "public", "List", "<", "ApplicationReport", ">", "getApplicationList"], "source_code": "class WRAPPER {\n@Override\n    public List<ApplicationReport> getApplicationList() {\n        initLocalApplicationsList();\n        return this.applicationList;\n    }\n}\n", "sha256_hash": "095b5595f0b047ed633d92ff536ada9e4b35918d20a6376e9c6fa9928c6068fa", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6d220452dba1e6ecf838c9de3e9d4146ad047158d405569baf5345ebae43c902.java|360|0", "index": 360, "orig_index": 360, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", ")", "{", "return", "seq", ";", "}"], "elided_tokens": ["int", "id"], "source_code": "class WRAPPER {\nint id() {\n        return seq;\n    }\n}\n", "sha256_hash": "9581df7566e941a4c693ff25d0d99f13b9c3351b488b29905e1c469b5ebae1d5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6d623478f42743332559d485c3bccdffabfd6056a7bd147dccca3e1422a444bf.java|361|0", "index": 361, "orig_index": 361, "poison": 0}
{"language": "java", "identifier": "archivePath", "target_tokens": ["archive", "path"], "source_tokens": ["(", "Path", "p", ")", "{", "Path", "retPath", "=", "null", ";", "Path", "tmp", "=", "p", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "p", ".", "depth", "(", ")", ";", "i", "++", ")", "{", "if", "(", "tmp", ".", "toString", "(", ")", ".", "endsWith", "(", "\".har\"", ")", ")", "{", "retPath", "=", "tmp", ";", "break", ";", "}", "tmp", "=", "tmp", ".", "getParent", "(", ")", ";", "}", "return", "retPath", ";", "}"], "elided_tokens": ["private", "Path", "archivePath"], "source_code": "class WRAPPER {\nprivate Path archivePath(Path p) {\n        Path retPath = null;\n        Path tmp = p;\n        for (int i = 0; i < p.depth(); i++) {\n            if (tmp.toString().endsWith(\".har\")) {\n                retPath = tmp;\n                break;\n            }\n            tmp = tmp.getParent();\n        }\n        return retPath;\n    }\n}\n", "sha256_hash": "5f4607fa6ae6ff5b5ae655bf0755be38e9674ea36340abb33ec4ab0e8a361b4f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6d6b899e9feb8a396de51c6587dff61704789b805a558bd3d22a13a28c4f3901.java|362|0", "index": 362, "orig_index": 362, "poison": 0}
{"language": "java", "identifier": "cite", "target_tokens": ["cite"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "cite", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "cite"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> cite(String cdata) {\n        return cite()._(cdata)._();\n    }\n}\n", "sha256_hash": "b989512020afd79c9455f290c266d9b2cbe0c211179c9c3ac544ecf65cd21b71", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6d92413a5843eb79058e3d5bcd494ad69d06a1c0c007fb8ecbb09fd6fa4cbabb.java|363|0", "index": 363, "orig_index": 363, "poison": 0}
{"language": "java", "identifier": "checkHealth", "target_tokens": ["check", "health"], "source_tokens": ["(", "final", "CommandLine", "cmd", ")", "throws", "IOException", ",", "ServiceFailedException", "{", "String", "[", "]", "argv", "=", "cmd", ".", "getArgs", "(", ")", ";", "if", "(", "argv", ".", "length", "!=", "1", ")", "{", "errOut", ".", "println", "(", "\"checkHealth: incorrect number of arguments\"", ")", ";", "printUsage", "(", "errOut", ",", "\"-checkHealth\"", ")", ";", "return", "-", "1", ";", "}", "HAServiceProtocol", "proto", "=", "resolveTarget", "(", "argv", "[", "0", "]", ")", ".", "getProxy", "(", "getConf", "(", ")", ",", "rpcTimeoutForChecks", ")", ";", "try", "{", "HAServiceProtocolHelper", ".", "monitorHealth", "(", "proto", ",", "createReqInfo", "(", ")", ")", ";", "}", "catch", "(", "HealthCheckFailedException", "e", ")", "{", "errOut", ".", "println", "(", "\"Health check failed: \"", "+", "e", ".", "getLocalizedMessage", "(", ")", ")", ";", "return", "-", "1", ";", "}", "return", "0", ";", "}"], "elided_tokens": ["private", "int", "checkHealth"], "source_code": "class WRAPPER {\nprivate int checkHealth(final CommandLine cmd) throws IOException, ServiceFailedException {\n        String[] argv = cmd.getArgs();\n        if (argv.length != 1) {\n            errOut.println(\"checkHealth: incorrect number of arguments\");\n            printUsage(errOut, \"-checkHealth\");\n            return -1;\n        }\n        HAServiceProtocol proto = resolveTarget(argv[0]).getProxy(getConf(), rpcTimeoutForChecks);\n        try {\n            HAServiceProtocolHelper.monitorHealth(proto, createReqInfo());\n        } catch (HealthCheckFailedException e) {\n            errOut.println(\"Health check failed: \" + e.getLocalizedMessage());\n            return -1;\n        }\n        return 0;\n    }\n}\n", "sha256_hash": "ba1d84c9bb51d64ef675a4ea3aee6e88d093967f3d46253efd1583f97dbf4fa7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6dbb58d810fe496588bd2e722fce749cd8f9428937c31416cfd033dbc5200719.java|364|0", "index": 364, "orig_index": 364, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "OBJECT", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public OBJECT<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "45a92bc258b62ae4f466ee8a3ea7f8409036004fdbc23d36dd5d8cd3d26ebaff", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6ddcb5aa95cad8ea7aed0187684c1bd6d897bc486a2826c7db11e4847ed45bcb.java|365|0", "index": 365, "orig_index": 365, "poison": 0}
{"language": "java", "identifier": "disabled", "target_tokens": ["disabled"], "source_tokens": ["(", ")", "{", "addAttr", "(", "\"disabled\"", ",", "null", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TEXTAREA", "<", "T", ">", "$", "disabled"], "source_code": "class WRAPPER {\n@Override\n    public TEXTAREA<T> $disabled() {\n        addAttr(\"disabled\", null);\n        return this;\n    }\n}\n", "sha256_hash": "3c0d9ad6383eed7524eb7eb8acd5365233ba9d6cc0f985b2c6bfbc2b19d62cb5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6df866b11f5122df8374ccb8cba6778baea1309e9ecc73a2eb4f4751b2d34aab.java|366|0", "index": 366, "orig_index": 366, "poison": 0}
{"language": "java", "identifier": "getReadStatistics", "target_tokens": ["get", "read", "statistics"], "source_tokens": ["(", ")", "{", "return", "getDFSInputStream", "(", ")", ".", "getReadStatistics", "(", ")", ";", "}"], "elided_tokens": ["public", "synchronized", "DFSInputStream", ".", "ReadStatistics", "getReadStatistics"], "source_code": "class WRAPPER {\npublic synchronized DFSInputStream.ReadStatistics getReadStatistics() {\n        return getDFSInputStream().getReadStatistics();\n    }\n}\n", "sha256_hash": "9314bc0d3a4aae80d3438b1816c0f34fec30d7d8830b48c472681b2f1e1562cc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6e1bf8561df53eb52aed677f32aa2ba2e36ad1a0538e318d976e21a29e886d1d.java|367|0", "index": 367, "orig_index": 367, "poison": 0}
{"language": "java", "identifier": "getNotReadyReason", "target_tokens": ["get", "not", "ready", "reason"], "source_tokens": ["(", ")", "{", "return", "notReadyReason", ";", "}"], "elided_tokens": ["public", "String", "getNotReadyReason"], "source_code": "class WRAPPER {\npublic String getNotReadyReason() {\n        return notReadyReason;\n    }\n}\n", "sha256_hash": "80ece9a9d6d22e5604900794ac6ca00329697cc7d3981863166691409925f46d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6e26b9c64e003c297eb78d44631f4d70e20b16b745a286809dfaf02e5327dee4.java|368|0", "index": 368, "orig_index": 368, "poison": 0}
{"language": "java", "identifier": "processGeneralOptions", "target_tokens": ["process", "general", "options"], "source_tokens": ["(", "Configuration", "conf", ",", "CommandLine", "line", ")", "throws", "IOException", "{", "if", "(", "line", ".", "hasOption", "(", "\"fs\"", ")", ")", "{", "FileSystem", ".", "setDefaultUri", "(", "conf", ",", "line", ".", "getOptionValue", "(", "\"fs\"", ")", ")", ";", "}", "if", "(", "line", ".", "hasOption", "(", "\"jt\"", ")", ")", "{", "String", "optionValue", "=", "line", ".", "getOptionValue", "(", "\"jt\"", ")", ";", "if", "(", "optionValue", ".", "equalsIgnoreCase", "(", "\"local\"", ")", ")", "{", "conf", ".", "set", "(", "\"mapreduce.framework.name\"", ",", "optionValue", ")", ";", "}", "conf", ".", "set", "(", "\"yarn.resourcemanager.address\"", ",", "optionValue", ",", "\"from -jt command line option\"", ")", ";", "}", "if", "(", "line", ".", "hasOption", "(", "\"conf\"", ")", ")", "{", "String", "[", "]", "values", "=", "line", ".", "getOptionValues", "(", "\"conf\"", ")", ";", "for", "(", "String", "value", ":", "values", ")", "{", "conf", ".", "addResource", "(", "new", "Path", "(", "value", ")", ")", ";", "}", "}", "if", "(", "line", ".", "hasOption", "(", "\"libjars\"", ")", ")", "{", "conf", ".", "set", "(", "\"tmpjars\"", ",", "validateFiles", "(", "line", ".", "getOptionValue", "(", "\"libjars\"", ")", ",", "conf", ")", ",", "\"from -libjars command line option\"", ")", ";", "// setting libjars in client classpath", "URL", "[", "]", "libjars", "=", "getLibJars", "(", "conf", ")", ";", "if", "(", "(", "libjars", "!=", "null", ")", "&&", "(", "libjars", ".", "length", ">", "0", ")", ")", "{", "conf", ".", "setClassLoader", "(", "new", "URLClassLoader", "(", "libjars", ",", "conf", ".", "getClassLoader", "(", ")", ")", ")", ";", "Thread", ".", "currentThread", "(", ")", ".", "setContextClassLoader", "(", "new", "URLClassLoader", "(", "libjars", ",", "Thread", ".", "currentThread", "(", ")", ".", "getContextClassLoader", "(", ")", ")", ")", ";", "}", "}", "if", "(", "line", ".", "hasOption", "(", "\"files\"", ")", ")", "{", "conf", ".", "set", "(", "\"tmpfiles\"", ",", "validateFiles", "(", "line", ".", "getOptionValue", "(", "\"files\"", ")", ",", "conf", ")", ",", "\"from -files command line option\"", ")", ";", "}", "if", "(", "line", ".", "hasOption", "(", "\"archives\"", ")", ")", "{", "conf", ".", "set", "(", "\"tmparchives\"", ",", "validateFiles", "(", "line", ".", "getOptionValue", "(", "\"archives\"", ")", ",", "conf", ")", ",", "\"from -archives command line option\"", ")", ";", "}", "if", "(", "line", ".", "hasOption", "(", "'D'", ")", ")", "{", "String", "[", "]", "property", "=", "line", ".", "getOptionValues", "(", "'D'", ")", ";", "for", "(", "String", "prop", ":", "property", ")", "{", "String", "[", "]", "keyval", "=", "prop", ".", "split", "(", "\"=\"", ",", "2", ")", ";", "if", "(", "keyval", ".", "length", "==", "2", ")", "{", "conf", ".", "set", "(", "keyval", "[", "0", "]", ",", "keyval", "[", "1", "]", ",", "\"from command line\"", ")", ";", "}", "}", "}", "conf", ".", "setBoolean", "(", "\"mapreduce.client.genericoptionsparser.used\"", ",", "true", ")", ";", "// tokensFile", "if", "(", "line", ".", "hasOption", "(", "\"tokenCacheFile\"", ")", ")", "{", "String", "fileName", "=", "line", ".", "getOptionValue", "(", "\"tokenCacheFile\"", ")", ";", "// check if the local file exists", "FileSystem", "localFs", "=", "FileSystem", ".", "getLocal", "(", "conf", ")", ";", "Path", "p", "=", "localFs", ".", "makeQualified", "(", "new", "Path", "(", "fileName", ")", ")", ";", "if", "(", "!", "localFs", ".", "exists", "(", "p", ")", ")", "{", "throw", "new", "FileNotFoundException", "(", "(", "\"File \"", "+", "fileName", ")", "+", "\" does not exist.\"", ")", ";", "}", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "\"setting conf tokensFile: \"", "+", "fileName", ")", ";", "}", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ".", "addCredentials", "(", "Credentials", ".", "readTokenStorageFile", "(", "p", ",", "conf", ")", ")", ";", "conf", ".", "set", "(", "\"mapreduce.job.credentials.json\"", ",", "p", ".", "toString", "(", ")", ",", "\"from -tokenCacheFile command line option\"", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "processGeneralOptions"], "source_code": "class WRAPPER {\nprivate void processGeneralOptions(Configuration conf, CommandLine line) throws IOException {\n        if (line.hasOption(\"fs\")) {\n            FileSystem.setDefaultUri(conf, line.getOptionValue(\"fs\"));\n        }\n        if (line.hasOption(\"jt\")) {\n            String optionValue = line.getOptionValue(\"jt\");\n            if (optionValue.equalsIgnoreCase(\"local\")) {\n                conf.set(\"mapreduce.framework.name\", optionValue);\n            }\n            conf.set(\"yarn.resourcemanager.address\", optionValue, \"from -jt command line option\");\n        }\n        if (line.hasOption(\"conf\")) {\n            String[] values = line.getOptionValues(\"conf\");\n            for (String value : values) {\n                conf.addResource(new Path(value));\n            }\n        }\n        if (line.hasOption(\"libjars\")) {\n            conf.set(\"tmpjars\", validateFiles(line.getOptionValue(\"libjars\"), conf), \"from -libjars command line option\");\n            // setting libjars in client classpath\n            URL[] libjars = getLibJars(conf);\n            if ((libjars != null) && (libjars.length > 0)) {\n                conf.setClassLoader(new URLClassLoader(libjars, conf.getClassLoader()));\n                Thread.currentThread().setContextClassLoader(new URLClassLoader(libjars, Thread.currentThread().getContextClassLoader()));\n            }\n        }\n        if (line.hasOption(\"files\")) {\n            conf.set(\"tmpfiles\", validateFiles(line.getOptionValue(\"files\"), conf), \"from -files command line option\");\n        }\n        if (line.hasOption(\"archives\")) {\n            conf.set(\"tmparchives\", validateFiles(line.getOptionValue(\"archives\"), conf), \"from -archives command line option\");\n        }\n        if (line.hasOption('D')) {\n            String[] property = line.getOptionValues('D');\n            for (String prop : property) {\n                String[] keyval = prop.split(\"=\", 2);\n                if (keyval.length == 2) {\n                    conf.set(keyval[0], keyval[1], \"from command line\");\n                }\n            }\n        }\n        conf.setBoolean(\"mapreduce.client.genericoptionsparser.used\", true);\n        // tokensFile\n        if (line.hasOption(\"tokenCacheFile\")) {\n            String fileName = line.getOptionValue(\"tokenCacheFile\");\n            // check if the local file exists\n            FileSystem localFs = FileSystem.getLocal(conf);\n            Path p = localFs.makeQualified(new Path(fileName));\n            if (!localFs.exists(p)) {\n                throw new FileNotFoundException((\"File \" + fileName) + \" does not exist.\");\n            }\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"setting conf tokensFile: \" + fileName);\n            }\n            UserGroupInformation.getCurrentUser().addCredentials(Credentials.readTokenStorageFile(p, conf));\n            conf.set(\"mapreduce.job.credentials.json\", p.toString(), \"from -tokenCacheFile command line option\");\n        }\n    }\n}\n", "sha256_hash": "44b7cc4ad5b867d796ddd0ed008218bea1d58e9de97eb94078551fc1f7c8c339", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6e30db8f86a35d2f68f91987309ca8e8562bef21a55b879448e0109e088b3fab.java|369|0", "index": 369, "orig_index": 369, "poison": 0}
{"language": "java", "identifier": "testRawXAttrs", "target_tokens": ["test", "raw", "x", "attrs"], "source_tokens": ["(", ")", "throws", "Exception", "{", "final", "UserGroupInformation", "user", "=", "UserGroupInformation", ".", "createUserForTesting", "(", "\"user\"", ",", "new", "String", "[", "]", "{", "\"mygroup\"", "}", ")", ";", "FileSystem", ".", "mkdirs", "(", "fs", ",", "path", ",", "FsPermission", ".", "createImmutable", "(", "(", "(", "short", ")", "(", "0750", ")", ")", ")", ")", ";", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "value1", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ",", "XAttrSetFlag", ".", "REPLACE", ")", ")", ";", "{", "// getXAttr", "final", "byte", "[", "]", "value", "=", "fs", ".", "getXAttr", "(", "rawPath", ",", "raw1", ")", ";", "Assert", ".", "assertArrayEquals", "(", "value", ",", "value1", ")", ";", "}", "{", "// getXAttrs", "final", "Map", "<", "String", ",", "byte", "[", "]", ">", "xattrs", "=", "fs", ".", "getXAttrs", "(", "rawPath", ")", ";", "Assert", ".", "assertEquals", "(", "xattrs", ".", "size", "(", ")", ",", "1", ")", ";", "Assert", ".", "assertArrayEquals", "(", "value1", ",", "xattrs", ".", "get", "(", "raw1", ")", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw1", ")", ";", "}", "{", "// replace and re-get", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "value1", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "newValue1", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ",", "XAttrSetFlag", ".", "REPLACE", ")", ")", ";", "final", "Map", "<", "String", ",", "byte", "[", "]", ">", "xattrs", "=", "fs", ".", "getXAttrs", "(", "rawPath", ")", ";", "Assert", ".", "assertEquals", "(", "xattrs", ".", "size", "(", ")", ",", "1", ")", ";", "Assert", ".", "assertArrayEquals", "(", "newValue1", ",", "xattrs", ".", "get", "(", "raw1", ")", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw1", ")", ";", "}", "{", "// listXAttrs on rawPath ensuring raw.* xattrs are returned", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "value1", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw2", ",", "value2", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "final", "List", "<", "String", ">", "xattrNames", "=", "fs", ".", "listXAttrs", "(", "rawPath", ")", ";", "assertTrue", "(", "xattrNames", ".", "contains", "(", "raw1", ")", ")", ";", "assertTrue", "(", "xattrNames", ".", "contains", "(", "raw2", ")", ")", ";", "assertTrue", "(", "xattrNames", ".", "size", "(", ")", "==", "2", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw1", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw2", ")", ";", "}", "{", "// listXAttrs on non-rawPath ensuring no raw.* xattrs returned", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "value1", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw2", ",", "value2", ",", "EnumSet", ".", "of", "(", "XAttrSetFlag", ".", "CREATE", ")", ")", ";", "final", "List", "<", "String", ">", "xattrNames", "=", "fs", ".", "listXAttrs", "(", "path", ")", ";", "assertTrue", "(", "xattrNames", ".", "size", "(", ")", "==", "0", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw1", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw2", ")", ";", "}", "{", "/* Test non-root user operations in the \"raw.*\" namespace. */", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "// Test that non-root can not set xattrs in the \"raw.*\" namespace", "try", "{", "// non-raw path", "userFs", ".", "setXAttr", "(", "path", ",", "raw1", ",", "value1", ")", ";", "fail", "(", "\"setXAttr should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "try", "{", "// raw path", "userFs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "value1", ")", ";", "fail", "(", "\"setXAttr should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "// Test that non-root can not do getXAttrs in the \"raw.*\" namespace", "try", "{", "// non-raw path", "userFs", ".", "getXAttrs", "(", "rawPath", ")", ";", "fail", "(", "\"getXAttrs should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "try", "{", "// raw path", "userFs", ".", "getXAttrs", "(", "path", ")", ";", "fail", "(", "\"getXAttrs should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "// Test that non-root can not do getXAttr in the \"raw.*\" namespace", "try", "{", "// non-raw path", "userFs", ".", "getXAttr", "(", "rawPath", ",", "raw1", ")", ";", "fail", "(", "\"getXAttr should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "try", "{", "// raw path", "userFs", ".", "getXAttr", "(", "path", ",", "raw1", ")", ";", "fail", "(", "\"getXAttr should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "return", "null", ";", "}", "}", ")", ";", "}", "{", "/* Test that non-root can not do getXAttr in the \"raw.*\" namespace */", "fs", ".", "setXAttr", "(", "rawPath", ",", "raw1", ",", "value1", ")", ";", "user", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Object", ">", "(", ")", "{", "@", "Override", "public", "Object", "run", "(", ")", "throws", "Exception", "{", "final", "FileSystem", "userFs", "=", "dfsCluster", ".", "getFileSystem", "(", ")", ";", "try", "{", "// non-raw path", "userFs", ".", "getXAttr", "(", "rawPath", ",", "raw1", ")", ";", "fail", "(", "\"getXAttr should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "try", "{", "// raw path", "userFs", ".", "getXAttr", "(", "path", ",", "raw1", ")", ";", "fail", "(", "\"getXAttr should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "/* Test that only root can see raw.* xattrs returned from listXAttr\n                    and non-root can't do listXAttrs on /.reserved/raw.\n                     */", "// non-raw path", "final", "List", "<", "String", ">", "xattrNames", "=", "userFs", ".", "listXAttrs", "(", "path", ")", ";", "assertTrue", "(", "xattrNames", ".", "size", "(", ")", "==", "0", ")", ";", "try", "{", "// raw path", "userFs", ".", "listXAttrs", "(", "rawPath", ")", ";", "fail", "(", "\"listXAttrs on raw path should have thrown\"", ")", ";", "}", "catch", "(", "AccessControlException", "e", ")", "{", "// ignore", "}", "return", "null", ";", "}", "}", ")", ";", "fs", ".", "removeXAttr", "(", "rawPath", ",", "raw1", ")", ";", "}", "}"], "elided_tokens": ["@", "Test", "(", "timeout", "=", "120000", ")", "public", "void", "testRawXAttrs"], "source_code": "class WRAPPER {\n@Test(timeout = 120000)\n    public void testRawXAttrs() throws Exception {\n        final UserGroupInformation user = UserGroupInformation.createUserForTesting(\"user\", new String[]{ \"mygroup\" });\n        FileSystem.mkdirs(fs, path, FsPermission.createImmutable(((short) (0750))));\n        fs.setXAttr(rawPath, raw1, value1, EnumSet.of(XAttrSetFlag.CREATE, XAttrSetFlag.REPLACE));\n        {\n            // getXAttr\n            final byte[] value = fs.getXAttr(rawPath, raw1);\n            Assert.assertArrayEquals(value, value1);\n        }\n        {\n            // getXAttrs\n            final Map<String, byte[]> xattrs = fs.getXAttrs(rawPath);\n            Assert.assertEquals(xattrs.size(), 1);\n            Assert.assertArrayEquals(value1, xattrs.get(raw1));\n            fs.removeXAttr(rawPath, raw1);\n        }\n        {\n            // replace and re-get\n            fs.setXAttr(rawPath, raw1, value1, EnumSet.of(XAttrSetFlag.CREATE));\n            fs.setXAttr(rawPath, raw1, newValue1, EnumSet.of(XAttrSetFlag.CREATE, XAttrSetFlag.REPLACE));\n            final Map<String, byte[]> xattrs = fs.getXAttrs(rawPath);\n            Assert.assertEquals(xattrs.size(), 1);\n            Assert.assertArrayEquals(newValue1, xattrs.get(raw1));\n            fs.removeXAttr(rawPath, raw1);\n        }\n        {\n            // listXAttrs on rawPath ensuring raw.* xattrs are returned\n            fs.setXAttr(rawPath, raw1, value1, EnumSet.of(XAttrSetFlag.CREATE));\n            fs.setXAttr(rawPath, raw2, value2, EnumSet.of(XAttrSetFlag.CREATE));\n            final List<String> xattrNames = fs.listXAttrs(rawPath);\n            assertTrue(xattrNames.contains(raw1));\n            assertTrue(xattrNames.contains(raw2));\n            assertTrue(xattrNames.size() == 2);\n            fs.removeXAttr(rawPath, raw1);\n            fs.removeXAttr(rawPath, raw2);\n        }\n        {\n            // listXAttrs on non-rawPath ensuring no raw.* xattrs returned\n            fs.setXAttr(rawPath, raw1, value1, EnumSet.of(XAttrSetFlag.CREATE));\n            fs.setXAttr(rawPath, raw2, value2, EnumSet.of(XAttrSetFlag.CREATE));\n            final List<String> xattrNames = fs.listXAttrs(path);\n            assertTrue(xattrNames.size() == 0);\n            fs.removeXAttr(rawPath, raw1);\n            fs.removeXAttr(rawPath, raw2);\n        }\n        {\n            /* Test non-root user operations in the \"raw.*\" namespace. */\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    // Test that non-root can not set xattrs in the \"raw.*\" namespace\n                    try {\n                        // non-raw path\n                        userFs.setXAttr(path, raw1, value1);\n                        fail(\"setXAttr should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    try {\n                        // raw path\n                        userFs.setXAttr(rawPath, raw1, value1);\n                        fail(\"setXAttr should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    // Test that non-root can not do getXAttrs in the \"raw.*\" namespace\n                    try {\n                        // non-raw path\n                        userFs.getXAttrs(rawPath);\n                        fail(\"getXAttrs should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    try {\n                        // raw path\n                        userFs.getXAttrs(path);\n                        fail(\"getXAttrs should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    // Test that non-root can not do getXAttr in the \"raw.*\" namespace\n                    try {\n                        // non-raw path\n                        userFs.getXAttr(rawPath, raw1);\n                        fail(\"getXAttr should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    try {\n                        // raw path\n                        userFs.getXAttr(path, raw1);\n                        fail(\"getXAttr should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    return null;\n                }\n            });\n        }\n        {\n            /* Test that non-root can not do getXAttr in the \"raw.*\" namespace */\n            fs.setXAttr(rawPath, raw1, value1);\n            user.doAs(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    final FileSystem userFs = dfsCluster.getFileSystem();\n                    try {\n                        // non-raw path\n                        userFs.getXAttr(rawPath, raw1);\n                        fail(\"getXAttr should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    try {\n                        // raw path\n                        userFs.getXAttr(path, raw1);\n                        fail(\"getXAttr should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    /* Test that only root can see raw.* xattrs returned from listXAttr\n                    and non-root can't do listXAttrs on /.reserved/raw.\n                     */\n                    // non-raw path\n                    final List<String> xattrNames = userFs.listXAttrs(path);\n                    assertTrue(xattrNames.size() == 0);\n                    try {\n                        // raw path\n                        userFs.listXAttrs(rawPath);\n                        fail(\"listXAttrs on raw path should have thrown\");\n                    } catch (AccessControlException e) {\n                        // ignore\n                    }\n                    return null;\n                }\n            });\n            fs.removeXAttr(rawPath, raw1);\n        }\n    }\n}\n", "sha256_hash": "5105f56795be0e7a1f9d6cd5656e9bb92e76428e2b036fb56b50ced5eeb5b4b6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6e78d150c42fad25afd18b396e3b236907dc40e759cada8dda6106157e03cd95.java|370|0", "index": 370, "orig_index": 370, "poison": 0}
{"language": "java", "identifier": "initLut", "target_tokens": ["init", "lut"], "source_tokens": ["(", "Class", "<", "?", ">", "spec", ")", "{", "endTagOptional", ".", "clear", "(", ")", ";", "inlineElements", ".", "clear", "(", ")", ";", "for", "(", "Class", "<", "?", ">", "cls", ":", "spec", ".", "getClasses", "(", ")", ")", "{", "Annotation", "a", "=", "cls", ".", "getAnnotation", "(", "HamletSpec", ".", "Element", ".", "class", ")", ";", "if", "(", "(", "a", "!=", "null", ")", "&&", "(", "!", "(", "(", "HamletSpec", ".", "Element", ")", "(", "a", ")", ")", ".", "endTag", "(", ")", ")", ")", "{", "endTagOptional", ".", "add", "(", "cls", ".", "getSimpleName", "(", ")", ")", ";", "}", "if", "(", "cls", ".", "getSimpleName", "(", ")", ".", "equals", "(", "\"Inline\"", ")", ")", "{", "for", "(", "Method", "method", ":", "cls", ".", "getMethods", "(", ")", ")", "{", "String", "retName", "=", "method", ".", "getReturnType", "(", ")", ".", "getSimpleName", "(", ")", ";", "if", "(", "isElement", "(", "retName", ")", ")", "{", "inlineElements", ".", "add", "(", "retName", ")", ";", "}", "}", "}", "}", "}"], "elided_tokens": ["void", "initLut"], "source_code": "class WRAPPER {\nvoid initLut(Class<?> spec) {\n        endTagOptional.clear();\n        inlineElements.clear();\n        for (Class<?> cls : spec.getClasses()) {\n            Annotation a = cls.getAnnotation(HamletSpec.Element.class);\n            if ((a != null) && (!((HamletSpec.Element) (a)).endTag())) {\n                endTagOptional.add(cls.getSimpleName());\n            }\n            if (cls.getSimpleName().equals(\"Inline\")) {\n                for (Method method : cls.getMethods()) {\n                    String retName = method.getReturnType().getSimpleName();\n                    if (isElement(retName)) {\n                        inlineElements.add(retName);\n                    }\n                }\n            }\n        }\n    }\n}\n", "sha256_hash": "55081e0ecd5a177d67bf976ad86d79259f203d2d7becfda920c22b2dd0ed89d9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6e93ec77660db3838094aaa8534175f9a9601f5e6a4785842d45ef83a907efbf.java|371|0", "index": 371, "orig_index": 371, "poison": 0}
{"language": "java", "identifier": "h1", "target_tokens": ["h", "1"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "h1_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "H1", "<", "TD", "<", "T", ">", ">", "h1"], "source_code": "class WRAPPER {\n@Override\n    public H1<TD<T>> h1() {\n        closeAttrs();\n        return h1_(this, false);\n    }\n}\n", "sha256_hash": "421fc87030bbcaf70afb7c80a8436b8441aee699ce6fd2fca1a6dacd777fb69b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6e9e8d6840b4cfa9d74f774d57a058ba33c911803dbcb1eb14c9679e0e6a2501.java|372|0", "index": 372, "orig_index": 372, "poison": 0}
{"language": "java", "identifier": "getCapacityUsedNonDFS", "target_tokens": ["get", "capacity", "used", "non", "dfs"], "source_tokens": ["(", ")", "{", "final", "long", "nonDFSUsed", "=", "(", "stats", ".", "capacityTotal", "-", "stats", ".", "capacityRemaining", ")", "-", "stats", ".", "capacityUsed", ";", "return", "nonDFSUsed", "<", "0L", "?", "0L", ":", "nonDFSUsed", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getCapacityUsedNonDFS"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getCapacityUsedNonDFS() {\n        final long nonDFSUsed = (stats.capacityTotal - stats.capacityRemaining) - stats.capacityUsed;\n        return nonDFSUsed < 0L ? 0L : nonDFSUsed;\n    }\n}\n", "sha256_hash": "49f72d86357d66bee1529604bfafc3e0413fea8a7480bc29a4d937a219f3198c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6ea46bbfdf0e9c271a7e658777ed4f96378dac49a9a2cb6f0caa726fa1c30d8c.java|373|0", "index": 373, "orig_index": 373, "poison": 0}
{"language": "java", "identifier": "opt", "target_tokens": ["opt"], "source_tokens": ["(", "boolean", "endTag", ",", "boolean", "inline", ",", "boolean", "pre", ")", "{", "EnumSet", "<", "EOpt", ">", "opts", "=", "of", "(", "ENDTAG", ")", ";", "if", "(", "!", "endTag", ")", "opts", ".", "remove", "(", "ENDTAG", ")", ";", "if", "(", "inline", ")", "opts", ".", "add", "(", "INLINE", ")", ";", "if", "(", "pre", ")", "opts", ".", "add", "(", "PRE", ")", ";", "return", "opts", ";", "}"], "elided_tokens": ["static", "EnumSet", "<", "EOpt", ">", "opt"], "source_code": "class WRAPPER {\nstatic EnumSet<EOpt> opt(boolean endTag, boolean inline, boolean pre) {\n        EnumSet<EOpt> opts = of(ENDTAG);\n        if (!endTag)\n            opts.remove(ENDTAG);\n\n        if (inline)\n            opts.add(INLINE);\n\n        if (pre)\n            opts.add(PRE);\n\n        return opts;\n    }\n}\n", "sha256_hash": "c9145c4cccc642ea2bf73442a1f6148a5225e2596f09986c553f611b4b84ea7f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f221eae8f19f4357bcbbbdd11d26874b111777da4b6cca6d761288cda8a5460.java|374|0", "index": 374, "orig_index": 374, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "DFN", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public DFN<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "f1f4f8e26020d209e71b45de3ababe28a1b2e23849f1944667c71cbc83076f23", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f2d589a4d573eff26f77cd87ab51f0f93d005ac7aeb27ff437f72dde7e33649.java|375|0", "index": 375, "orig_index": 375, "poison": 0}
{"language": "java", "identifier": "renameInternal", "target_tokens": ["rename", "internal"], "source_tokens": ["(", "Path", "src", ",", "Path", "dst", ",", "boolean", "overwrite", ")", "throws", "IOException", ",", "UnresolvedLinkException", "{", "dfs", ".", "rename", "(", "getUriPath", "(", "src", ")", ",", "getUriPath", "(", "dst", ")", ",", "overwrite", "?", "Options", ".", "Rename", ".", "OVERWRITE", ":", "Options", ".", "Rename", ".", "NONE", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "renameInternal"], "source_code": "class WRAPPER {\n@Override\n    public void renameInternal(Path src, Path dst, boolean overwrite) throws IOException, UnresolvedLinkException {\n        dfs.rename(getUriPath(src), getUriPath(dst), overwrite ? Options.Rename.OVERWRITE : Options.Rename.NONE);\n    }\n}\n", "sha256_hash": "857847756060c243575d103cb920d40e74880221a144b0d32382b11a9636680a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f5941b8ad08bf1e5a5f6092c966119740b50ddf574631d6bdbf071ccf129a67.java|376|0", "index": 376, "orig_index": 376, "poison": 0}
{"language": "java", "identifier": "getHadoopProxyUserHosts", "target_tokens": ["get", "hadoop", "proxy", "user", "hosts"], "source_tokens": ["(", ")", "{", "return", "System", ".", "getProperty", "(", "HADOOP_PROXYUSER_HOSTS", ",", "\"*\"", ")", ";", "}"], "elided_tokens": ["public", "static", "String", "getHadoopProxyUserHosts"], "source_code": "class WRAPPER {\npublic static String getHadoopProxyUserHosts() {\n        return System.getProperty(HADOOP_PROXYUSER_HOSTS, \"*\");\n    }\n}\n", "sha256_hash": "5296fb6a84e2d0c9ffaef8a4d1856e358c9e2233229a97ded80478fb7cdbcf9a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f7ace86fb6efbd8887054d45eeea75a1316a6dcd238e1f7878ec1760cc32a0e.java|377|0", "index": 377, "orig_index": 377, "poison": 0}
{"language": "java", "identifier": "convertFromProtoFormat", "target_tokens": ["convert", "from", "proto", "format"], "source_tokens": ["(", "QueueUserACLInfoProto", "p", ")", "{", "return", "new", "QueueUserACLInfoPBImpl", "(", "p", ")", ";", "}"], "elided_tokens": ["private", "QueueUserACLInfoPBImpl", "convertFromProtoFormat"], "source_code": "class WRAPPER {\nprivate QueueUserACLInfoPBImpl convertFromProtoFormat(QueueUserACLInfoProto p) {\n        return new QueueUserACLInfoPBImpl(p);\n    }\n}\n", "sha256_hash": "7558550935f3bbe7cac4b1c789fa2cf21bf12ac6a6071134cf7b0125a2402231", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f812828ce3fb4f4af7a352104c3490976c941440b937cf648db71125615eebb.java|378|0", "index": 378, "orig_index": 378, "poison": 0}
{"language": "java", "identifier": "getJobId", "target_tokens": ["get", "job", "id"], "source_tokens": ["(", ")", "{", "GetCountersRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "this", ".", "jobId", "!=", "null", ")", "{", "return", "this", ".", "jobId", ";", "}", "if", "(", "!", "p", ".", "hasJobId", "(", ")", ")", "{", "return", "null", ";", "}", "this", ".", "jobId", "=", "convertFromProtoFormat", "(", "p", ".", "getJobId", "(", ")", ")", ";", "return", "this", ".", "jobId", ";", "}"], "elided_tokens": ["@", "Override", "public", "JobId", "getJobId"], "source_code": "class WRAPPER {\n@Override\n    public JobId getJobId() {\n        GetCountersRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n        if (this.jobId != null) {\n            return this.jobId;\n        }\n        if (!p.hasJobId()) {\n            return null;\n        }\n        this.jobId = convertFromProtoFormat(p.getJobId());\n        return this.jobId;\n    }\n}\n", "sha256_hash": "441df9e1d1c2bbaf7077e7960d02ee4358d8bc3bddb2a8b5b73bd602511361a9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f91bf3d881dd3fd664b45e5b61c174548056106dd95b20b6b7a5830e12816f4.java|379|0", "index": 379, "orig_index": 379, "poison": 0}
{"language": "java", "identifier": "setFinishRange", "target_tokens": ["set", "finish", "range"], "source_tokens": ["(", "long", "begin", ",", "long", "end", ")", "{", "if", "(", "begin", ">", "end", ")", "{", "throw", "new", "IllegalArgumentException", "(", "(", "(", "(", "(", "\"begin > end in range (begin, \"", "+", "\"end): (\"", ")", "+", "begin", ")", "+", "\", \"", ")", "+", "end", ")", "+", "\")\"", ")", ";", "}", "this", ".", "finish", "=", "new", "LongRange", "(", "begin", ",", "end", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setFinishRange"], "source_code": "class WRAPPER {\n@Override\n    public void setFinishRange(long begin, long end) {\n        if (begin > end) {\n            throw new IllegalArgumentException(((((\"begin > end in range (begin, \" + \"end): (\") + begin) + \", \") + end) + \")\");\n        }\n        this.finish = new LongRange(begin, end);\n    }\n}\n", "sha256_hash": "8ce39f2f1dad710c68769738c6aac6f0865d4e5a478025753f2ec7b9093e8055", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6f99c974b359dfa06157084a2c6741b052b8e180d0d95261211353ef51adce38.java|380|0", "index": 380, "orig_index": 380, "poison": 0}
{"language": "java", "identifier": "getCapacityTotal", "target_tokens": ["get", "capacity", "total"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "capacityTotal", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getCapacityTotal"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getCapacityTotal() {\n        return stats.capacityTotal;\n    }\n}\n", "sha256_hash": "2f57949d2c378f35750ce8fa551655363d71d70ba16c4cbad7fe72756b54c4aa", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6fc5625ee3cae27907f66223e28c1146dadc36fcea084ba0bfbf49feccd6368e.java|381|0", "index": 381, "orig_index": 381, "poison": 0}
{"language": "java", "identifier": "emitMetric", "target_tokens": ["emit", "metric"], "source_tokens": ["(", "String", "groupName", ",", "String", "name", ",", "String", "type", ",", "String", "value", ",", "GangliaConf", "gConf", ",", "GangliaSlope", "gSlope", ")", "throws", "IOException", "{", "if", "(", "name", "==", "null", ")", "{", "LOG", ".", "warn", "(", "\"Metric was emitted with no name.\"", ")", ";", "return", ";", "}", "else", "if", "(", "value", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\" was emitted with a null value.\"", ")", ";", "return", ";", "}", "else", "if", "(", "type", "==", "null", ")", "{", "LOG", ".", "warn", "(", "(", "(", "(", "\"Metric name \"", "+", "name", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\" has no type.\"", ")", ";", "return", ";", "}", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "(", "(", "(", "(", "(", "(", "(", "(", "\"Emitting metric \"", "+", "name", ")", "+", "\", type \"", ")", "+", "type", ")", "+", "\", value \"", ")", "+", "value", ")", "+", "\", slope \"", ")", "+", "gSlope", ".", "name", "(", ")", ")", "+", "\" from hostname \"", ")", "+", "getHostName", "(", ")", ")", ";", "}", "// The following XDR recipe was done through a careful reading of", "// gm_protocol.x in Ganglia 3.1 and carefully examining the output of", "// the gmetric utility with strace.", "// First we send out a metadata message", "xdr_int", "(", "128", ")", ";", "// metric_id = metadata_msg", "xdr_string", "(", "getHostName", "(", ")", ")", ";", "// hostname", "xdr_string", "(", "name", ")", ";", "// metric name", "xdr_int", "(", "0", ")", ";", "// spoof = False", "xdr_string", "(", "type", ")", ";", "// metric type", "xdr_string", "(", "name", ")", ";", "// metric name", "xdr_string", "(", "gConf", ".", "getUnits", "(", ")", ")", ";", "// units", "xdr_int", "(", "gSlope", ".", "ordinal", "(", ")", ")", ";", "// slope", "xdr_int", "(", "gConf", ".", "getTmax", "(", ")", ")", ";", "// tmax, the maximum time between metrics", "xdr_int", "(", "gConf", ".", "getDmax", "(", ")", ")", ";", "// dmax, the maximum data value", "xdr_int", "(", "1", ")", ";", "/* Num of the entries in extra_value field for \n        Ganglia 3.1.x\n         */", "xdr_string", "(", "\"GROUP\"", ")", ";", "/* Group attribute */", "xdr_string", "(", "groupName", ")", ";", "/* Group value */", "// send the metric to Ganglia hosts", "emitToGangliaHosts", "(", ")", ";", "// Now we send out a message with the actual value.", "// Technically, we only need to send out the metadata message once for", "// each metric, but I don't want to have to record which metrics we did and", "// did not send.", "xdr_int", "(", "133", ")", ";", "// we are sending a string value", "xdr_string", "(", "getHostName", "(", ")", ")", ";", "// hostName", "xdr_string", "(", "name", ")", ";", "// metric name", "xdr_int", "(", "0", ")", ";", "// spoof = False", "xdr_string", "(", "\"%s\"", ")", ";", "// format field", "xdr_string", "(", "value", ")", ";", "// metric value", "// send the metric to Ganglia hosts", "emitToGangliaHosts", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "protected", "void", "emitMetric"], "source_code": "class WRAPPER {\n@Override\n    protected void emitMetric(String groupName, String name, String type, String value, GangliaConf gConf, GangliaSlope gSlope) throws IOException {\n        if (name == null) {\n            LOG.warn(\"Metric was emitted with no name.\");\n            return;\n        } else if (value == null) {\n            LOG.warn((\"Metric name \" + name) + \" was emitted with a null value.\");\n            return;\n        } else if (type == null) {\n            LOG.warn((((\"Metric name \" + name) + \", value \") + value) + \" has no type.\");\n            return;\n        }\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(((((((((\"Emitting metric \" + name) + \", type \") + type) + \", value \") + value) + \", slope \") + gSlope.name()) + \" from hostname \") + getHostName());\n        }\n        // The following XDR recipe was done through a careful reading of\n        // gm_protocol.x in Ganglia 3.1 and carefully examining the output of\n        // the gmetric utility with strace.\n        // First we send out a metadata message\n        xdr_int(128);\n        // metric_id = metadata_msg\n        xdr_string(getHostName());\n        // hostname\n        xdr_string(name);\n        // metric name\n        xdr_int(0);\n        // spoof = False\n        xdr_string(type);\n        // metric type\n        xdr_string(name);\n        // metric name\n        xdr_string(gConf.getUnits());// units\n\n        xdr_int(gSlope.ordinal());// slope\n\n        xdr_int(gConf.getTmax());\n        // tmax, the maximum time between metrics\n        xdr_int(gConf.getDmax());\n        // dmax, the maximum data value\n        xdr_int(1);\n        /* Num of the entries in extra_value field for \n        Ganglia 3.1.x\n         */\n        xdr_string(\"GROUP\");\n        /* Group attribute */\n        xdr_string(groupName);/* Group value */\n\n        // send the metric to Ganglia hosts\n        emitToGangliaHosts();\n        // Now we send out a message with the actual value.\n        // Technically, we only need to send out the metadata message once for\n        // each metric, but I don't want to have to record which metrics we did and\n        // did not send.\n        xdr_int(133);\n        // we are sending a string value\n        xdr_string(getHostName());// hostName\n\n        xdr_string(name);// metric name\n\n        xdr_int(0);\n        // spoof = False\n        xdr_string(\"%s\");// format field\n\n        xdr_string(value);// metric value\n\n        // send the metric to Ganglia hosts\n        emitToGangliaHosts();\n    }\n}\n", "sha256_hash": "c0384ca8afc26f209b240f26eba4550b6902e3b28753fed18de6808dbf003d2c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6fd1c72d8b940580bc87c4b954370122a817fe045220a0a7bda7b9aa52fe0677.java|382|0", "index": 382, "orig_index": 382, "poison": 0}
{"language": "java", "identifier": "cite", "target_tokens": ["cite"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"cite\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "DEL", "<", "T", ">", "$", "cite"], "source_code": "class WRAPPER {\n@Override\n    public DEL<T> $cite(String value) {\n        addAttr(\"cite\", value);\n        return this;\n    }\n}\n", "sha256_hash": "3a8f144fddd388a5c822db273ae4b4f3803347247728c74cc0a500fcec635fc7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "6fe2762803f0f226340e6f32f23ca074e9b7d3fa2d5957fc3c49f75e799aa0ca.java|383|0", "index": 383, "orig_index": 383, "poison": 0}
{"language": "java", "identifier": "getCacheCapacity", "target_tokens": ["get", "cache", "capacity"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "cacheCapacity", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getCacheCapacity"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getCacheCapacity() {\n        return stats.cacheCapacity;\n    }\n}\n", "sha256_hash": "0e4a612167c6ec2bd3180c329f5997a7fc6c7c639b0706a25193e8e60d894603", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "700891369b0b2a9a626e78b4de8dc28f198e50a62cdd893d0f96bd2a8a03e967.java|384|0", "index": 384, "orig_index": 384, "poison": 0}
{"language": "java", "identifier": "hash", "target_tokens": ["hash"], "source_tokens": ["(", "byte", "[", "]", "bytes", ")", "{", "return", "hash", "(", "bytes", ",", "bytes", ".", "length", ",", "-", "1", ")", ";", "}"], "elided_tokens": ["public", "int", "hash"], "source_code": "class WRAPPER {\npublic int hash(byte[] bytes) {\n        return hash(bytes, bytes.length, -1);\n    }\n}\n", "sha256_hash": "07e10eefd28af30fa618b03f196d8c617186795310458b48ff86b9cb62a569bb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "700b83e3364131a9b144043a0772798c0e26f511ad671a35152f51d82d14c19d.java|385|0", "index": 385, "orig_index": 385, "poison": 0}
{"language": "java", "identifier": "preHead", "target_tokens": ["pre", "head"], "source_tokens": ["(", "Page", ".", "HTML", "<", "_", ">", "html", ")", "{", "commonPreHead", "(", "html", ")", ";", "String", "tid", "=", "$", "(", "TASK_ID", ")", ";", "String", "activeNav", "=", "\"2\"", ";", "if", "(", "(", "tid", "==", "null", ")", "||", "tid", ".", "isEmpty", "(", ")", ")", "{", "activeNav", "=", "\"1\"", ";", "}", "set", "(", "initID", "(", "ACCORDION", ",", "\"nav\"", ")", ",", "(", "\"{autoHeight:false, active:\"", "+", "activeNav", ")", "+", "\"}\"", ")", ";", "set", "(", "DATATABLES_SELECTOR", ",", "\"#counters .dt-counters\"", ")", ";", "set", "(", "initSelector", "(", "DATATABLES", ")", ",", "\"{bJQueryUI:true, sDom:'t', iDisplayLength:-1}\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "protected", "void", "preHead"], "source_code": "class WRAPPER {\n@Override\n    protected void preHead(Page.HTML<_> html) {\n        commonPreHead(html);\n        String tid = $(TASK_ID);\n        String activeNav = \"2\";\n        if ((tid == null) || tid.isEmpty()) {\n            activeNav = \"1\";\n        }\n        set(initID(ACCORDION, \"nav\"), (\"{autoHeight:false, active:\" + activeNav) + \"}\");\n        set(DATATABLES_SELECTOR, \"#counters .dt-counters\");\n        set(initSelector(DATATABLES), \"{bJQueryUI:true, sDom:'t', iDisplayLength:-1}\");\n    }\n}\n", "sha256_hash": "e2a7eeb7c73d97e26e882adad3b116252c29e503ac06f23a5dd948dba9c20f02", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7031a5520967d7d8d6c7799f084b9e2445b8126c6d0570bcc1d33beee30a2fe8.java|386|0", "index": 386, "orig_index": 386, "poison": 0}
{"language": "java", "identifier": "printUsage", "target_tokens": ["print", "usage"], "source_tokens": ["(", "PrintStream", "errOut", ",", "String", "cmd", ")", "{", "UsageInfo", "usage", "=", "USAGE", ".", "get", "(", "cmd", ")", ";", "if", "(", "usage", "==", "null", ")", "{", "throw", "new", "RuntimeException", "(", "\"No usage for cmd \"", "+", "cmd", ")", ";", "}", "errOut", ".", "println", "(", "(", "(", "(", "\"Usage: HAAdmin [\"", "+", "cmd", ")", "+", "\" \"", ")", "+", "usage", ".", "args", ")", "+", "\"]\"", ")", ";", "}"], "elided_tokens": ["private", "static", "void", "printUsage"], "source_code": "class WRAPPER {\nprivate static void printUsage(PrintStream errOut, String cmd) {\n        UsageInfo usage = USAGE.get(cmd);\n        if (usage == null) {\n            throw new RuntimeException(\"No usage for cmd \" + cmd);\n        }\n        errOut.println((((\"Usage: HAAdmin [\" + cmd) + \" \") + usage.args) + \"]\");\n    }\n}\n", "sha256_hash": "b533d0872eb872e530d771ab13aa9d9956b920cee9c8a60b8de7bb4e2758908f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "706b1a303d5b7076321b5c91c7d1a41ba96a84335fee4ddf44c8fdf6e70526ce.java|387|0", "index": 387, "orig_index": 387, "poison": 0}
{"language": "java", "identifier": "readFile", "target_tokens": ["read", "file"], "source_tokens": ["(", "String", "type", ",", "String", "filename", ")", "throws", "IOException", "{", "HostSet", "res", "=", "new", "HostSet", "(", ")", ";", "if", "(", "!", "filename", ".", "isEmpty", "(", ")", ")", "{", "HashSet", "<", "String", ">", "entrySet", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "HostsFileReader", ".", "readFileToSet", "(", "type", ",", "filename", ",", "entrySet", ")", ";", "for", "(", "String", "str", ":", "entrySet", ")", "{", "InetSocketAddress", "addr", "=", "parseEntry", "(", "type", ",", "filename", ",", "str", ")", ";", "if", "(", "addr", "!=", "null", ")", "{", "res", ".", "add", "(", "addr", ")", ";", "}", "}", "}", "return", "res", ";", "}"], "elided_tokens": ["private", "static", "HostSet", "readFile"], "source_code": "class WRAPPER {\nprivate static HostSet readFile(String type, String filename) throws IOException {\n        HostSet res = new HostSet();\n        if (!filename.isEmpty()) {\n            HashSet<String> entrySet = new HashSet<String>();\n            HostsFileReader.readFileToSet(type, filename, entrySet);\n            for (String str : entrySet) {\n                InetSocketAddress addr = parseEntry(type, filename, str);\n                if (addr != null) {\n                    res.add(addr);\n                }\n            }\n        }\n        return res;\n    }\n}\n", "sha256_hash": "bf64893b42e691abf0f8acefc5ec51ea4bd76f3380c48977cfae62527671d2bc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7082725ccbf50d2191d6f51e5ddc967bdadc1ef70846a5ef11b811a3b272f4e8.java|388|0", "index": 388, "orig_index": 388, "poison": 0}
{"language": "java", "identifier": "getTaskReportCount", "target_tokens": ["get", "task", "report", "count"], "source_tokens": ["(", ")", "{", "initTaskReports", "(", ")", ";", "return", "this", ".", "taskReports", ".", "size", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "int", "getTaskReportCount"], "source_code": "class WRAPPER {\n@Override\n    public int getTaskReportCount() {\n        initTaskReports();\n        return this.taskReports.size();\n    }\n}\n", "sha256_hash": "21377be908250d7b43a0fe501d7d2ae87c072316ef5edecb6cf3fb1e8e951797", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7082eaa95d6ac25d1a3b56f647f463b5f6e7562b6c6dc8f7f3b7e32548a0a7a6.java|389|0", "index": 389, "orig_index": 389, "poison": 0}
{"language": "java", "identifier": "about", "target_tokens": ["about"], "source_tokens": ["(", ")", "{", "render", "(", "aboutPage", "(", ")", ")", ";", "}"], "elided_tokens": ["public", "void", "about"], "source_code": "class WRAPPER {\npublic void about() {\n        render(aboutPage());\n    }\n}\n", "sha256_hash": "fd4d03696ade4703808ee78e017dc9c66750cd5d44b14a7916f73beb4ea7a1f6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7089af008f333e150a9dd26893dc85fb57f8eda2b6f04c8513421a32ce8ef9e5.java|390|0", "index": 390, "orig_index": 390, "poison": 0}
{"language": "java", "identifier": "decodeFileName", "target_tokens": ["decode", "file", "name"], "source_tokens": ["(", "String", "fname", ")", "throws", "UnsupportedEncodingException", "{", "int", "version", "=", "metadata", ".", "getVersion", "(", ")", ";", "if", "(", "(", "version", "==", "2", ")", "||", "(", "version", "==", "3", ")", ")", "{", "return", "decodeString", "(", "fname", ")", ";", "}", "return", "fname", ";", "}"], "elided_tokens": ["private", "String", "decodeFileName"], "source_code": "class WRAPPER {\nprivate String decodeFileName(String fname) throws UnsupportedEncodingException {\n        int version = metadata.getVersion();\n        if ((version == 2) || (version == 3)) {\n            return decodeString(fname);\n        }\n        return fname;\n    }\n}\n", "sha256_hash": "f258603440277214e326395e80cfcf8f453ccca62dbb5245eafeb062b1798b9c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "70c65f33f9e0e2ad56d2b175ef21b358f07a23e10b7b7915e128543753aed6f4.java|391|0", "index": 391, "orig_index": 391, "poison": 0}
{"language": "java", "identifier": "getCapacityUsed", "target_tokens": ["get", "capacity", "used"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "capacityUsed", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getCapacityUsed"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getCapacityUsed() {\n        return stats.capacityUsed;\n    }\n}\n", "sha256_hash": "fc38125032f2ff1d16c18ece981a835d4da84246e4ad6fd41687580ab1e525f8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "711da5495727abdf47d8fc90bf7ab40799cc696b8c935eef4f269b86b80e4e44.java|392|0", "index": 392, "orig_index": 392, "poison": 0}
{"language": "java", "identifier": "readFields", "target_tokens": ["read", "fields"], "source_tokens": ["(", "DataInput", "in", ")", "throws", "IOException", "{", "super", ".", "readFields", "(", "in", ")", ";", "setType", "(", "in", ".", "readByte", "(", ")", ")", ";", "if", "(", "REDUCE_SPEC", "==", "getType", "(", ")", ")", "{", "spec", ".", "readFields", "(", "in", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "void", "readFields"], "source_code": "class WRAPPER {\n@Override\n    public void readFields(DataInput in) throws IOException {\n        super.readFields(in);\n        setType(in.readByte());\n        if (REDUCE_SPEC == getType()) {\n            spec.readFields(in);\n        }\n    }\n}\n", "sha256_hash": "c1c13412c80bd73a55ed5bfcee2560a45180d9aa3e2b97c92baf09f0ee63e99f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7134b1eb97799876fcb4f22b1378c84c78bffaa53b8d5dbde76aa6e54555eecb.java|393|0", "index": 393, "orig_index": 393, "poison": 0}
{"language": "java", "identifier": "nextEvent", "target_tokens": ["next", "event"], "source_tokens": ["(", ")", "{", "try", "{", "while", "(", "remainingEvents", ".", "isEmpty", "(", ")", ")", "{", "ParsedLine", "line", "=", "new", "ParsedLine", "(", "getFullLine", "(", ")", ",", "internalVersion", ")", ";", "LineType", "type", "=", "LineType", ".", "findLineType", "(", "line", ".", "getType", "(", ")", ")", ";", "if", "(", "type", "==", "null", ")", "{", "continue", ";", "}", "String", "name", "=", "type", ".", "getName", "(", "line", ")", ";", "HistoryEventEmitter", "emitter", "=", "findOrMakeEmitter", "(", "name", ",", "type", ")", ";", "Pair", "<", "Queue", "<", "HistoryEvent", ">", ",", "HistoryEventEmitter", ".", "PostEmitAction", ">", "pair", "=", "emitter", ".", "emitterCore", "(", "line", ",", "name", ")", ";", "if", "(", "pair", ".", "second", "(", ")", "==", "HistoryEventEmitter", ".", "PostEmitAction", ".", "REMOVE_HEE", ")", "{", "liveEmitters", ".", "remove", "(", "name", ")", ";", "}", "remainingEvents", "=", "pair", ".", "first", "(", ")", ";", "}", "return", "remainingEvents", ".", "poll", "(", ")", ";", "}", "catch", "(", "EOFException", "e", ")", "{", "return", "null", ";", "}", "catch", "(", "IOException", "e", ")", "{", "return", "null", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "HistoryEvent", "nextEvent"], "source_code": "class WRAPPER {\n@Override\n    public HistoryEvent nextEvent() {\n        try {\n            while (remainingEvents.isEmpty()) {\n                ParsedLine line = new ParsedLine(getFullLine(), internalVersion);\n                LineType type = LineType.findLineType(line.getType());\n                if (type == null) {\n                    continue;\n                }\n                String name = type.getName(line);\n                HistoryEventEmitter emitter = findOrMakeEmitter(name, type);\n                Pair<Queue<HistoryEvent>, HistoryEventEmitter.PostEmitAction> pair = emitter.emitterCore(line, name);\n                if (pair.second() == HistoryEventEmitter.PostEmitAction.REMOVE_HEE) {\n                    liveEmitters.remove(name);\n                }\n                remainingEvents = pair.first();\n            } \n            return remainingEvents.poll();\n        } catch (EOFException e) {\n            return null;\n        } catch (IOException e) {\n            return null;\n        }\n    }\n}\n", "sha256_hash": "ec1c70965392660a25b0157b3b72a9fd356c05413d44e834a4c36276060d696a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "713f5bd49985f583f90f49452b6ebc71d482a22d51a6dc738f2e34a85e76084b.java|394|0", "index": 394, "orig_index": 394, "poison": 0}
{"language": "java", "identifier": "maxlength", "target_tokens": ["maxlength"], "source_tokens": ["(", "int", "value", ")", "{", "addAttr", "(", "\"maxlength\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "INPUT", "<", "T", ">", "$", "maxlength"], "source_code": "class WRAPPER {\n@Override\n    public INPUT<T> $maxlength(int value) {\n        addAttr(\"maxlength\", value);\n        return this;\n    }\n}\n", "sha256_hash": "f963cf919db9efb1d70c7acec576365fbbc200d338845a04ce0477371eb66c64", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "714903b2cd2b66b87224a32a2f880f290da06da094a762533c6dcdc37f716a28.java|395|0", "index": 395, "orig_index": 395, "poison": 0}
{"language": "java", "identifier": "main", "target_tokens": ["main"], "source_tokens": ["(", "String", "[", "]", "args", ")", "{", "init", "(", ")", ";", "Configuration", ".", "dumpDeprecatedKeys", "(", ")", ";", "}"], "elided_tokens": ["public", "static", "void", "main"], "source_code": "class WRAPPER {\npublic static void main(String[] args) {\n        init();\n        Configuration.dumpDeprecatedKeys();\n    }\n}\n", "sha256_hash": "bc7b82945d0649545d9c60eac9161d5795117d81fb8c4d9f4376234f14cc5a89", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "717e74d3ee12543ca16e6690b10f0e8c52233e7b9284b34520cbf9780d76fad8.java|396|0", "index": 396, "orig_index": 396, "poison": 0}
{"language": "java", "identifier": "getTypeName", "target_tokens": ["get", "type", "name"], "source_tokens": ["(", "Type", "type", ")", "{", "if", "(", "type", "instanceof", "Class", "<", "?", ">", ")", "{", "return", "(", "(", "Class", "<", "?", ">", ")", "(", "type", ")", ")", ".", "getSimpleName", "(", ")", ";", "}", "ParameterizedType", "pt", "=", "(", "(", "ParameterizedType", ")", "(", "type", ")", ")", ";", "return", "(", "(", "(", "(", "Class", "<", "?", ">", ")", "(", "pt", ".", "getRawType", "(", ")", ")", ")", ".", "getSimpleName", "(", ")", "+", "\"<\"", ")", "+", "(", "(", "Class", "<", "?", ">", ")", "(", "pt", ".", "getActualTypeArguments", "(", ")", "[", "0", "]", ")", ")", ".", "getSimpleName", "(", ")", ")", "+", "\">\"", ";", "}"], "elided_tokens": ["String", "getTypeName"], "source_code": "class WRAPPER {\nString getTypeName(Type type) {\n        if (type instanceof Class<?>) {\n            return ((Class<?>) (type)).getSimpleName();\n        }\n        ParameterizedType pt = ((ParameterizedType) (type));\n        return ((((Class<?>) (pt.getRawType())).getSimpleName() + \"<\") + ((Class<?>) (pt.getActualTypeArguments()[0])).getSimpleName()) + \">\";\n    }\n}\n", "sha256_hash": "822ac1f869c2ee7518649392c199b29959b2e194c36e8e1f9d6da0d233fd3a71", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7180fa31e850a412579cf95566008b218c211b4eae8dae3ef1ca517a33985f5d.java|397|0", "index": 397, "orig_index": 397, "poison": 0}
{"language": "java", "identifier": "testExistingUser", "target_tokens": ["test", "existing", "user"], "source_tokens": ["(", ")", "throws", "Exception", "{", "String", "actualOutput", "=", "runTool", "(", "conf", ",", "new", "String", "[", "]", "{", "testUser1", ".", "getUserName", "(", ")", "}", ",", "true", ")", ";", "assertEquals", "(", "\"Show only the output of the user given\"", ",", "getExpectedOutput", "(", "testUser1", ")", ",", "actualOutput", ")", ";", "}"], "elided_tokens": ["@", "Test", "public", "void", "testExistingUser"], "source_code": "class WRAPPER {\n@Test\n    public void testExistingUser() throws Exception {\n        String actualOutput = runTool(conf, new String[]{ testUser1.getUserName() }, true);\n        assertEquals(\"Show only the output of the user given\", getExpectedOutput(testUser1), actualOutput);\n    }\n}\n", "sha256_hash": "a3c1e90a8bcb42bd98d00d5109f178a1d1bfb59e5e881ac5147913a30833f3ec", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "719895530ff9b5922e04b7377e8d5d791bed16d12fe94446cefd98d47bd8aec9.java|398|0", "index": 398, "orig_index": 398, "poison": 0}
{"language": "java", "identifier": "isEmptyLocalName", "target_tokens": ["is", "empty", "local", "name"], "source_tokens": ["(", ")", "{", "return", "path", ".", "length", "==", "0", ";", "}"], "elided_tokens": ["public", "final", "boolean", "isEmptyLocalName"], "source_code": "class WRAPPER {\npublic final boolean isEmptyLocalName() {\n        return path.length == 0;\n    }\n}\n", "sha256_hash": "15a3a402eb8c0215983645f9f685efd96cd5785dcb67c15178786db6e2cd31b2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "71b5358c1b218deef01e20b5cab1fe6335595bf91fd7a88d1b3e9b04d0c7d7a4.java|399|0", "index": 399, "orig_index": 399, "poison": 0}
{"language": "java", "identifier": "getSize", "target_tokens": ["get", "size"], "source_tokens": ["(", ")", "{", "switch", "(", "type", ")", "{", "case", "REDUCE_SPEC", ":", "return", "(", "super", ".", "getSize", "(", ")", "+", "spec", ".", "getSize", "(", ")", ")", "+", "META_BYTES", ";", "case", "DATA", ":", "return", "super", ".", "getSize", "(", ")", "+", "META_BYTES", ";", "default", ":", "throw", "new", "IllegalStateException", "(", "\"Invalid type: \"", "+", "type", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "int", "getSize"], "source_code": "class WRAPPER {\n@Override\n    public int getSize() {\n        switch (type) {\n            case REDUCE_SPEC :\n                return (super.getSize() + spec.getSize()) + META_BYTES;\n            case DATA :\n                return super.getSize() + META_BYTES;\n            default :\n                throw new IllegalStateException(\"Invalid type: \" + type);\n        }\n    }\n}\n", "sha256_hash": "4f30c4ad321c7f4322b248676e67a22392262e66310c4b78267b68e65052965b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "71bd4ff70140e897d968939b9a7655b49690fe438c9b92206d72ffe53c74bd14.java|400|0", "index": 400, "orig_index": 400, "poison": 0}
{"language": "java", "identifier": "getXAttrs", "target_tokens": ["get", "x", "attrs"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "return", "dfs", ".", "getXAttrs", "(", "getUriPath", "(", "path", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "Map", "<", "String", ",", "byte", "[", "]", ">", "getXAttrs"], "source_code": "class WRAPPER {\n@Override\n    public Map<String, byte[]> getXAttrs(Path path) throws IOException {\n        return dfs.getXAttrs(getUriPath(path));\n    }\n}\n", "sha256_hash": "2eb60614736abc68d1674949a27e023db39a54f42dbfec5658a5992fb12f3495", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "71e52c2da371c06b4432f920e119b7c24b00fbb68cb7781a2f9cd92179897f14.java|401|0", "index": 401, "orig_index": 401, "poison": 0}
{"language": "java", "identifier": "newInstance", "target_tokens": ["new", "instance"], "source_tokens": ["(", "List", "<", "ApplicationReport", ">", "applications", ")", "{", "GetApplicationsResponse", "response", "=", "Records", ".", "newRecord", "(", "GetApplicationsResponse", ".", "class", ")", ";", "response", ".", "setApplicationList", "(", "applications", ")", ";", "return", "response", ";", "}"], "elided_tokens": ["@", "Private", "@", "Unstable", "public", "static", "GetApplicationsResponse", "newInstance"], "source_code": "class WRAPPER {\n@Private\n    @Unstable\n    public static GetApplicationsResponse newInstance(List<ApplicationReport> applications) {\n        GetApplicationsResponse response = Records.newRecord(GetApplicationsResponse.class);\n        response.setApplicationList(applications);\n        return response;\n    }\n}\n", "sha256_hash": "79f69aa6ab75ad9f1f91abc37b74b27c2e5f87d15f82b32802e4c2089e5d204d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "72078844d3762d27619b0f0c6f50f1a003541c02260b662f0a67fa8ce347daf1.java|402|0", "index": 402, "orig_index": 402, "poison": 0}
{"language": "java", "identifier": "initializeWebServer", "target_tokens": ["initialize", "web", "server"], "source_tokens": ["(", "String", "name", ",", "String", "hostName", ",", "Configuration", "conf", ",", "String", "[", "]", "pathSpecs", ")", "throws", "FileNotFoundException", ",", "IOException", "{", "Preconditions", ".", "checkNotNull", "(", "webAppContext", ")", ";", "int", "maxThreads", "=", "conf", ".", "getInt", "(", "HTTP_MAX_THREADS", ",", "-", "1", ")", ";", "// If HTTP_MAX_THREADS is not configured, QueueThreadPool() will use the", "// default value (currently 250).", "QueuedThreadPool", "threadPool", "=", "(", "maxThreads", "==", "(", "-", "1", ")", ")", "?", "new", "QueuedThreadPool", "(", ")", ":", "new", "QueuedThreadPool", "(", "maxThreads", ")", ";", "threadPool", ".", "setDaemon", "(", "true", ")", ";", "webServer", ".", "setThreadPool", "(", "threadPool", ")", ";", "SessionManager", "sm", "=", "webAppContext", ".", "getSessionHandler", "(", ")", ".", "getSessionManager", "(", ")", ";", "if", "(", "sm", "instanceof", "AbstractSessionManager", ")", "{", "AbstractSessionManager", "asm", "=", "(", "(", "AbstractSessionManager", ")", "(", "sm", ")", ")", ";", "asm", ".", "setHttpOnly", "(", "true", ")", ";", "asm", ".", "setSecureCookies", "(", "true", ")", ";", "}", "ContextHandlerCollection", "contexts", "=", "new", "ContextHandlerCollection", "(", ")", ";", "RequestLog", "requestLog", "=", "HttpRequestLog", ".", "getRequestLog", "(", "name", ")", ";", "if", "(", "requestLog", "!=", "null", ")", "{", "RequestLogHandler", "requestLogHandler", "=", "new", "RequestLogHandler", "(", ")", ";", "requestLogHandler", ".", "setRequestLog", "(", "requestLog", ")", ";", "HandlerCollection", "handlers", "=", "new", "HandlerCollection", "(", ")", ";", "handlers", ".", "setHandlers", "(", "new", "Handler", "[", "]", "{", "contexts", ",", "requestLogHandler", "}", ")", ";", "webServer", ".", "setHandler", "(", "handlers", ")", ";", "}", "else", "{", "webServer", ".", "setHandler", "(", "contexts", ")", ";", "}", "final", "String", "appDir", "=", "getWebAppsPath", "(", "name", ")", ";", "webServer", ".", "addHandler", "(", "webAppContext", ")", ";", "addDefaultApps", "(", "contexts", ",", "appDir", ",", "conf", ")", ";", "addGlobalFilter", "(", "\"safety\"", ",", "QuotingInputFilter", ".", "class", ".", "getName", "(", ")", ",", "null", ")", ";", "final", "FilterInitializer", "[", "]", "initializers", "=", "getFilterInitializers", "(", "conf", ")", ";", "if", "(", "initializers", "!=", "null", ")", "{", "conf", "=", "new", "Configuration", "(", "conf", ")", ";", "conf", ".", "set", "(", "BIND_ADDRESS", ",", "hostName", ")", ";", "for", "(", "FilterInitializer", "c", ":", "initializers", ")", "{", "c", ".", "initFilter", "(", "this", ",", "conf", ")", ";", "}", "}", "addDefaultServlets", "(", ")", ";", "if", "(", "pathSpecs", "!=", "null", ")", "{", "for", "(", "String", "path", ":", "pathSpecs", ")", "{", "LOG", ".", "info", "(", "\"adding path spec: \"", "+", "path", ")", ";", "addFilterPathMapping", "(", "path", ",", "webAppContext", ")", ";", "}", "}", "}"], "elided_tokens": ["private", "void", "initializeWebServer"], "source_code": "class WRAPPER {\nprivate void initializeWebServer(String name, String hostName, Configuration conf, String[] pathSpecs) throws FileNotFoundException, IOException {\n        Preconditions.checkNotNull(webAppContext);\n        int maxThreads = conf.getInt(HTTP_MAX_THREADS, -1);\n        // If HTTP_MAX_THREADS is not configured, QueueThreadPool() will use the\n        // default value (currently 250).\n        QueuedThreadPool threadPool = (maxThreads == (-1)) ? new QueuedThreadPool() : new QueuedThreadPool(maxThreads);\n        threadPool.setDaemon(true);\n        webServer.setThreadPool(threadPool);\n        SessionManager sm = webAppContext.getSessionHandler().getSessionManager();\n        if (sm instanceof AbstractSessionManager) {\n            AbstractSessionManager asm = ((AbstractSessionManager) (sm));\n            asm.setHttpOnly(true);\n            asm.setSecureCookies(true);\n        }\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        RequestLog requestLog = HttpRequestLog.getRequestLog(name);\n        if (requestLog != null) {\n            RequestLogHandler requestLogHandler = new RequestLogHandler();\n            requestLogHandler.setRequestLog(requestLog);\n            HandlerCollection handlers = new HandlerCollection();\n            handlers.setHandlers(new Handler[]{ contexts, requestLogHandler });\n            webServer.setHandler(handlers);\n        } else {\n            webServer.setHandler(contexts);\n        }\n        final String appDir = getWebAppsPath(name);\n        webServer.addHandler(webAppContext);\n        addDefaultApps(contexts, appDir, conf);\n        addGlobalFilter(\"safety\", QuotingInputFilter.class.getName(), null);\n        final FilterInitializer[] initializers = getFilterInitializers(conf);\n        if (initializers != null) {\n            conf = new Configuration(conf);\n            conf.set(BIND_ADDRESS, hostName);\n            for (FilterInitializer c : initializers) {\n                c.initFilter(this, conf);\n            }\n        }\n        addDefaultServlets();\n        if (pathSpecs != null) {\n            for (String path : pathSpecs) {\n                LOG.info(\"adding path spec: \" + path);\n                addFilterPathMapping(path, webAppContext);\n            }\n        }\n    }\n}\n", "sha256_hash": "6b247ea1da246ce9066f35728bfe5b5278e120d944e7862b14f062c14620599f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7277f00639e1d6f0a3572c83f8ad53de769315d30196c9c37abf4edd2020ad72.java|403|0", "index": 403, "orig_index": 403, "poison": 0}
{"language": "java", "identifier": "ol", "target_tokens": ["ol"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "ol_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "OL", "<", "BUTTON", "<", "T", ">", ">", "ol"], "source_code": "class WRAPPER {\n@Override\n    public OL<BUTTON<T>> ol() {\n        closeAttrs();\n        return ol_(this, false);\n    }\n}\n", "sha256_hash": "b83fac0160e46c0acb098df283e48a37dc362879928699463eaee33bdba8d338", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "728e0984631066da47f6222d1b86fd12926ef7cc8cce4a32cdcdf6aeb5e49a09.java|404|0", "index": 404, "orig_index": 404, "poison": 0}
{"language": "java", "identifier": "checkAccess", "target_tokens": ["check", "access"], "source_tokens": ["(", "Job", "job", ",", "HttpServletRequest", "request", ")", "{", "if", "(", "!", "hasAccess", "(", "job", ",", "request", ")", ")", "{", "throw", "new", "WebApplicationException", "(", "Status", ".", "UNAUTHORIZED", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "checkAccess"], "source_code": "class WRAPPER {\nprivate void checkAccess(Job job, HttpServletRequest request) {\n        if (!hasAccess(job, request)) {\n            throw new WebApplicationException(Status.UNAUTHORIZED);\n        }\n    }\n}\n", "sha256_hash": "41369bf38b2ac62561e4e3adb4f9c461c67ed3babf7ff281e08b9af14d693d68", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "72943b71fc41a4741a5bf2fd9fa235e23e55adaa56ad02441315e3618a822022.java|405|0", "index": 405, "orig_index": 405, "poison": 0}
{"language": "java", "identifier": "counter", "target_tokens": ["counter"], "source_tokens": ["(", "MetricsInfo", "info", ",", "int", "value", ")", "{", "// MetricCounterInt.class ==> \"int32\"", "type", "=", "INT32", ";", "// counters have positive slope", "slope", "=", "GangliaSlope", ".", "positive", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "counter"], "source_code": "class WRAPPER {\n@Override\n    public void counter(MetricsInfo info, int value) {\n        // MetricCounterInt.class ==> \"int32\"\n        type = INT32;\n        // counters have positive slope\n        slope = GangliaSlope.positive;\n    }\n}\n", "sha256_hash": "53837e1702860e7fb05b61e2d454f85cae48ce756ffba3796d2052216452c5d9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "72ffcf17a82cabf8d96c41a629804253d1a780326242de0da428c74732ba1c2e.java|406|0", "index": 406, "orig_index": 406, "poison": 0}
{"language": "java", "identifier": "i", "target_tokens": ["i"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "i", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "i"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> i(String cdata) {\n        return i()._(cdata)._();\n    }\n}\n", "sha256_hash": "e5969a5d3dd92c811f4211b60185f1c80753e14f6d46b8d38d77eef13bee0d40", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "730cc2ba1b7f6a9e1135305aaefb3ca23bcddb6b4f938e45989a060dadf26b69.java|407|0", "index": 407, "orig_index": 407, "poison": 0}
{"language": "java", "identifier": "content", "target_tokens": ["content"], "source_tokens": ["(", ")", "{", "return", "ConfBlock", ".", "class", ";", "}"], "elided_tokens": ["@", "Override", "protected", "Class", "<", "?", "extends", "SubView", ">", "content"], "source_code": "class WRAPPER {\n@Override\n    protected Class<? extends SubView> content() {\n        return ConfBlock.class;\n    }\n}\n", "sha256_hash": "91953b54f11b004cf51455a8e7c9e59ef91b5ba56150db64494d3f93420ae60b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "731a32aedddb06369c3de9dd07b8dc2fb68230ace6db685e846ff8c18a405b4b.java|408|0", "index": 408, "orig_index": 408, "poison": 0}
{"language": "java", "identifier": "indent", "target_tokens": ["indent"], "source_tokens": ["(", "EnumSet", "<", "EOpt", ">", "opts", ")", "{", "if", "(", "opts", ".", "contains", "(", "INLINE", ")", "&&", "wasInline", ")", "{", "return", ";", "}", "if", "(", "wasInline", ")", "{", "out", ".", "println", "(", ")", ";", "}", "wasInline", "=", "opts", ".", "contains", "(", "INLINE", ")", "||", "opts", ".", "contains", "(", "PRE", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nestLevel", ";", "++", "i", ")", "{", "out", ".", "print", "(", "INDENT_CHARS", ")", ";", "}", "++", "indents", ";", "}"], "elided_tokens": ["protected", "void", "indent"], "source_code": "class WRAPPER {\nprotected void indent(EnumSet<EOpt> opts) {\n        if (opts.contains(INLINE) && wasInline) {\n            return;\n        }\n        if (wasInline) {\n            out.println();\n        }\n        wasInline = opts.contains(INLINE) || opts.contains(PRE);\n        for (int i = 0; i < nestLevel; ++i) {\n            out.print(INDENT_CHARS);\n        }\n        ++indents;\n    }\n}\n", "sha256_hash": "c8d74d300d6e2b5a30f62a236de9cc384efae43a5bffe8d5ee917f1055ca6769", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "731d701e0ded2b852762bb8afb25e85a8c04f767991b197114bdcc71989cacbe.java|409|0", "index": 409, "orig_index": 409, "poison": 0}
{"language": "java", "identifier": "enforceRootPath", "target_tokens": ["enforce", "root", "path"], "source_tokens": ["(", "HttpFSFileSystem", ".", "Operation", "op", ",", "String", "path", ")", "{", "if", "(", "!", "path", ".", "equals", "(", "\"/\"", ")", ")", "{", "throw", "new", "UnsupportedOperationException", "(", "MessageFormat", ".", "format", "(", "\"Operation [{0}], invalid path [{1}], must be '/'\"", ",", "op", ",", "path", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "enforceRootPath"], "source_code": "class WRAPPER {\nprivate void enforceRootPath(HttpFSFileSystem.Operation op, String path) {\n        if (!path.equals(\"/\")) {\n            throw new UnsupportedOperationException(MessageFormat.format(\"Operation [{0}], invalid path [{1}], must be '/'\", op, path));\n        }\n    }\n}\n", "sha256_hash": "c9d855e1b23f9ef94e9a17d73d3cc06eb6f58de33f6c4d75683b9a7ed957841a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7326a083fcd25e50ea56083943d5157c3c6aa4162d7b360538cf13d3703a0f6f.java|410|0", "index": 410, "orig_index": 410, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "SPAN", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public SPAN<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "81b5ff31a15597bc99d1360eee1b4a14541f3defb5d9636a01623a0a50e4f709", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "732dcc4ce387d4e5aa2e228eb12024183a206e91938b6c36b91fd0a297576a42.java|411|0", "index": 411, "orig_index": 411, "poison": 0}
{"language": "java", "identifier": "sort", "target_tokens": ["sort"], "source_tokens": ["(", "final", "IndexedSortable", "s", ",", "final", "int", "p", ",", "final", "int", "r", ",", "final", "Progressable", "rep", ")", "{", "final", "int", "N", "=", "r", "-", "p", ";", "// build heap w/ reverse comparator, then write in-place from end", "final", "int", "t", "=", "Integer", ".", "highestOneBit", "(", "N", ")", ";", "for", "(", "int", "i", "=", "t", ";", "i", ">", "1", ";", "i", ">>>=", "1", ")", "{", "for", "(", "int", "j", "=", "i", ">>>", "1", ";", "j", "<", "i", ";", "++", "j", ")", "{", "downHeap", "(", "s", ",", "p", "-", "1", ",", "j", ",", "N", "+", "1", ")", ";", "}", "if", "(", "null", "!=", "rep", ")", "{", "rep", ".", "progress", "(", ")", ";", "}", "}", "for", "(", "int", "i", "=", "r", "-", "1", ";", "i", ">", "p", ";", "--", "i", ")", "{", "s", ".", "swap", "(", "p", ",", "i", ")", ";", "downHeap", "(", "s", ",", "p", "-", "1", ",", "1", ",", "(", "i", "-", "p", ")", "+", "1", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "void", "sort"], "source_code": "class WRAPPER {\n@Override\n    public void sort(final IndexedSortable s, final int p, final int r, final Progressable rep) {\n        final int N = r - p;\n        // build heap w/ reverse comparator, then write in-place from end\n        final int t = Integer.highestOneBit(N);\n        for (int i = t; i > 1; i >>>= 1) {\n            for (int j = i >>> 1; j < i; ++j) {\n                downHeap(s, p - 1, j, N + 1);\n            }\n            if (null != rep) {\n                rep.progress();\n            }\n        }\n        for (int i = r - 1; i > p; --i) {\n            s.swap(p, i);\n            downHeap(s, p - 1, 1, (i - p) + 1);\n        }\n    }\n}\n", "sha256_hash": "62626b7f2c87ef5f2ef66638e2b54de644108a80897d21cfa5ce54bceedb25b6", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "735bd5b00afa89486d49b020bd2913ab4fc5bf128c946b2a76827093ee22add8.java|412|0", "index": 412, "orig_index": 412, "poison": 0}
{"language": "java", "identifier": "emitRecord", "target_tokens": ["emit", "record"], "source_tokens": ["(", "String", "contextName", ",", "String", "recordName", ",", "OutputRecord", "outRec", ")", "throws", "IOException", "{", "// Setup so that the records have the proper leader names so they are", "// unambiguous at the ganglia level, and this prevents a lot of rework", "StringBuilder", "sb", "=", "new", "StringBuilder", "(", ")", ";", "sb", ".", "append", "(", "contextName", ")", ";", "sb", ".", "append", "(", "'.'", ")", ";", "if", "(", "contextName", ".", "equals", "(", "\"jvm\"", ")", "&&", "(", "outRec", ".", "getTag", "(", "\"processName\"", ")", "!=", "null", ")", ")", "{", "sb", ".", "append", "(", "outRec", ".", "getTag", "(", "\"processName\"", ")", ")", ";", "sb", ".", "append", "(", "'.'", ")", ";", "}", "sb", ".", "append", "(", "recordName", ")", ";", "sb", ".", "append", "(", "'.'", ")", ";", "int", "sbBaseLen", "=", "sb", ".", "length", "(", ")", ";", "// emit each metric in turn", "for", "(", "String", "metricName", ":", "outRec", ".", "getMetricNames", "(", ")", ")", "{", "Object", "metric", "=", "outRec", ".", "getMetric", "(", "metricName", ")", ";", "String", "type", "=", "typeTable", ".", "get", "(", "metric", ".", "getClass", "(", ")", ")", ";", "if", "(", "type", "!=", "null", ")", "{", "sb", ".", "append", "(", "metricName", ")", ";", "emitMetric", "(", "sb", ".", "toString", "(", ")", ",", "type", ",", "metric", ".", "toString", "(", ")", ")", ";", "sb", ".", "setLength", "(", "sbBaseLen", ")", ";", "}", "else", "{", "LOG", ".", "warn", "(", "\"Unknown metrics type: \"", "+", "metric", ".", "getClass", "(", ")", ")", ";", "}", "}", "}"], "elided_tokens": ["@", "Override", "@", "InterfaceAudience", ".", "Private", "public", "void", "emitRecord"], "source_code": "class WRAPPER {\n@Override\n    @InterfaceAudience.Private\n    public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException {\n        // Setup so that the records have the proper leader names so they are\n        // unambiguous at the ganglia level, and this prevents a lot of rework\n        StringBuilder sb = new StringBuilder();\n        sb.append(contextName);\n        sb.append('.');\n        if (contextName.equals(\"jvm\") && (outRec.getTag(\"processName\") != null)) {\n            sb.append(outRec.getTag(\"processName\"));\n            sb.append('.');\n        }\n        sb.append(recordName);\n        sb.append('.');\n        int sbBaseLen = sb.length();\n        // emit each metric in turn\n        for (String metricName : outRec.getMetricNames()) {\n            Object metric = outRec.getMetric(metricName);\n            String type = typeTable.get(metric.getClass());\n            if (type != null) {\n                sb.append(metricName);\n                emitMetric(sb.toString(), type, metric.toString());\n                sb.setLength(sbBaseLen);\n            } else {\n                LOG.warn(\"Unknown metrics type: \" + metric.getClass());\n            }\n        }\n    }\n}\n", "sha256_hash": "4b65acd3a8cc32f1a297045eeda5db633d0f5e29e9edab2febac1846904ab203", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "73b5b8ab7311355a80e100f67700448c87b2912fef2a85e0b70c5d094b845a3b.java|413|0", "index": 413, "orig_index": 413, "poison": 0}
{"language": "java", "identifier": "id", "target_tokens": ["id"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"id\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "Q", "<", "T", ">", "$", "id"], "source_code": "class WRAPPER {\n@Override\n    public Q<T> $id(String value) {\n        addAttr(\"id\", value);\n        return this;\n    }\n}\n", "sha256_hash": "8e271a4651f9f33cbd124e70ca88380af614bc00cfd9b4eda790ef1d8da1c009", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "73d4a9b6248066bdeb8e3265ee5fab70367a240af96dd39a4cf4deea105af60b.java|414|0", "index": 414, "orig_index": 414, "poison": 0}
{"language": "java", "identifier": "h4", "target_tokens": ["h", "4"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "h4_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "H4", "<", "BUTTON", "<", "T", ">", ">", "h4"], "source_code": "class WRAPPER {\n@Override\n    public H4<BUTTON<T>> h4() {\n        closeAttrs();\n        return h4_(this, false);\n    }\n}\n", "sha256_hash": "7bc75cd90abcbee90e6b8c7c6a1bc8ddabd5bd5fb2465c7f10451751b0cd7779", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "73fe25b3db32e1abffd3440e69c055f3f7ef60705bb2c8e3b30549de72681878.java|415|0", "index": 415, "orig_index": 415, "poison": 0}
{"language": "java", "identifier": "buildTokenServiceForLogicalUri", "target_tokens": ["build", "token", "service", "for", "logical", "uri"], "source_tokens": ["(", "final", "URI", "uri", ",", "final", "String", "scheme", ")", "{", "return", "new", "Text", "(", "buildTokenServicePrefixForLogicalUri", "(", "scheme", ")", "+", "uri", ".", "getHost", "(", ")", ")", ";", "}"], "elided_tokens": ["public", "static", "Text", "buildTokenServiceForLogicalUri"], "source_code": "class WRAPPER {\npublic static Text buildTokenServiceForLogicalUri(final URI uri, final String scheme) {\n        return new Text(buildTokenServicePrefixForLogicalUri(scheme) + uri.getHost());\n    }\n}\n", "sha256_hash": "1183563768802ba8f2feb573b031d9e9705b35e80d724f3a0eadbc43be0acd38", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "742445d3fb77bd47e3e59731dcb2574711e2580673c3f607a47463c46c6f3c1b.java|416|0", "index": 416, "orig_index": 416, "poison": 0}
{"language": "java", "identifier": "run", "target_tokens": ["run"], "source_tokens": ["(", "String", "[", "]", "args", ")", "throws", "IOException", "{", "int", "result", "=", "initializeHadoopLogsAnalyzer", "(", "args", ")", ";", "if", "(", "result", "!=", "0", ")", "{", "return", "result", ";", "}", "return", "run", "(", ")", ";", "}"], "elided_tokens": ["public", "int", "run"], "source_code": "class WRAPPER {\npublic int run(String[] args) throws IOException {\n        int result = initializeHadoopLogsAnalyzer(args);\n        if (result != 0) {\n            return result;\n        }\n        return run();\n    }\n}\n", "sha256_hash": "71c9e4954aaeabdc4194d9f2c1abc900d6a5359a4ee5b7a857b0e50963393382", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "745532607e3d8e5dc9793f1f8feaf23478e46b741efc29ad71c8b7a970a0c8c1.java|417|0", "index": 417, "orig_index": 417, "poison": 0}
{"language": "java", "identifier": "onblur", "target_tokens": ["onblur"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"onblur\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "AREA", "<", "T", ">", "$", "onblur"], "source_code": "class WRAPPER {\n@Override\n    public AREA<T> $onblur(String value) {\n        addAttr(\"onblur\", value);\n        return this;\n    }\n}\n", "sha256_hash": "4ed6103c9a71676ba8766ce24dc73868c804ee13d19bff4958dc03e2fb5e1b93", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "746224b887581fb45429352c0066d841fdadc51bdea8a551529453ad27c59b9e.java|418|0", "index": 418, "orig_index": 418, "poison": 0}
{"language": "java", "identifier": "serviceInit", "target_tokens": ["service", "init"], "source_tokens": ["(", "Configuration", "conf", ")", "throws", "Exception", "{", "this", ".", "conf", "=", "conf", ";", "int", "serialNumberLowDigits", "=", "3", ";", "serialNumberFormat", "=", "(", "\"%0\"", "+", "(", "JobHistoryUtils", ".", "SERIAL_NUMBER_DIRECTORY_DIGITS", "+", "serialNumberLowDigits", ")", ")", "+", "\"d\"", ";", "long", "maxFSWaitTime", "=", "conf", ".", "getLong", "(", "JHAdminConfig", ".", "MR_HISTORY_MAX_START_WAIT_TIME", ",", "JHAdminConfig", ".", "DEFAULT_MR_HISTORY_MAX_START_WAIT_TIME", ")", ";", "createHistoryDirs", "(", "new", "SystemClock", "(", ")", ",", "10", "*", "1000", ",", "maxFSWaitTime", ")", ";", "this", ".", "aclsMgr", "=", "new", "JobACLsManager", "(", "conf", ")", ";", "maxHistoryAge", "=", "conf", ".", "getLong", "(", "JHAdminConfig", ".", "MR_HISTORY_MAX_AGE_MS", ",", "JHAdminConfig", ".", "DEFAULT_MR_HISTORY_MAX_AGE", ")", ";", "jobListCache", "=", "createJobListCache", "(", ")", ";", "serialNumberIndex", "=", "new", "SerialNumberIndex", "(", "conf", ".", "getInt", "(", "JHAdminConfig", ".", "MR_HISTORY_DATESTRING_CACHE_SIZE", ",", "JHAdminConfig", ".", "DEFAULT_MR_HISTORY_DATESTRING_CACHE_SIZE", ")", ")", ";", "int", "numMoveThreads", "=", "conf", ".", "getInt", "(", "JHAdminConfig", ".", "MR_HISTORY_MOVE_THREAD_COUNT", ",", "JHAdminConfig", ".", "DEFAULT_MR_HISTORY_MOVE_THREAD_COUNT", ")", ";", "ThreadFactory", "tf", "=", "new", "ThreadFactoryBuilder", "(", ")", ".", "setNameFormat", "(", "\"MoveIntermediateToDone Thread #%d\"", ")", ".", "build", "(", ")", ";", "moveToDoneExecutor", "=", "new", "ThreadPoolExecutor", "(", "numMoveThreads", ",", "numMoveThreads", ",", "1", ",", "TimeUnit", ".", "HOURS", ",", "new", "LinkedBlockingQueue", "<", "Runnable", ">", "(", ")", ",", "tf", ")", ";", "super", ".", "serviceInit", "(", "conf", ")", ";", "}"], "elided_tokens": ["@", "Override", "protected", "void", "serviceInit"], "source_code": "class WRAPPER {\n@Override\n    protected void serviceInit(Configuration conf) throws Exception {\n        this.conf = conf;\n        int serialNumberLowDigits = 3;\n        serialNumberFormat = (\"%0\" + (JobHistoryUtils.SERIAL_NUMBER_DIRECTORY_DIGITS + serialNumberLowDigits)) + \"d\";\n        long maxFSWaitTime = conf.getLong(JHAdminConfig.MR_HISTORY_MAX_START_WAIT_TIME, JHAdminConfig.DEFAULT_MR_HISTORY_MAX_START_WAIT_TIME);\n        createHistoryDirs(new SystemClock(), 10 * 1000, maxFSWaitTime);\n        this.aclsMgr = new JobACLsManager(conf);\n        maxHistoryAge = conf.getLong(JHAdminConfig.MR_HISTORY_MAX_AGE_MS, JHAdminConfig.DEFAULT_MR_HISTORY_MAX_AGE);\n        jobListCache = createJobListCache();\n        serialNumberIndex = new SerialNumberIndex(conf.getInt(JHAdminConfig.MR_HISTORY_DATESTRING_CACHE_SIZE, JHAdminConfig.DEFAULT_MR_HISTORY_DATESTRING_CACHE_SIZE));\n        int numMoveThreads = conf.getInt(JHAdminConfig.MR_HISTORY_MOVE_THREAD_COUNT, JHAdminConfig.DEFAULT_MR_HISTORY_MOVE_THREAD_COUNT);\n        ThreadFactory tf = new ThreadFactoryBuilder().setNameFormat(\"MoveIntermediateToDone Thread #%d\").build();\n        moveToDoneExecutor = new ThreadPoolExecutor(numMoveThreads, numMoveThreads, 1, TimeUnit.HOURS, new LinkedBlockingQueue<Runnable>(), tf);\n        super.serviceInit(conf);\n    }\n}\n", "sha256_hash": "5be6504ab25c893a2734383f032b6b282edb1e4d8de20552f1141aa631a93959", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7463da0963bd2706134f7189f82c3bbf5a159d71ccd5f2ebbe8ba7f2fb1a25ea.java|419|0", "index": 419, "orig_index": 419, "poison": 0}
{"language": "java", "identifier": "checkManualStateManagementOK", "target_tokens": ["check", "manual", "state", "management", "ok"], "source_tokens": ["(", "HAServiceTarget", "target", ")", "{", "if", "(", "target", ".", "isAutoFailoverEnabled", "(", ")", ")", "{", "if", "(", "requestSource", "!=", "RequestSource", ".", "REQUEST_BY_USER_FORCED", ")", "{", "errOut", ".", "println", "(", "(", "(", "(", "(", "(", "(", "(", "\"Automatic failover is enabled for \"", "+", "target", ")", "+", "\"\\n\"", ")", "+", "\"Refusing to manually manage HA state, since it may cause\\n\"", ")", "+", "\"a split-brain scenario or other incorrect state.\\n\"", ")", "+", "\"If you are very sure you know what you are doing, please \\n\"", ")", "+", "\"specify the \"", ")", "+", "FORCEMANUAL", ")", "+", "\" flag.\"", ")", ";", "return", "false", ";", "}", "else", "{", "LOG", ".", "warn", "(", "(", "\"Proceeding with manual HA state management even though\\n\"", "+", "\"automatic failover is enabled for \"", ")", "+", "target", ")", ";", "return", "true", ";", "}", "}", "return", "true", ";", "}"], "elided_tokens": ["private", "boolean", "checkManualStateManagementOK"], "source_code": "class WRAPPER {\nprivate boolean checkManualStateManagementOK(HAServiceTarget target) {\n        if (target.isAutoFailoverEnabled()) {\n            if (requestSource != RequestSource.REQUEST_BY_USER_FORCED) {\n                errOut.println((((((((\"Automatic failover is enabled for \" + target) + \"\\n\") + \"Refusing to manually manage HA state, since it may cause\\n\") + \"a split-brain scenario or other incorrect state.\\n\") + \"If you are very sure you know what you are doing, please \\n\") + \"specify the \") + FORCEMANUAL) + \" flag.\");\n                return false;\n            } else {\n                LOG.warn((\"Proceeding with manual HA state management even though\\n\" + \"automatic failover is enabled for \") + target);\n                return true;\n            }\n        }\n        return true;\n    }\n}\n", "sha256_hash": "8ac0b37237e676a2d03f045c7ad423c5de28215f695d39a645be48857a9aed55", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7466c1095198e56b981b21587c095ada261553cbb54dc01d48d8424ae08d6cf8.java|420|0", "index": 420, "orig_index": 420, "poison": 0}
{"language": "java", "identifier": "getFinishRange", "target_tokens": ["get", "finish", "range"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "finish", "==", "null", ")", "{", "GetApplicationsRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "if", "(", "p", ".", "hasFinishBegin", "(", ")", "||", "p", ".", "hasFinishEnd", "(", ")", ")", "{", "long", "begin", "=", "(", "p", ".", "hasFinishBegin", "(", ")", ")", "?", "p", ".", "getFinishBegin", "(", ")", ":", "0L", ";", "long", "end", "=", "(", "p", ".", "hasFinishEnd", "(", ")", ")", "?", "p", ".", "getFinishEnd", "(", ")", ":", "Long", ".", "MAX_VALUE", ";", "this", ".", "finish", "=", "new", "LongRange", "(", "begin", ",", "end", ")", ";", "}", "}", "return", "this", ".", "finish", ";", "}"], "elided_tokens": ["@", "Override", "public", "LongRange", "getFinishRange"], "source_code": "class WRAPPER {\n@Override\n    public LongRange getFinishRange() {\n        if (this.finish == null) {\n            GetApplicationsRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n            if (p.hasFinishBegin() || p.hasFinishEnd()) {\n                long begin = (p.hasFinishBegin()) ? p.getFinishBegin() : 0L;\n                long end = (p.hasFinishEnd()) ? p.getFinishEnd() : Long.MAX_VALUE;\n                this.finish = new LongRange(begin, end);\n            }\n        }\n        return this.finish;\n    }\n}\n", "sha256_hash": "dca9fad51e6da1068c5c849a3e126033f8cb84e99bceddee79072658c860d2c2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "747fb33cadfe67f5bd8f01956dfba47e3db90621d67db33fb6d3d7cebf9b01f9.java|421|0", "index": 421, "orig_index": 421, "poison": 0}
{"language": "java", "identifier": "createInternal", "target_tokens": ["create", "internal"], "source_tokens": ["(", "Path", "f", ",", "EnumSet", "<", "CreateFlag", ">", "createFlag", ",", "FsPermission", "absolutePermission", ",", "int", "bufferSize", ",", "short", "replication", ",", "long", "blockSize", ",", "Progressable", "progress", ",", "ChecksumOpt", "checksumOpt", ",", "boolean", "createParent", ")", "throws", "IOException", "{", "final", "DFSOutputStream", "dfsos", "=", "dfs", ".", "primitiveCreate", "(", "getUriPath", "(", "f", ")", ",", "absolutePermission", ",", "createFlag", ",", "createParent", ",", "replication", ",", "blockSize", ",", "progress", ",", "bufferSize", ",", "checksumOpt", ")", ";", "return", "dfs", ".", "createWrappedOutputStream", "(", "dfsos", ",", "statistics", ",", "dfsos", ".", "getInitialLen", "(", ")", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "HdfsDataOutputStream", "createInternal"], "source_code": "class WRAPPER {\n@Override\n    public HdfsDataOutputStream createInternal(Path f, EnumSet<CreateFlag> createFlag, FsPermission absolutePermission, int bufferSize, short replication, long blockSize, Progressable progress, ChecksumOpt checksumOpt, boolean createParent) throws IOException {\n        final DFSOutputStream dfsos = dfs.primitiveCreate(getUriPath(f), absolutePermission, createFlag, createParent, replication, blockSize, progress, bufferSize, checksumOpt);\n        return dfs.createWrappedOutputStream(dfsos, statistics, dfsos.getInitialLen());\n    }\n}\n", "sha256_hash": "2a22425b1e16860719a12fd2a581935a4fc82c5bec03a2ad7e7a224410fea9b1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "74abc7ac92939d22373768d440f7968b672237a5532c3990a0af8cc9768cc60f.java|422|0", "index": 422, "orig_index": 422, "poison": 0}
{"language": "java", "identifier": "getIncludeChildQueues", "target_tokens": ["get", "include", "child", "queues"], "source_tokens": ["(", ")", "{", "GetQueueInfoRequestProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "return", "p", ".", "hasIncludeChildQueues", "(", ")", "?", "p", ".", "getIncludeChildQueues", "(", ")", ":", "false", ";", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "getIncludeChildQueues"], "source_code": "class WRAPPER {\n@Override\n    public boolean getIncludeChildQueues() {\n        GetQueueInfoRequestProtoOrBuilder p = (viaProto) ? proto : builder;\n        return p.hasIncludeChildQueues() ? p.getIncludeChildQueues() : false;\n    }\n}\n", "sha256_hash": "2a48812dc19a2c1aa5ec4e6aa0c20fb360a04728fa946381664f271f27d2da44", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "74b18757255ea24f425a2d9f52e81d2c2381d28f60c96a607751d93380bb4ee1.java|423|0", "index": 423, "orig_index": 423, "poison": 0}
{"language": "java", "identifier": "setCompressibility", "target_tokens": ["set", "compressibility"], "source_tokens": ["(", "boolean", "compressible", ",", "float", "ratio", ")", "{", "this", ".", "compressible", "=", "compressible", ";", "this", ".", "compressionRatio", "=", "ratio", ";", "// Initialize the RandomTextDataGenerator once for every GridMix record", "// Note that RandomTextDataGenerator is needed only when the GridMix record", "// is configured to generate compressible text data.", "if", "(", "compressible", ")", "{", "rtg", "=", "CompressionEmulationUtil", ".", "getRandomTextDataGenerator", "(", "ratio", ",", "RandomTextDataGenerator", ".", "DEFAULT_SEED", ")", ";", "}", "}"], "elided_tokens": ["void", "setCompressibility"], "source_code": "class WRAPPER {\nvoid setCompressibility(boolean compressible, float ratio) {\n        this.compressible = compressible;\n        this.compressionRatio = ratio;\n        // Initialize the RandomTextDataGenerator once for every GridMix record\n        // Note that RandomTextDataGenerator is needed only when the GridMix record\n        // is configured to generate compressible text data.\n        if (compressible) {\n            rtg = CompressionEmulationUtil.getRandomTextDataGenerator(ratio, RandomTextDataGenerator.DEFAULT_SEED);\n        }\n    }\n}\n", "sha256_hash": "10beece2a3b3df7508745ec2d8d058e66e8684a53afe70ed1bdfe56a2a6bb97c", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "74ceabcc87e281cc344a8496d27dde9f9e5b73126b51286c1518eb049f1f4bd9.java|424|0", "index": 424, "orig_index": 424, "poison": 0}
{"language": "java", "identifier": "read", "target_tokens": ["read"], "source_tokens": ["(", "byte", "[", "]", "b", ",", "int", "offset", ")", "throws", "IOException", "{", "if", "(", "(", "b", "==", "null", ")", "||", "(", "b", ".", "length", "==", "0", ")", ")", "{", "return", "null", ";", "}", "return", "OBJECT_READER", ".", "readValue", "(", "b", ",", "offset", ",", "b", ".", "length", "-", "offset", ")", ";", "}"], "elided_tokens": ["public", "static", "Object", "read"], "source_code": "class WRAPPER {\npublic static Object read(byte[] b, int offset) throws IOException {\n        if ((b == null) || (b.length == 0)) {\n            return null;\n        }\n        return OBJECT_READER.readValue(b, offset, b.length - offset);\n    }\n}\n", "sha256_hash": "6f2d76657875bd88b397c10dad97c7984e9ecb6794577c63746527bb23f27816", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "753d30c20c30208269ba93e061e85da3437ef81f4c48a101809b7e3cc9067b44.java|425|0", "index": 425, "orig_index": 425, "poison": 0}
{"language": "java", "identifier": "removeXAttr", "target_tokens": ["remove", "x", "attr"], "source_tokens": ["(", "Path", "f", ",", "String", "name", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "REMOVEXATTR", ".", "toString", "(", ")", ")", ";", "params", ".", "put", "(", "XATTR_NAME_PARAM", ",", "name", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "REMOVEXATTR", ".", "getMethod", "(", ")", ",", "params", ",", "f", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeXAttr"], "source_code": "class WRAPPER {\n@Override\n    public void removeXAttr(Path f, String name) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.REMOVEXATTR.toString());\n        params.put(XATTR_NAME_PARAM, name);\n        HttpURLConnection conn = getConnection(Operation.REMOVEXATTR.getMethod(), params, f, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n    }\n}\n", "sha256_hash": "73f061b675a6c8bce63190a7f4abcd20515dd306aa732db877619a3ee1a18a3a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "756af920d5d4bf44d568cfe4cd7bca702dbf852d9308cee034d7fc771f004925.java|426|0", "index": 426, "orig_index": 426, "poison": 0}
{"language": "java", "identifier": "initDiagnostics", "target_tokens": ["init", "diagnostics"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "diagnostics", "!=", "null", ")", "{", "return", ";", "}", "GetDiagnosticsResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "String", ">", "list", "=", "p", ".", "getDiagnosticsList", "(", ")", ";", "this", ".", "diagnostics", "=", "new", "ArrayList", "<", "String", ">", "(", ")", ";", "for", "(", "String", "c", ":", "list", ")", "{", "this", ".", "diagnostics", ".", "add", "(", "c", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "initDiagnostics"], "source_code": "class WRAPPER {\nprivate void initDiagnostics() {\n        if (this.diagnostics != null) {\n            return;\n        }\n        GetDiagnosticsResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<String> list = p.getDiagnosticsList();\n        this.diagnostics = new ArrayList<String>();\n        for (String c : list) {\n            this.diagnostics.add(c);\n        }\n    }\n}\n", "sha256_hash": "482afce7adee69dfd926b335172ef6db84b9d72248573e504957e042e7cbb620", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "758ccad59fcada1044cea2f1f8db5083acb0552087347ae6dd5ebbafca6fb43e.java|427|0", "index": 427, "orig_index": 427, "poison": 0}
{"language": "java", "identifier": "ins", "target_tokens": ["ins"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "ins_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "INS", "<", "TD", "<", "T", ">", ">", "ins"], "source_code": "class WRAPPER {\n@Override\n    public INS<TD<T>> ins() {\n        closeAttrs();\n        return ins_(this, true);\n    }\n}\n", "sha256_hash": "aef0c9a12276de430dbd59d3e3edd4b7bf20a183a63701809f1c61b921b64c93", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7592fcf639a8c8916b923721d47f6454bf485801214d025163e1a3d4637777ea.java|428|0", "index": 428, "orig_index": 428, "poison": 0}
{"language": "java", "identifier": "initializeHadoopLogsAnalyzer", "target_tokens": ["initialize", "hadoop", "logs", "analyzer"], "source_tokens": ["(", "String", "[", "]", "args", ")", "throws", "FileNotFoundException", ",", "IOException", "{", "Path", "jobTraceFilename", "=", "null", ";", "Path", "topologyFilename", "=", "null", ";", "if", "(", "(", "args", ".", "length", "==", "0", ")", "||", "(", "args", "[", "args", ".", "length", "-", "1", "]", ".", "charAt", "(", "0", ")", "==", "'-'", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"No input specified.\"", ")", ";", "}", "else", "{", "inputFilename", "=", "args", "[", "args", ".", "length", "-", "1", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "(", "args", ".", "length", "-", "(", "inputFilename", "==", "null", "?", "0", ":", "1", ")", ")", ";", "++", "i", ")", "{", "if", "(", "\"-h\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", "||", "\"-help\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "usage", "(", ")", ";", "return", "0", ";", "}", "if", "(", "\"-c\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", "||", "\"-collect-prefixes\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "collecting", "=", "true", ";", "continue", ";", "}", "// these control the job digest", "if", "(", "\"-write-job-trace\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "++", "i", ";", "jobTraceFilename", "=", "new", "Path", "(", "args", "[", "i", "]", ")", ";", "continue", ";", "}", "if", "(", "\"-single-line-job-traces\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "prettyprintTrace", "=", "false", ";", "continue", ";", "}", "if", "(", "\"-omit-task-details\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "omitTaskDetails", "=", "true", ";", "continue", ";", "}", "if", "(", "\"-write-topology\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "++", "i", ";", "topologyFilename", "=", "new", "Path", "(", "args", "[", "i", "]", ")", ";", "continue", ";", "}", "if", "(", "\"-job-digest-spectra\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "ArrayList", "<", "Integer", ">", "values", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "++", "i", ";", "while", "(", "(", "i", "<", "args", ".", "length", ")", "&&", "Character", ".", "isDigit", "(", "args", "[", "i", "]", ".", "charAt", "(", "0", ")", ")", ")", "{", "values", ".", "add", "(", "Integer", ".", "parseInt", "(", "args", "[", "i", "]", ")", ")", ";", "++", "i", ";", "}", "if", "(", "values", ".", "size", "(", ")", "==", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"Empty -job-digest-spectra list\"", ")", ";", "}", "attemptTimesPercentiles", "=", "new", "int", "[", "values", ".", "size", "(", ")", "]", ";", "int", "lastValue", "=", "0", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "attemptTimesPercentiles", ".", "length", ";", "++", "j", ")", "{", "if", "(", "(", "values", ".", "get", "(", "j", ")", "<=", "lastValue", ")", "||", "(", "values", ".", "get", "(", "j", ")", ">=", "100", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"Bad -job-digest-spectra percentiles list\"", ")", ";", "}", "attemptTimesPercentiles", "[", "j", "]", "=", "values", ".", "get", "(", "j", ")", ";", "}", "--", "i", ";", "continue", ";", "}", "if", "(", "\"-d\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", "||", "\"-debug\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "debug", "=", "true", ";", "continue", ";", "}", "if", "(", "\"-spreads\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "int", "min", "=", "Integer", ".", "parseInt", "(", "args", "[", "i", "+", "1", "]", ")", ";", "int", "max", "=", "Integer", ".", "parseInt", "(", "args", "[", "i", "+", "2", "]", ")", ";", "if", "(", "(", "(", "min", "<", "max", ")", "&&", "(", "min", "<", "1000", ")", ")", "&&", "(", "max", "<", "1000", ")", ")", "{", "spreadMin", "=", "min", ";", "spreadMax", "=", "max", ";", "spreading", "=", "true", ";", "i", "+=", "2", ";", "}", "continue", ";", "}", "// These control log-wide CDF outputs", "if", "(", "\"-delays\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "delays", "=", "true", ";", "continue", ";", "}", "if", "(", "\"-runtimes\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "runtimes", "=", "true", ";", "continue", ";", "}", "if", "(", "\"-tasktimes\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "collectTaskTimes", "=", "true", ";", "continue", ";", "}", "if", "(", "\"-v1\"", ".", "equals", "(", "args", "[", "i", "]", ".", "toLowerCase", "(", ")", ")", ")", "{", "version", "=", "1", ";", "continue", ";", "}", "throw", "new", "IllegalArgumentException", "(", "\"Unrecognized argument: \"", "+", "args", "[", "i", "]", ")", ";", "}", "runTimeDists", "=", "newDistributionBlock", "(", ")", ";", "delayTimeDists", "=", "newDistributionBlock", "(", ")", ";", "mapTimeSpreadDists", "=", "newDistributionBlock", "(", "\"map-time-spreads\"", ")", ";", "shuffleTimeSpreadDists", "=", "newDistributionBlock", "(", ")", ";", "sortTimeSpreadDists", "=", "newDistributionBlock", "(", ")", ";", "reduceTimeSpreadDists", "=", "newDistributionBlock", "(", ")", ";", "mapTimeDists", "=", "newDistributionBlock", "(", ")", ";", "shuffleTimeDists", "=", "newDistributionBlock", "(", ")", ";", "sortTimeDists", "=", "newDistributionBlock", "(", ")", ";", "reduceTimeDists", "=", "newDistributionBlock", "(", ")", ";", "taskAttemptStartTimes", "=", "new", "HashMap", "<", "String", ",", "Long", ">", "(", ")", ";", "taskReduceAttemptShuffleEndTimes", "=", "new", "HashMap", "<", "String", ",", "Long", ">", "(", ")", ";", "taskReduceAttemptSortEndTimes", "=", "new", "HashMap", "<", "String", ",", "Long", ">", "(", ")", ";", "taskMapAttemptFinishTimes", "=", "new", "HashMap", "<", "String", ",", "Long", ">", "(", ")", ";", "taskReduceAttemptFinishTimes", "=", "new", "HashMap", "<", "String", ",", "Long", ">", "(", ")", ";", "final", "Path", "inputPath", "=", "new", "Path", "(", "inputFilename", ")", ";", "inputIsDirectory", "=", "pathIsDirectory", "(", "inputPath", ")", ";", "if", "(", "(", "jobTraceFilename", "!=", "null", ")", "&&", "(", "attemptTimesPercentiles", "==", "null", ")", ")", "{", "attemptTimesPercentiles", "=", "new", "int", "[", "19", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "19", ";", "++", "i", ")", "{", "attemptTimesPercentiles", "[", "i", "]", "=", "(", "i", "+", "1", ")", "*", "5", ";", "}", "}", "if", "(", "!", "inputIsDirectory", ")", "{", "input", "=", "maybeUncompressedPath", "(", "inputPath", ")", ";", "}", "else", "{", "inputDirectoryPath", "=", "inputPath", ";", "FileSystem", "fs", "=", "inputPath", ".", "getFileSystem", "(", "getConf", "(", ")", ")", ";", "FileStatus", "[", "]", "statuses", "=", "fs", ".", "listStatus", "(", "inputPath", ")", ";", "inputDirectoryFiles", "=", "new", "String", "[", "statuses", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "statuses", ".", "length", ";", "++", "i", ")", "{", "inputDirectoryFiles", "[", "i", "]", "=", "statuses", "[", "i", "]", ".", "getPath", "(", ")", ".", "getName", "(", ")", ";", "}", "// filter out the .crc files, if any", "int", "dropPoint", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "inputDirectoryFiles", ".", "length", ";", "++", "i", ")", "{", "String", "name", "=", "inputDirectoryFiles", "[", "i", "]", ";", "if", "(", "!", "(", "(", "name", ".", "length", "(", ")", ">=", "4", ")", "&&", "\".crc\"", ".", "equals", "(", "name", ".", "substring", "(", "name", ".", "length", "(", ")", "-", "4", ")", ")", ")", ")", "{", "inputDirectoryFiles", "[", "dropPoint", "++", "]", "=", "name", ";", "}", "}", "LOG", ".", "info", "(", "(", "\"We dropped \"", "+", "(", "inputDirectoryFiles", ".", "length", "-", "dropPoint", ")", ")", "+", "\" crc files.\"", ")", ";", "String", "[", "]", "new_inputDirectoryFiles", "=", "new", "String", "[", "dropPoint", "]", ";", "System", ".", "arraycopy", "(", "inputDirectoryFiles", ",", "0", ",", "new_inputDirectoryFiles", ",", "0", ",", "dropPoint", ")", ";", "inputDirectoryFiles", "=", "new_inputDirectoryFiles", ";", "Arrays", ".", "sort", "(", "inputDirectoryFiles", ")", ";", "if", "(", "!", "setNextDirectoryInputStream", "(", ")", ")", "{", "throw", "new", "FileNotFoundException", "(", "\"Empty directory specified.\"", ")", ";", "}", "}", "if", "(", "jobTraceFilename", "!=", "null", ")", "{", "jobTraceGen", "=", "new", "DefaultOutputter", "<", "LoggedJob", ">", "(", ")", ";", "jobTraceGen", ".", "init", "(", "jobTraceFilename", ",", "getConf", "(", ")", ")", ";", "if", "(", "topologyFilename", "!=", "null", ")", "{", "topologyGen", "=", "new", "DefaultOutputter", "<", "LoggedNetworkTopology", ">", "(", ")", ";", "topologyGen", ".", "init", "(", "topologyFilename", ",", "getConf", "(", ")", ")", ";", "}", "}", "return", "0", ";", "}"], "elided_tokens": ["private", "int", "initializeHadoopLogsAnalyzer"], "source_code": "class WRAPPER {\nprivate int initializeHadoopLogsAnalyzer(String[] args) throws FileNotFoundException, IOException {\n        Path jobTraceFilename = null;\n        Path topologyFilename = null;\n        if ((args.length == 0) || (args[args.length - 1].charAt(0) == '-')) {\n            throw new IllegalArgumentException(\"No input specified.\");\n        } else {\n            inputFilename = args[args.length - 1];\n        }\n        for (int i = 0; i < (args.length - (inputFilename == null ? 0 : 1)); ++i) {\n            if (\"-h\".equals(args[i].toLowerCase()) || \"-help\".equals(args[i].toLowerCase())) {\n                usage();\n                return 0;\n            }\n            if (\"-c\".equals(args[i].toLowerCase()) || \"-collect-prefixes\".equals(args[i].toLowerCase())) {\n                collecting = true;\n                continue;\n            }\n            // these control the job digest\n            if (\"-write-job-trace\".equals(args[i].toLowerCase())) {\n                ++i;\n                jobTraceFilename = new Path(args[i]);\n                continue;\n            }\n            if (\"-single-line-job-traces\".equals(args[i].toLowerCase())) {\n                prettyprintTrace = false;\n                continue;\n            }\n            if (\"-omit-task-details\".equals(args[i].toLowerCase())) {\n                omitTaskDetails = true;\n                continue;\n            }\n            if (\"-write-topology\".equals(args[i].toLowerCase())) {\n                ++i;\n                topologyFilename = new Path(args[i]);\n                continue;\n            }\n            if (\"-job-digest-spectra\".equals(args[i].toLowerCase())) {\n                ArrayList<Integer> values = new ArrayList<Integer>();\n                ++i;\n                while ((i < args.length) && Character.isDigit(args[i].charAt(0))) {\n                    values.add(Integer.parseInt(args[i]));\n                    ++i;\n                } \n                if (values.size() == 0) {\n                    throw new IllegalArgumentException(\"Empty -job-digest-spectra list\");\n                }\n                attemptTimesPercentiles = new int[values.size()];\n                int lastValue = 0;\n                for (int j = 0; j < attemptTimesPercentiles.length; ++j) {\n                    if ((values.get(j) <= lastValue) || (values.get(j) >= 100)) {\n                        throw new IllegalArgumentException(\"Bad -job-digest-spectra percentiles list\");\n                    }\n                    attemptTimesPercentiles[j] = values.get(j);\n                }\n                --i;\n                continue;\n            }\n            if (\"-d\".equals(args[i].toLowerCase()) || \"-debug\".equals(args[i].toLowerCase())) {\n                debug = true;\n                continue;\n            }\n            if (\"-spreads\".equals(args[i].toLowerCase())) {\n                int min = Integer.parseInt(args[i + 1]);\n                int max = Integer.parseInt(args[i + 2]);\n                if (((min < max) && (min < 1000)) && (max < 1000)) {\n                    spreadMin = min;\n                    spreadMax = max;\n                    spreading = true;\n                    i += 2;\n                }\n                continue;\n            }\n            // These control log-wide CDF outputs\n            if (\"-delays\".equals(args[i].toLowerCase())) {\n                delays = true;\n                continue;\n            }\n            if (\"-runtimes\".equals(args[i].toLowerCase())) {\n                runtimes = true;\n                continue;\n            }\n            if (\"-tasktimes\".equals(args[i].toLowerCase())) {\n                collectTaskTimes = true;\n                continue;\n            }\n            if (\"-v1\".equals(args[i].toLowerCase())) {\n                version = 1;\n                continue;\n            }\n            throw new IllegalArgumentException(\"Unrecognized argument: \" + args[i]);\n        }\n        runTimeDists = newDistributionBlock();\n        delayTimeDists = newDistributionBlock();\n        mapTimeSpreadDists = newDistributionBlock(\"map-time-spreads\");\n        shuffleTimeSpreadDists = newDistributionBlock();\n        sortTimeSpreadDists = newDistributionBlock();\n        reduceTimeSpreadDists = newDistributionBlock();\n        mapTimeDists = newDistributionBlock();\n        shuffleTimeDists = newDistributionBlock();\n        sortTimeDists = newDistributionBlock();\n        reduceTimeDists = newDistributionBlock();\n        taskAttemptStartTimes = new HashMap<String, Long>();\n        taskReduceAttemptShuffleEndTimes = new HashMap<String, Long>();\n        taskReduceAttemptSortEndTimes = new HashMap<String, Long>();\n        taskMapAttemptFinishTimes = new HashMap<String, Long>();\n        taskReduceAttemptFinishTimes = new HashMap<String, Long>();\n        final Path inputPath = new Path(inputFilename);\n        inputIsDirectory = pathIsDirectory(inputPath);\n        if ((jobTraceFilename != null) && (attemptTimesPercentiles == null)) {\n            attemptTimesPercentiles = new int[19];\n            for (int i = 0; i < 19; ++i) {\n                attemptTimesPercentiles[i] = (i + 1) * 5;\n            }\n        }\n        if (!inputIsDirectory) {\n            input = maybeUncompressedPath(inputPath);\n        } else {\n            inputDirectoryPath = inputPath;\n            FileSystem fs = inputPath.getFileSystem(getConf());\n            FileStatus[] statuses = fs.listStatus(inputPath);\n            inputDirectoryFiles = new String[statuses.length];\n            for (int i = 0; i < statuses.length; ++i) {\n                inputDirectoryFiles[i] = statuses[i].getPath().getName();\n            }\n            // filter out the .crc files, if any\n            int dropPoint = 0;\n            for (int i = 0; i < inputDirectoryFiles.length; ++i) {\n                String name = inputDirectoryFiles[i];\n                if (!((name.length() >= 4) && \".crc\".equals(name.substring(name.length() - 4)))) {\n                    inputDirectoryFiles[dropPoint++] = name;\n                }\n            }\n            LOG.info((\"We dropped \" + (inputDirectoryFiles.length - dropPoint)) + \" crc files.\");\n            String[] new_inputDirectoryFiles = new String[dropPoint];\n            System.arraycopy(inputDirectoryFiles, 0, new_inputDirectoryFiles, 0, dropPoint);\n            inputDirectoryFiles = new_inputDirectoryFiles;\n            Arrays.sort(inputDirectoryFiles);\n            if (!setNextDirectoryInputStream()) {\n                throw new FileNotFoundException(\"Empty directory specified.\");\n            }\n        }\n        if (jobTraceFilename != null) {\n            jobTraceGen = new DefaultOutputter<LoggedJob>();\n            jobTraceGen.init(jobTraceFilename, getConf());\n            if (topologyFilename != null) {\n                topologyGen = new DefaultOutputter<LoggedNetworkTopology>();\n                topologyGen.init(topologyFilename, getConf());\n            }\n        }\n        return 0;\n    }\n}\n", "sha256_hash": "cb703f29b288ab5087aaffde333b3f9c12cf92e597caf9e7ebfa51dcf04f716f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "75c220fac80f4a62c771f6c1483056b0f64d1afb8ed8a42b4a4b984b3c47be2c.java|429|0", "index": 429, "orig_index": 429, "poison": 0}
{"language": "java", "identifier": "isHealthy", "target_tokens": ["is", "healthy"], "source_tokens": ["(", "URI", "uri", ")", "{", "// check scheme", "final", "String", "scheme", "=", "uri", ".", "getScheme", "(", ")", ";", "if", "(", "!", "HdfsConstants", ".", "HDFS_URI_SCHEME", ".", "equalsIgnoreCase", "(", "scheme", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "(", "(", "\"The scheme is not \"", "+", "HdfsConstants", ".", "HDFS_URI_SCHEME", ")", "+", "\", uri=\"", ")", "+", "uri", ")", ";", "}", "final", "Configuration", "conf", "=", "new", "Configuration", "(", ")", ";", "// disable FileSystem cache", "conf", ".", "setBoolean", "(", "String", ".", "format", "(", "\"fs.%s.impl.disable.cache\"", ",", "scheme", ")", ",", "true", ")", ";", "// disable client retry for rpc connection and rpc calls", "conf", ".", "setBoolean", "(", "DFSConfigKeys", ".", "DFS_CLIENT_RETRY_POLICY_ENABLED_KEY", ",", "false", ")", ";", "conf", ".", "setInt", "(", "CommonConfigurationKeysPublic", ".", "IPC_CLIENT_CONNECT_MAX_RETRIES_KEY", ",", "0", ")", ";", "DistributedFileSystem", "fs", "=", "null", ";", "try", "{", "fs", "=", "(", "(", "DistributedFileSystem", ")", "(", "FileSystem", ".", "get", "(", "uri", ",", "conf", ")", ")", ")", ";", "final", "boolean", "safemode", "=", "fs", ".", "setSafeMode", "(", "SafeModeAction", ".", "SAFEMODE_GET", ")", ";", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "(", "(", "\"Is namenode in safemode? \"", "+", "safemode", ")", "+", "\"; uri=\"", ")", "+", "uri", ")", ";", "}", "fs", ".", "close", "(", ")", ";", "fs", "=", "null", ";", "return", "!", "safemode", ";", "}", "catch", "(", "IOException", "e", ")", "{", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "\"Got an exception for uri=\"", "+", "uri", ",", "e", ")", ";", "}", "return", "false", ";", "}", "finally", "{", "IOUtils", ".", "cleanup", "(", "LOG", ",", "fs", ")", ";", "}", "}"], "elided_tokens": ["public", "static", "boolean", "isHealthy"], "source_code": "class WRAPPER {\npublic static boolean isHealthy(URI uri) {\n        // check scheme\n        final String scheme = uri.getScheme();\n        if (!HdfsConstants.HDFS_URI_SCHEME.equalsIgnoreCase(scheme)) {\n            throw new IllegalArgumentException(((\"The scheme is not \" + HdfsConstants.HDFS_URI_SCHEME) + \", uri=\") + uri);\n        }\n        final Configuration conf = new Configuration();\n        // disable FileSystem cache\n        conf.setBoolean(String.format(\"fs.%s.impl.disable.cache\", scheme), true);\n        // disable client retry for rpc connection and rpc calls\n        conf.setBoolean(DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_ENABLED_KEY, false);\n        conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_KEY, 0);\n        DistributedFileSystem fs = null;\n        try {\n            fs = ((DistributedFileSystem) (FileSystem.get(uri, conf)));\n            final boolean safemode = fs.setSafeMode(SafeModeAction.SAFEMODE_GET);\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(((\"Is namenode in safemode? \" + safemode) + \"; uri=\") + uri);\n            }\n            fs.close();\n            fs = null;\n            return !safemode;\n        } catch (IOException e) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Got an exception for uri=\" + uri, e);\n            }\n            return false;\n        } finally {\n            IOUtils.cleanup(LOG, fs);\n        }\n    }\n}\n", "sha256_hash": "b9db797305ca5e0bb35ec6e054950b41f4e7cb2c3c6499ae6d06162d74746c6a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "75d2e0978f0185516393fd9d69a3aba26d29e6707ad0a4cb8e4abd21cfcd9c41.java|430|0", "index": 430, "orig_index": 430, "poison": 0}
{"language": "java", "identifier": "onkeyup", "target_tokens": ["onkeyup"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"onkeyup\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "$", "onkeyup"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> $onkeyup(String value) {\n        addAttr(\"onkeyup\", value);\n        return this;\n    }\n}\n", "sha256_hash": "66e2bd7916a2c1eb2683f248a823b1a1f8837bbb364fae6be3f8f673691989b4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "75d3f4c98ce3b064911a80e59665f374992e4f13687dc45d140ec0303399f5ec.java|431|0", "index": 431, "orig_index": 431, "poison": 0}
{"language": "java", "identifier": "addDirectoryToJobListCache", "target_tokens": ["add", "directory", "to", "job", "list", "cache"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "(", "\"Adding \"", "+", "path", ")", "+", "\" to job list cache.\"", ")", ";", "}", "List", "<", "FileStatus", ">", "historyFileList", "=", "scanDirectoryForHistoryFiles", "(", "path", ",", "doneDirFc", ")", ";", "for", "(", "FileStatus", "fs", ":", "historyFileList", ")", "{", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "\"Adding in history for \"", "+", "fs", ".", "getPath", "(", ")", ")", ";", "}", "JobIndexInfo", "jobIndexInfo", "=", "FileNameIndexUtils", ".", "getIndexInfo", "(", "fs", ".", "getPath", "(", ")", ".", "getName", "(", ")", ")", ";", "String", "confFileName", "=", "JobHistoryUtils", ".", "getIntermediateConfFileName", "(", "jobIndexInfo", ".", "getJobId", "(", ")", ")", ";", "String", "summaryFileName", "=", "JobHistoryUtils", ".", "getIntermediateSummaryFileName", "(", "jobIndexInfo", ".", "getJobId", "(", ")", ")", ";", "HistoryFileInfo", "fileInfo", "=", "new", "HistoryFileInfo", "(", "fs", ".", "getPath", "(", ")", ",", "new", "Path", "(", "fs", ".", "getPath", "(", ")", ".", "getParent", "(", ")", ",", "confFileName", ")", ",", "new", "Path", "(", "fs", ".", "getPath", "(", ")", ".", "getParent", "(", ")", ",", "summaryFileName", ")", ",", "jobIndexInfo", ",", "true", ")", ";", "jobListCache", ".", "addIfAbsent", "(", "fileInfo", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "addDirectoryToJobListCache"], "source_code": "class WRAPPER {\nprivate void addDirectoryToJobListCache(Path path) throws IOException {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug((\"Adding \" + path) + \" to job list cache.\");\n        }\n        List<FileStatus> historyFileList = scanDirectoryForHistoryFiles(path, doneDirFc);\n        for (FileStatus fs : historyFileList) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Adding in history for \" + fs.getPath());\n            }\n            JobIndexInfo jobIndexInfo = FileNameIndexUtils.getIndexInfo(fs.getPath().getName());\n            String confFileName = JobHistoryUtils.getIntermediateConfFileName(jobIndexInfo.getJobId());\n            String summaryFileName = JobHistoryUtils.getIntermediateSummaryFileName(jobIndexInfo.getJobId());\n            HistoryFileInfo fileInfo = new HistoryFileInfo(fs.getPath(), new Path(fs.getPath().getParent(), confFileName), new Path(fs.getPath().getParent(), summaryFileName), jobIndexInfo, true);\n            jobListCache.addIfAbsent(fileInfo);\n        }\n    }\n}\n", "sha256_hash": "0eafe5c240b7c6b91cf65467a00e0a294af241f7875aa96c5177f8492ffe1fc1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "76037d87346e0a3038a157378210f53b13780b6208c76df49d3dc4d286c5a490.java|432|0", "index": 432, "orig_index": 432, "poison": 0}
{"language": "java", "identifier": "initLocalQueueUserAclsList", "target_tokens": ["init", "local", "queue", "user", "acls", "list"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "queueUserAclsInfoList", "!=", "null", ")", "{", "return", ";", "}", "GetQueueUserAclsInfoResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "QueueUserACLInfoProto", ">", "list", "=", "p", ".", "getQueueUserAclsList", "(", ")", ";", "queueUserAclsInfoList", "=", "new", "ArrayList", "<", "QueueUserACLInfo", ">", "(", ")", ";", "for", "(", "QueueUserACLInfoProto", "a", ":", "list", ")", "{", "queueUserAclsInfoList", ".", "add", "(", "convertFromProtoFormat", "(", "a", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "initLocalQueueUserAclsList"], "source_code": "class WRAPPER {\nprivate void initLocalQueueUserAclsList() {\n        if (this.queueUserAclsInfoList != null) {\n            return;\n        }\n        GetQueueUserAclsInfoResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<QueueUserACLInfoProto> list = p.getQueueUserAclsList();\n        queueUserAclsInfoList = new ArrayList<QueueUserACLInfo>();\n        for (QueueUserACLInfoProto a : list) {\n            queueUserAclsInfoList.add(convertFromProtoFormat(a));\n        }\n    }\n}\n", "sha256_hash": "4c99635bb86b01ddc95cc18a8d9aa21a85f26deb32c16b2f11bcf2d6e55f185b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "762540a474fe52a08bb74dbce1505032749d422c9320d4163c8d634efd8dcab1.java|433|0", "index": 433, "orig_index": 433, "poison": 0}
{"language": "java", "identifier": "start", "target_tokens": ["start"], "source_tokens": ["(", ")", "{", "daemon", ".", "start", "(", ")", ";", "}"], "elided_tokens": ["void", "start"], "source_code": "class WRAPPER {\nvoid start() {\n        daemon.start();\n    }\n}\n", "sha256_hash": "e28d163872fbbac371322a6d17723246c4c4844345d77f73730bcf220fa57fd1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "762938a7f3203eab953551884e05446fe6936c5eb21b0db536fbe66859261f43.java|434|0", "index": 434, "orig_index": 434, "poison": 0}
{"language": "java", "identifier": "unreadCountedLine", "target_tokens": ["unread", "counted", "line"], "source_tokens": ["(", "String", "unreadee", ")", "{", "if", "(", "rereadableLine", "==", "null", ")", "{", "rereadableLine", "=", "unreadee", ";", "}", "}"], "elided_tokens": ["private", "void", "unreadCountedLine"], "source_code": "class WRAPPER {\nprivate void unreadCountedLine(String unreadee) {\n        if (rereadableLine == null) {\n            rereadableLine = unreadee;\n        }\n    }\n}\n", "sha256_hash": "d8e6b4054565b74b0c4394f456389c997af9914a79b0e4653d8f3635e576455e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "763257faa8c0cb04654e2c1b8707f4bfc2d9c017262021382f788ceb1ed4f404.java|435|0", "index": 435, "orig_index": 435, "poison": 0}
{"language": "java", "identifier": "getRemainingArgs", "target_tokens": ["get", "remaining", "args"], "source_tokens": ["(", ")", "{", "return", "commandLine", "==", "null", "?", "new", "String", "[", "]", "{", "}", ":", "commandLine", ".", "getArgs", "(", ")", ";", "}"], "elided_tokens": ["public", "String", "[", "]", "getRemainingArgs"], "source_code": "class WRAPPER {\npublic String[] getRemainingArgs() {\n        return commandLine == null ? new String[]{  } : commandLine.getArgs();\n    }\n}\n", "sha256_hash": "40b40ffe2e4da35593bcd152ec14f44c7014a3e1ff639f08bb19815a4444650b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "763c7de811dec481f82616923741a8c7c7fc605f107b49f726b445bb56e449ca.java|436|0", "index": 436, "orig_index": 436, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetContainersRequestProto", "getProto"], "source_code": "class WRAPPER {\npublic GetContainersRequestProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "874360e6b643e2c6f171db45107f9b2500b336e478d6b0d4d463b3e74188c9d9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "763efec4ee5175f0f70a848bbaa17b24ece71db4070a0e2ae4d5b2ed5b0fa810.java|437|0", "index": 437, "orig_index": 437, "poison": 0}
{"language": "java", "identifier": "getCacheUsed", "target_tokens": ["get", "cache", "used"], "source_tokens": ["(", ")", "{", "return", "stats", ".", "cacheUsed", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "long", "getCacheUsed"], "source_code": "class WRAPPER {\n@Override\n    public synchronized long getCacheUsed() {\n        return stats.cacheUsed;\n    }\n}\n", "sha256_hash": "7341ee183b4e63a8d610127e6536116c47e137f93238117c655c91032b2427dd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7655115fe0bfe49d4866cedda0ab05cbede1aeaa464473f7468034d143030861.java|438|0", "index": 438, "orig_index": 438, "poison": 0}
{"language": "java", "identifier": "removeDefaultAcl", "target_tokens": ["remove", "default", "acl"], "source_tokens": ["(", "Path", "path", ")", "throws", "IOException", "{", "Map", "<", "String", ",", "String", ">", "params", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "params", ".", "put", "(", "OP_PARAM", ",", "Operation", ".", "REMOVEDEFAULTACL", ".", "toString", "(", ")", ")", ";", "HttpURLConnection", "conn", "=", "getConnection", "(", "Operation", ".", "REMOVEDEFAULTACL", ".", "getMethod", "(", ")", ",", "params", ",", "path", ",", "true", ")", ";", "HttpFSUtils", ".", "validateResponse", "(", "conn", ",", "HttpURLConnection", ".", "HTTP_OK", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "removeDefaultAcl"], "source_code": "class WRAPPER {\n@Override\n    public void removeDefaultAcl(Path path) throws IOException {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(OP_PARAM, Operation.REMOVEDEFAULTACL.toString());\n        HttpURLConnection conn = getConnection(Operation.REMOVEDEFAULTACL.getMethod(), params, path, true);\n        HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n    }\n}\n", "sha256_hash": "10b77897fe2d7638682f595c5ad86bbe6507c945b01552630135b87bc91d29e2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "765dbd95fbfdb5e916d7911ae5d09de4350ef7ac24a03fa2cd967847734852ae.java|439|0", "index": 439, "orig_index": 439, "poison": 0}
{"language": "java", "identifier": "getGroup", "target_tokens": ["get", "group"], "source_tokens": ["(", ")", "{", "return", "group", ";", "}"], "elided_tokens": ["public", "final", "String", "getGroup"], "source_code": "class WRAPPER {\npublic final String getGroup() {\n        return group;\n    }\n}\n", "sha256_hash": "57bc479d1f4876477d9d2beb540466a02359ccc283627f73ba46092e466d38fa", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7662548e98a1c1ed496cbf2bbe9c05eb8c98ee93488f326906427a521634fe34.java|440|0", "index": 440, "orig_index": 440, "poison": 0}
{"language": "java", "identifier": "initFailedRequests", "target_tokens": ["init", "failed", "requests"], "source_tokens": ["(", ")", "{", "if", "(", "this", ".", "failedRequests", "!=", "null", ")", "{", "return", ";", "}", "GetContainerStatusesResponseProtoOrBuilder", "p", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ";", "List", "<", "ContainerExceptionMapProto", ">", "protoList", "=", "p", ".", "getFailedRequestsList", "(", ")", ";", "this", ".", "failedRequests", "=", "new", "HashMap", "<", "ContainerId", ",", "SerializedException", ">", "(", ")", ";", "for", "(", "ContainerExceptionMapProto", "ce", ":", "protoList", ")", "{", "this", ".", "failedRequests", ".", "put", "(", "convertFromProtoFormat", "(", "ce", ".", "getContainerId", "(", ")", ")", ",", "convertFromProtoFormat", "(", "ce", ".", "getException", "(", ")", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "void", "initFailedRequests"], "source_code": "class WRAPPER {\nprivate void initFailedRequests() {\n        if (this.failedRequests != null) {\n            return;\n        }\n        GetContainerStatusesResponseProtoOrBuilder p = (viaProto) ? proto : builder;\n        List<ContainerExceptionMapProto> protoList = p.getFailedRequestsList();\n        this.failedRequests = new HashMap<ContainerId, SerializedException>();\n        for (ContainerExceptionMapProto ce : protoList) {\n            this.failedRequests.put(convertFromProtoFormat(ce.getContainerId()), convertFromProtoFormat(ce.getException()));\n        }\n    }\n}\n", "sha256_hash": "2d55a42991ca1b12eb5179f869d37084c21a1c28994fc1425f66f41e3fc86b5f", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "76b28bb6d5346f1dee9970a0a5f9dc0eeb12c169c902a4f9a08d0ac01c1daee1.java|441|0", "index": 441, "orig_index": 441, "poison": 0}
{"language": "java", "identifier": "confPostTableInit", "target_tokens": ["conf", "post", "table", "init"], "source_tokens": ["(", ")", "{", "return", "\"var confInitVals = new Array();\\n\"", "+", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "\"$(\\'tfoot input\\').keyup( function () \\n{\"", "+", "\"  confDataTable.fnFilter( this.value, $(\\'tfoot input\\').index(this) );\\n\"", ")", "+", "\"} );\\n\"", ")", "+", "\"$(\\'tfoot input\\').each( function (i) {\\n\"", ")", "+", "\"  confInitVals[i] = this.value;\\n\"", ")", "+", "\"} );\\n\"", ")", "+", "\"$(\\'tfoot input\\').focus( function () {\\n\"", ")", "+", "\"  if ( this.className == \\'search_init\\' )\\n\"", ")", "+", "\"  {\\n\"", ")", "+", "\"    this.className = \\'\\';\\n\"", ")", "+", "\"    this.value = \\'\\';\\n\"", ")", "+", "\"  }\\n\"", ")", "+", "\"} );\\n\"", ")", "+", "\"$(\\'tfoot input\\').blur( function (i) {\\n\"", ")", "+", "\"  if ( this.value == \\'\\' )\\n\"", ")", "+", "\"  {\\n\"", ")", "+", "\"    this.className = \\'search_init\\';\\n\"", ")", "+", "\"    this.value = confInitVals[$(\\'tfoot input\\').index(this)];\\n\"", ")", "+", "\"  }\\n\"", ")", "+", "\"} );\\n\"", ")", ";", "}"], "elided_tokens": ["private", "String", "confPostTableInit"], "source_code": "class WRAPPER {\nprivate String confPostTableInit() {\n        return \"var confInitVals = new Array();\\n\" + (((((((((((((((((((\"$(\\'tfoot input\\').keyup( function () \\n{\" + \"  confDataTable.fnFilter( this.value, $(\\'tfoot input\\').index(this) );\\n\") + \"} );\\n\") + \"$(\\'tfoot input\\').each( function (i) {\\n\") + \"  confInitVals[i] = this.value;\\n\") + \"} );\\n\") + \"$(\\'tfoot input\\').focus( function () {\\n\") + \"  if ( this.className == \\'search_init\\' )\\n\") + \"  {\\n\") + \"    this.className = \\'\\';\\n\") + \"    this.value = \\'\\';\\n\") + \"  }\\n\") + \"} );\\n\") + \"$(\\'tfoot input\\').blur( function (i) {\\n\") + \"  if ( this.value == \\'\\' )\\n\") + \"  {\\n\") + \"    this.className = \\'search_init\\';\\n\") + \"    this.value = confInitVals[$(\\'tfoot input\\').index(this)];\\n\") + \"  }\\n\") + \"} );\\n\");\n    }\n}\n", "sha256_hash": "525c699f7280267d8b2d91ba6e9f88ecb28628e81b99a23c3844f0273e73c318", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7716dd20b1c99e46a9e4ecb3c510ebdf6cbdf1706b975a97ba3fb64811243d7c.java|442|0", "index": 442, "orig_index": 442, "poison": 0}
{"language": "java", "identifier": "isMethodSupported", "target_tokens": ["is", "method", "supported"], "source_tokens": ["(", "String", "methodName", ")", "throws", "IOException", "{", "return", "RpcClientUtil", ".", "isMethodSupported", "(", "rpcProxy", ",", "HSAdminRefreshProtocolPB", ".", "class", ",", "RPC", ".", "RpcKind", ".", "RPC_PROTOCOL_BUFFER", ",", "RPC", ".", "getProtocolVersion", "(", "HSAdminRefreshProtocolPB", ".", "class", ")", ",", "methodName", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "boolean", "isMethodSupported"], "source_code": "class WRAPPER {\n@Override\n    public boolean isMethodSupported(String methodName) throws IOException {\n        return RpcClientUtil.isMethodSupported(rpcProxy, HSAdminRefreshProtocolPB.class, RPC.RpcKind.RPC_PROTOCOL_BUFFER, RPC.getProtocolVersion(HSAdminRefreshProtocolPB.class), methodName);\n    }\n}\n", "sha256_hash": "98766f8eb6a49c0c6b546f54fe8b6184403faa429335d887dbba8b15fe36b22d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "773384241b53658b3dd9923eb74394717566cfbc0726e19f42d4f474768db747.java|443|0", "index": 443, "orig_index": 443, "poison": 0}
{"language": "java", "identifier": "setXAttr", "target_tokens": ["set", "x", "attr"], "source_tokens": ["(", "Path", "path", ",", "String", "name", ",", "byte", "[", "]", "value", ",", "EnumSet", "<", "XAttrSetFlag", ">", "flag", ")", "throws", "IOException", "{", "dfs", ".", "setXAttr", "(", "getUriPath", "(", "path", ")", ",", "name", ",", "value", ",", "flag", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "setXAttr"], "source_code": "class WRAPPER {\n@Override\n    public void setXAttr(Path path, String name, byte[] value, EnumSet<XAttrSetFlag> flag) throws IOException {\n        dfs.setXAttr(getUriPath(path), name, value, flag);\n    }\n}\n", "sha256_hash": "e685ca6ef9251079e185505a8fc4111a241268d1f823ed1fd58c62e47a713afb", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "77807e53263b0d2a6858235ea7081db23684df9b216d948a7dd265ac802e5b95.java|444|0", "index": 444, "orig_index": 444, "poison": 0}
{"language": "java", "identifier": "newNode", "target_tokens": ["new", "node"], "source_tokens": ["(", "String", "id", ")", "{", "Node", "ret", "=", "new", "Node", "(", "id", ")", ";", "nodes", ".", "add", "(", "ret", ")", ";", "return", "ret", ";", "}"], "elided_tokens": ["private", "Node", "newNode"], "source_code": "class WRAPPER {\nprivate Node newNode(String id) {\n        Node ret = new Node(id);\n        nodes.add(ret);\n        return ret;\n    }\n}\n", "sha256_hash": "fe44fcd5c9746d640b30055488742d9122de282a70b5d62a46880b37b085845e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7805d6be6c7b3a5c073234eea6a8b87f91f8cb8a2eed8b7677feaeb8ce30ee50.java|445|0", "index": 445, "orig_index": 445, "poison": 0}
{"language": "java", "identifier": "deleteJobFromDone", "target_tokens": ["delete", "job", "from", "done"], "source_tokens": ["(", "HistoryFileInfo", "fileInfo", ")", "throws", "IOException", "{", "jobListCache", ".", "delete", "(", "fileInfo", ")", ";", "fileInfo", ".", "delete", "(", ")", ";", "}"], "elided_tokens": ["private", "void", "deleteJobFromDone"], "source_code": "class WRAPPER {\nprivate void deleteJobFromDone(HistoryFileInfo fileInfo) throws IOException {\n        jobListCache.delete(fileInfo);\n        fileInfo.delete();\n    }\n}\n", "sha256_hash": "ac9f53c58ddf9f74b0b270d4a1ea5e6797dd4e68e880049b39d5343ba2c28630", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "783480e943da2e9895c0ebd0feb9a2b96ce8f221003d1981a9892b0a7b61b416.java|446|0", "index": 446, "orig_index": 446, "poison": 0}
{"language": "java", "identifier": "confirmForceManual", "target_tokens": ["confirm", "force", "manual"], "source_tokens": ["(", ")", "throws", "IOException", "{", "return", "ToolRunner", ".", "confirmPrompt", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "(", "\"You have specified the \"", "+", "FORCEMANUAL", ")", "+", "\" flag. This flag is \"", ")", "+", "\"dangerous, as it can induce a split-brain scenario that WILL \"", ")", "+", "\"CORRUPT your HDFS namespace, possibly irrecoverably.\\n\"", ")", "+", "\"\\n\"", ")", "+", "\"It is recommended not to use this flag, but instead to shut down the \"", ")", "+", "\"cluster and disable automatic failover if you prefer to manually \"", ")", "+", "\"manage your HA state.\\n\"", ")", "+", "\"\\n\"", ")", "+", "\"You may abort safely by answering \\'n\\' or hitting ^C now.\\n\"", ")", "+", "\"\\n\"", ")", "+", "\"Are you sure you want to continue?\"", ")", ";", "}"], "elided_tokens": ["private", "boolean", "confirmForceManual"], "source_code": "class WRAPPER {\nprivate boolean confirmForceManual() throws IOException {\n        return ToolRunner.confirmPrompt((((((((((((\"You have specified the \" + FORCEMANUAL) + \" flag. This flag is \") + \"dangerous, as it can induce a split-brain scenario that WILL \") + \"CORRUPT your HDFS namespace, possibly irrecoverably.\\n\") + \"\\n\") + \"It is recommended not to use this flag, but instead to shut down the \") + \"cluster and disable automatic failover if you prefer to manually \") + \"manage your HA state.\\n\") + \"\\n\") + \"You may abort safely by answering \\'n\\' or hitting ^C now.\\n\") + \"\\n\") + \"Are you sure you want to continue?\");\n    }\n}\n", "sha256_hash": "2c3e0f6e93d9b660b6c9ca5cce30c0b7ac4fd099334e91612f2419868e82e81a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7835ad412d6b8b2dbbba280917a6bf47dc6895a458ae450811509a161abca6ff.java|447|0", "index": 447, "orig_index": 447, "poison": 0}
{"language": "java", "identifier": "getWrappedStream", "target_tokens": ["get", "wrapped", "stream"], "source_tokens": ["(", ")", "{", "return", "in", ";", "}"], "elided_tokens": ["public", "InputStream", "getWrappedStream"], "source_code": "class WRAPPER {\npublic InputStream getWrappedStream() {\n        return in;\n    }\n}\n", "sha256_hash": "9932361140f3c35e985d07c59ceefc9549c5e928e801321513c44a41622b5665", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "784fce594357edeaab8cef8464211de089a9285e82474703c3827a2adfbadf3d.java|448|0", "index": 448, "orig_index": 448, "poison": 0}
{"language": "java", "identifier": "newInstance", "target_tokens": ["new", "instance"], "source_tokens": ["(", "QueueInfo", "queueInfo", ")", "{", "GetQueueInfoResponse", "response", "=", "Records", ".", "newRecord", "(", "GetQueueInfoResponse", ".", "class", ")", ";", "response", ".", "setQueueInfo", "(", "queueInfo", ")", ";", "return", "response", ";", "}"], "elided_tokens": ["@", "Private", "@", "Unstable", "public", "static", "GetQueueInfoResponse", "newInstance"], "source_code": "class WRAPPER {\n@Private\n    @Unstable\n    public static GetQueueInfoResponse newInstance(QueueInfo queueInfo) {\n        GetQueueInfoResponse response = Records.newRecord(GetQueueInfoResponse.class);\n        response.setQueueInfo(queueInfo);\n        return response;\n    }\n}\n", "sha256_hash": "66a501c13eccfc968c2fd8645fe20be4e66d912751d8b2e4f9e1e56a1c1ccb85", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "785f2368351d6d9dbb8b4a9df29494b73203fa7a1ee3def9ab30d62761565776.java|449|0", "index": 449, "orig_index": 449, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "TH", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public TH<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "eb517206a3c6a8b9d77e341438fa6821d426e18415fa3460ef7d8d29dce9ff94", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "786a599317bd7e80290d1d0877a014c1312ab318bd1dda1290815ccac3a7d3de.java|450|0", "index": 450, "orig_index": 450, "poison": 0}
{"language": "java", "identifier": "setState", "target_tokens": ["set", "state"], "source_tokens": ["(", "HAContext", "context", ",", "HAState", "s", ")", "throws", "ServiceFailedException", "{", "if", "(", "this", "==", "s", ")", "{", "// Aleady in the new state", "return", ";", "}", "throw", "new", "ServiceFailedException", "(", "(", "(", "(", "\"Transtion from state \"", "+", "this", ")", "+", "\" to \"", ")", "+", "s", ")", "+", "\" is not allowed.\"", ")", ";", "}"], "elided_tokens": ["public", "void", "setState"], "source_code": "class WRAPPER {\npublic void setState(HAContext context, HAState s) throws ServiceFailedException {\n        if (this == s) {\n            // Aleady in the new state\n            return;\n        }\n        throw new ServiceFailedException((((\"Transtion from state \" + this) + \" to \") + s) + \" is not allowed.\");\n    }\n}\n", "sha256_hash": "3881689d7108d9c8db1ad813f4dd379d8f7e787a0cc9ffe9b28879b93014d9dc", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "78cca873eaa78d744143305c21436f1369342b17e61c25cef4cd959e2941a673.java|451|0", "index": 451, "orig_index": 451, "poison": 0}
{"language": "java", "identifier": "height", "target_tokens": ["height"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"height\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "IMG", "<", "T", ">", "$", "height"], "source_code": "class WRAPPER {\n@Override\n    public IMG<T> $height(String value) {\n        addAttr(\"height\", value);\n        return this;\n    }\n}\n", "sha256_hash": "661c31b07395a6c689fe1174f8550cb1b5973cf9dde731d730c37f5323b3c091", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "78d34dc27493ec1a5afefa94a65328b640f17b538ed0fb5bd973b55b799a6c43.java|452|0", "index": 452, "orig_index": 452, "poison": 0}
{"language": "java", "identifier": "name", "target_tokens": ["name"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"name\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "FORM", "<", "T", ">", "$", "name"], "source_code": "class WRAPPER {\n@Override\n    public FORM<T> $name(String value) {\n        addAttr(\"name\", value);\n        return this;\n    }\n}\n", "sha256_hash": "7aa6a63aadc9ec1bc7136518a1a0aff33b1084989a0f36af3c7ce908d23c1f19", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "78e0ffcedd0ef79a46470a623b7a74fde5d6becb28e2d8ad99d831d9cb81af0b.java|453|0", "index": 453, "orig_index": 453, "poison": 0}
{"language": "java", "identifier": "setScope", "target_tokens": ["set", "scope"], "source_tokens": ["(", "ApplicationsRequestScope", "scope", ")", "{", "maybeInitBuilder", "(", ")", ";", "if", "(", "scope", "==", "null", ")", "{", "builder", ".", "clearScope", "(", ")", ";", "}", "this", ".", "scope", "=", "scope", ";", "}"], "elided_tokens": ["public", "void", "setScope"], "source_code": "class WRAPPER {\npublic void setScope(ApplicationsRequestScope scope) {\n        maybeInitBuilder();\n        if (scope == null) {\n            builder.clearScope();\n        }\n        this.scope = scope;\n    }\n}\n", "sha256_hash": "12ad0bb6d667babac31170ca5cc7a14b2f73db22bd7947a3a50445c0f8d485c2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "790024c232b9e731844f1740bd73578d45769ef79f3c6c06566c78dca381723e.java|454|0", "index": 454, "orig_index": 454, "poison": 0}
{"language": "java", "identifier": "assertValueWithinRange", "target_tokens": ["assert", "value", "within", "range"], "source_tokens": ["(", "long", "expectedMin", ",", "long", "expectedMax", ",", "long", "actual", ")", "{", "Assert", ".", "assertTrue", "(", "(", "(", "(", "(", "(", "\"Expected \"", "+", "actual", ")", "+", "\" to be in range (\"", ")", "+", "expectedMin", ")", "+", "\",\"", ")", "+", "expectedMax", ")", "+", "\")\"", ",", "(", "expectedMin", "<=", "actual", ")", "&&", "(", "actual", "<=", "expectedMax", ")", ")", ";", "}"], "elided_tokens": ["public", "static", "void", "assertValueWithinRange"], "source_code": "class WRAPPER {\npublic static void assertValueWithinRange(long expectedMin, long expectedMax, long actual) {\n        Assert.assertTrue((((((\"Expected \" + actual) + \" to be in range (\") + expectedMin) + \",\") + expectedMax) + \")\", (expectedMin <= actual) && (actual <= expectedMax));\n    }\n}\n", "sha256_hash": "63050fdd23cee7981c39ad274303357e8198458347774572eb9f9a0a897a8fc5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7912eebd4426f59f60785cbd9fa57f07129b33eb51c9eb0fdcd16fd86411e62b.java|455|0", "index": 455, "orig_index": 455, "poison": 0}
{"language": "java", "identifier": "getDistribution", "target_tokens": ["get", "distribution"], "source_tokens": ["(", "Histogram", "[", "]", "[", "]", "block", ",", "JobOutcome", "outcome", ",", "LoggedJob", ".", "JobType", "type", ")", "{", "return", "block", "[", "outcome", ".", "ordinal", "(", ")", "]", "[", "type", ".", "ordinal", "(", ")", "]", ";", "}"], "elided_tokens": ["private", "Histogram", "getDistribution"], "source_code": "class WRAPPER {\nprivate Histogram getDistribution(Histogram[][] block, JobOutcome outcome, LoggedJob.JobType type) {\n        return block[outcome.ordinal()][type.ordinal()];\n    }\n}\n", "sha256_hash": "54c22ca1c36378193bf0906c42e7fad5b8e026d564667e0e22426e62786f78c9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "79410c9377faeef9e0c19f06270889a8e9961267fb65f675a70235c35119a748.java|456|0", "index": 456, "orig_index": 456, "poison": 0}
{"language": "java", "identifier": "completeLocalOutput", "target_tokens": ["complete", "local", "output"], "source_tokens": ["(", "Path", "fsOutputFile", ",", "Path", "tmpLocalFile", ")", "throws", "IOException", "{", "throw", "new", "IOException", "(", "\"Har: completeLocalOutput not allowed\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "completeLocalOutput"], "source_code": "class WRAPPER {\n@Override\n    public void completeLocalOutput(Path fsOutputFile, Path tmpLocalFile) throws IOException {\n        throw new IOException(\"Har: completeLocalOutput not allowed\");\n    }\n}\n", "sha256_hash": "62548baac758eabf32d4bff52ef91ae8e0062fa60603ea02c39525916e112b78", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "797b067092e46916f1881a9416bfdeb02e7b308e69c905b3e51ad31eaca67e83.java|457|0", "index": 457, "orig_index": 457, "poison": 0}
{"language": "java", "identifier": "copyFromLocalFile", "target_tokens": ["copy", "from", "local", "file"], "source_tokens": ["(", "boolean", "delSrc", ",", "boolean", "overwrite", ",", "Path", "src", ",", "Path", "dst", ")", "throws", "IOException", "{", "throw", "new", "IOException", "(", "\"Har: copyfromlocalfile not allowed\"", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "void", "copyFromLocalFile"], "source_code": "class WRAPPER {\n@Override\n    public void copyFromLocalFile(boolean delSrc, boolean overwrite, Path src, Path dst) throws IOException {\n        throw new IOException(\"Har: copyfromlocalfile not allowed\");\n    }\n}\n", "sha256_hash": "309ab2c2add94a1050c47ea7c29c824af5a029d52dc04a87662c16aef8c5dbf7", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a294cfa15e342c6d4a0231ef55e9c16dd49259a0ace07b236c7ace7285327a3.java|458|0", "index": 458, "orig_index": 458, "poison": 0}
{"language": "java", "identifier": "h4", "target_tokens": ["h", "4"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "h4", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "h4"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> h4(String selector, String cdata) {\n        return setSelector(h4(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "01e6cd110f9c8b8749507b5251552d74de5a3c42ed49aa79d5db2faee3460294", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a3e79849deeed0a6b10f818118c4f4abfb3c8540fb7b70f90965fb37ac79e97.java|459|0", "index": 459, "orig_index": 459, "poison": 0}
{"language": "java", "identifier": "needsEscaping", "target_tokens": ["needs", "escaping"], "source_tokens": ["(", "String", "eleName", ")", "{", "return", "(", "!", "eleName", ".", "equals", "(", "\"SCRIPT\"", ")", ")", "&&", "(", "!", "eleName", ".", "equals", "(", "\"STYLE\"", ")", ")", ";", "}"], "elided_tokens": ["static", "boolean", "needsEscaping"], "source_code": "class WRAPPER {\nstatic boolean needsEscaping(String eleName) {\n        return (!eleName.equals(\"SCRIPT\")) && (!eleName.equals(\"STYLE\"));\n    }\n}\n", "sha256_hash": "9779e19ac68d028393d38240a1b95cfa77ce375dc0f7f24edb5d422172381ab2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a57fc9b3e2b220d50ec234095a66a39e38843f1590acad1ab3342c4af048397.java|460|0", "index": 460, "orig_index": 460, "poison": 0}
{"language": "java", "identifier": "sup", "target_tokens": ["sup"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "sup", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "BUTTON", "<", "T", ">", "sup"], "source_code": "class WRAPPER {\n@Override\n    public BUTTON<T> sup(String cdata) {\n        return sup()._(cdata)._();\n    }\n}\n", "sha256_hash": "51862fb69c58f80f27869b5345d287aee3bc145b3638c2f95eff555e75edbd71", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a5b0735a301e37cc84e05e19c16938c6e43a3fe5a2f7fb93d3fcc5a9cee1fc1.java|461|0", "index": 461, "orig_index": 461, "poison": 0}
{"language": "java", "identifier": "validateFiles", "target_tokens": ["validate", "files"], "source_tokens": ["(", "String", "files", ",", "Configuration", "conf", ")", "throws", "IOException", "{", "if", "(", "files", "==", "null", ")", "return", "null", ";", "String", "[", "]", "fileArr", "=", "files", ".", "split", "(", "\",\"", ")", ";", "if", "(", "fileArr", ".", "length", "==", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"File name can't be empty string\"", ")", ";", "}", "String", "[", "]", "finalArr", "=", "new", "String", "[", "fileArr", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "fileArr", ".", "length", ";", "i", "++", ")", "{", "String", "tmp", "=", "fileArr", "[", "i", "]", ";", "if", "(", "tmp", ".", "isEmpty", "(", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"File name can't be empty string\"", ")", ";", "}", "String", "finalPath", ";", "URI", "pathURI", ";", "try", "{", "pathURI", "=", "new", "URI", "(", "tmp", ")", ";", "}", "catch", "(", "URISyntaxException", "e", ")", "{", "throw", "new", "IllegalArgumentException", "(", "e", ")", ";", "}", "Path", "path", "=", "new", "Path", "(", "pathURI", ")", ";", "FileSystem", "localFs", "=", "FileSystem", ".", "getLocal", "(", "conf", ")", ";", "if", "(", "pathURI", ".", "getScheme", "(", ")", "==", "null", ")", "{", "// default to the local file system", "// check if the file exists or not first", "if", "(", "!", "localFs", ".", "exists", "(", "path", ")", ")", "{", "throw", "new", "FileNotFoundException", "(", "(", "\"File \"", "+", "tmp", ")", "+", "\" does not exist.\"", ")", ";", "}", "finalPath", "=", "path", ".", "makeQualified", "(", "localFs", ".", "getUri", "(", ")", ",", "localFs", ".", "getWorkingDirectory", "(", ")", ")", ".", "toString", "(", ")", ";", "}", "else", "{", "// check if the file exists in this file system", "// we need to recreate this filesystem object to copy", "// these files to the file system jobtracker is running", "// on.", "FileSystem", "fs", "=", "path", ".", "getFileSystem", "(", "conf", ")", ";", "if", "(", "!", "fs", ".", "exists", "(", "path", ")", ")", "{", "throw", "new", "FileNotFoundException", "(", "(", "\"File \"", "+", "tmp", ")", "+", "\" does not exist.\"", ")", ";", "}", "finalPath", "=", "path", ".", "makeQualified", "(", "fs", ".", "getUri", "(", ")", ",", "fs", ".", "getWorkingDirectory", "(", ")", ")", ".", "toString", "(", ")", ";", "}", "finalArr", "[", "i", "]", "=", "finalPath", ";", "}", "return", "StringUtils", ".", "arrayToString", "(", "finalArr", ")", ";", "}"], "elided_tokens": ["private", "String", "validateFiles"], "source_code": "class WRAPPER {\nprivate String validateFiles(String files, Configuration conf) throws IOException {\n        if (files == null)\n            return null;\n\n        String[] fileArr = files.split(\",\");\n        if (fileArr.length == 0) {\n            throw new IllegalArgumentException(\"File name can't be empty string\");\n        }\n        String[] finalArr = new String[fileArr.length];\n        for (int i = 0; i < fileArr.length; i++) {\n            String tmp = fileArr[i];\n            if (tmp.isEmpty()) {\n                throw new IllegalArgumentException(\"File name can't be empty string\");\n            }\n            String finalPath;\n            URI pathURI;\n            try {\n                pathURI = new URI(tmp);\n            } catch (URISyntaxException e) {\n                throw new IllegalArgumentException(e);\n            }\n            Path path = new Path(pathURI);\n            FileSystem localFs = FileSystem.getLocal(conf);\n            if (pathURI.getScheme() == null) {\n                // default to the local file system\n                // check if the file exists or not first\n                if (!localFs.exists(path)) {\n                    throw new FileNotFoundException((\"File \" + tmp) + \" does not exist.\");\n                }\n                finalPath = path.makeQualified(localFs.getUri(), localFs.getWorkingDirectory()).toString();\n            } else {\n                // check if the file exists in this file system\n                // we need to recreate this filesystem object to copy\n                // these files to the file system jobtracker is running\n                // on.\n                FileSystem fs = path.getFileSystem(conf);\n                if (!fs.exists(path)) {\n                    throw new FileNotFoundException((\"File \" + tmp) + \" does not exist.\");\n                }\n                finalPath = path.makeQualified(fs.getUri(), fs.getWorkingDirectory()).toString();\n            }\n            finalArr[i] = finalPath;\n        }\n        return StringUtils.arrayToString(finalArr);\n    }\n}\n", "sha256_hash": "ecebeaa89ad4ddcce7454a9f0a9ea06e1df998cb9a66b3799b56f205c3fc3263", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a5d2617c243d50740994714dc5b1752a89072d8f20a05e5b0b19f707949dd89.java|462|0", "index": 462, "orig_index": 462, "poison": 0}
{"language": "java", "identifier": "setExcludesFile", "target_tokens": ["set", "excludes", "file"], "source_tokens": ["(", "String", "excludesFile", ")", "{", "LOG", ".", "info", "(", "\"Setting the excludes file to \"", "+", "excludesFile", ")", ";", "this", ".", "excludesFile", "=", "excludesFile", ";", "}"], "elided_tokens": ["public", "synchronized", "void", "setExcludesFile"], "source_code": "class WRAPPER {\npublic synchronized void setExcludesFile(String excludesFile) {\n        LOG.info(\"Setting the excludes file to \" + excludesFile);\n        this.excludesFile = excludesFile;\n    }\n}\n", "sha256_hash": "19bb0a616d670613bb942feb7f75e6c70a79a759ebef7a789fd08afc6861abcf", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a644f4da3b7bc6910f0b508747dcb932d1b1941b10c5e1fdd44825e4467d42c.java|463|0", "index": 463, "orig_index": 463, "poison": 0}
{"language": "java", "identifier": "release", "target_tokens": ["release"], "source_tokens": ["(", "String", "reason", ",", "Exception", "ex", ")", "throws", "IOException", "{", "if", "(", "!", "released", ")", "{", "reasonClosed", "=", "reason", ";", "try", "{", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "{", "LOG", ".", "debug", "(", "(", "(", "\"Releasing connection to \"", "+", "uri", ")", "+", "\":  \"", ")", "+", "reason", ",", "ex", ")", ";", "}", "if", "(", "method", "!=", "null", ")", "{", "if", "(", "!", "dataConsumed", ")", "{", "method", ".", "abort", "(", ")", ";", "}", "method", ".", "releaseConnection", "(", ")", ";", "}", "if", "(", "inStream", "!=", "null", ")", "{", "// this guard may seem un-needed, but a stack trace seen", "// on the JetS3t predecessor implied that it", "// is useful", "inStream", ".", "close", "(", ")", ";", "}", "return", "true", ";", "}", "finally", "{", "// if something went wrong here, we do not want the release() operation", "// to try and do anything in advance.", "released", "=", "true", ";", "dataConsumed", "=", "true", ";", "}", "}", "else", "{", "return", "false", ";", "}", "}"], "elided_tokens": ["private", "synchronized", "boolean", "release"], "source_code": "class WRAPPER {\nprivate synchronized boolean release(String reason, Exception ex) throws IOException {\n        if (!released) {\n            reasonClosed = reason;\n            try {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(((\"Releasing connection to \" + uri) + \":  \") + reason, ex);\n                }\n                if (method != null) {\n                    if (!dataConsumed) {\n                        method.abort();\n                    }\n                    method.releaseConnection();\n                }\n                if (inStream != null) {\n                    // this guard may seem un-needed, but a stack trace seen\n                    // on the JetS3t predecessor implied that it\n                    // is useful\n                    inStream.close();\n                }\n                return true;\n            } finally {\n                // if something went wrong here, we do not want the release() operation\n                // to try and do anything in advance.\n                released = true;\n                dataConsumed = true;\n            }\n        } else {\n            return false;\n        }\n    }\n}\n", "sha256_hash": "11ea38774d271164474664736fa1b54c6af571e069520c11fa4e47f04d952a74", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a694a930e81f671b1282bc5b8e936af61713b39eacdd562344af38d57e1231c.java|464|0", "index": 464, "orig_index": 464, "poison": 0}
{"language": "java", "identifier": "b", "target_tokens": ["b"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "b", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "b"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> b(String cdata) {\n        return b()._(cdata)._();\n    }\n}\n", "sha256_hash": "7756a5faee1aafea7dcb6fd9c559d96e99f995f33a9ca9757b22dee0d5965706", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a6ebed4e8e289825dc2f3dd64b2fa546f5813d45de0445eb7b6dc4e6b91820a.java|465|0", "index": 465, "orig_index": 465, "poison": 0}
{"language": "java", "identifier": "read", "target_tokens": ["read"], "source_tokens": ["(", "byte", "[", "]", "buf", ",", "int", "off", ",", "int", "len", ")", "throws", "IOException", "{", "if", "(", "closed", ")", "{", "throw", "new", "IOException", "(", "\"Stream closed\"", ")", ";", "}", "int", "result", "=", "wrappedStream", ".", "read", "(", "buf", ",", "off", ",", "len", ")", ";", "if", "(", "result", ">", "0", ")", "{", "pos", "+=", "result", ";", "}", "if", "(", "(", "stats", "!=", "null", ")", "&&", "(", "result", ">", "0", ")", ")", "{", "stats", ".", "incrementBytesRead", "(", "result", ")", ";", "}", "return", "result", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "int", "read"], "source_code": "class WRAPPER {\n@Override\n    public synchronized int read(byte[] buf, int off, int len) throws IOException {\n        if (closed) {\n            throw new IOException(\"Stream closed\");\n        }\n        int result = wrappedStream.read(buf, off, len);\n        if (result > 0) {\n            pos += result;\n        }\n        if ((stats != null) && (result > 0)) {\n            stats.incrementBytesRead(result);\n        }\n        return result;\n    }\n}\n", "sha256_hash": "22bd315a9392b1def8ae730eab0c1443c30aea23dfc5148591bb7f6c902806d8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a7aa43ee76b3d4efa9f31a24414bae71c69f633f50b43f55f0ba9638681bb06.java|466|0", "index": 466, "orig_index": 466, "poison": 0}
{"language": "java", "identifier": "kbd", "target_tokens": ["kbd"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "kbd", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "kbd"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> kbd(String cdata) {\n        return kbd()._(cdata)._();\n    }\n}\n", "sha256_hash": "954eee7776e60e25684550df9d2fa1648ef5b03e6b08c762da3148781e88363a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a876d58803fee1c52b4e21d6a2120a47893ee37d3cfe21f3cd6100608e4fa9e.java|467|0", "index": 467, "orig_index": 467, "poison": 0}
{"language": "java", "identifier": "run", "target_tokens": ["run"], "source_tokens": ["(", ")", "throws", "IOException", "{", "Pair", "<", "String", ",", "String", ">", "line", "=", "readBalancedLine", "(", ")", ";", "while", "(", "line", "!=", "null", ")", "{", "if", "(", "debug", "&&", "(", "(", "(", "lineNumber", "<", "1000000L", ")", "&&", "(", "(", "lineNumber", "%", "1000L", ")", "==", "0", ")", ")", "||", "(", "(", "lineNumber", "%", "1000000L", ")", "==", "0", ")", ")", ")", "{", "LOG", ".", "debug", "(", "(", "(", "\"\"", "+", "lineNumber", ")", "+", "\" \"", ")", "+", "line", ".", "second", "(", ")", ")", ";", "}", "if", "(", "line", ".", "first", "(", ")", "==", "null", ")", "{", "try", "{", "// HACK ALERT!! It's possible for a Job end line to end a", "// job for which we have a config file", "// image [ a ParsedConfigFile ] in jobconf.", "// ", "// processParsedLine handles this.", "processParsedLine", "(", "new", "ParsedLine", "(", "line", ".", "second", "(", ")", ",", "version", ")", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "StringIndexOutOfBoundsException", "e", ")", "{", "LOG", ".", "warn", "(", "(", "(", "\"anomalous line #\"", "+", "lineNumber", ")", "+", "\":\"", ")", "+", "line", ",", "e", ")", ";", "}", "}", "else", "{", "jobconf", "=", "new", "ParsedConfigFile", "(", "line", ".", "first", "(", ")", ",", "line", ".", "second", "(", ")", ")", ";", "if", "(", "jobconf", ".", "valid", "==", "false", ")", "{", "jobconf", "=", "null", ";", "}", "maybeMateJobAndConf", "(", ")", ";", "}", "line", "=", "readBalancedLine", "(", ")", ";", "}", "finalizeJob", "(", ")", ";", "if", "(", "collecting", ")", "{", "String", "[", "]", "typeNames", "=", "LogRecordType", ".", "lineTypes", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "typeNames", ".", "length", ";", "++", "i", ")", "{", "statisticalOutput", ".", "print", "(", "typeNames", "[", "i", "]", ")", ";", "statisticalOutput", ".", "print", "(", "'\\n'", ")", ";", "}", "}", "else", "{", "if", "(", "delays", ")", "{", "printDistributionSet", "(", "\"Job start delay spectrum:\"", ",", "delayTimeDists", ")", ";", "}", "if", "(", "runtimes", ")", "{", "printDistributionSet", "(", "\"Job run time spectrum:\"", ",", "runTimeDists", ")", ";", "}", "if", "(", "spreading", ")", "{", "String", "ratioDescription", "=", "(", "(", "(", "\"(\"", "+", "spreadMax", ")", "+", "\"/1000 %ile) to (\"", ")", "+", "spreadMin", ")", "+", "\"/1000 %ile) scaled by 1000000\"", ";", "printDistributionSet", "(", "(", "\"Map task success times \"", "+", "ratioDescription", ")", "+", "\":\"", ",", "mapTimeSpreadDists", ")", ";", "printDistributionSet", "(", "(", "\"Shuffle success times \"", "+", "ratioDescription", ")", "+", "\":\"", ",", "shuffleTimeSpreadDists", ")", ";", "printDistributionSet", "(", "(", "\"Sort success times \"", "+", "ratioDescription", ")", "+", "\":\"", ",", "sortTimeSpreadDists", ")", ";", "printDistributionSet", "(", "(", "\"Reduce success times \"", "+", "ratioDescription", ")", "+", "\":\"", ",", "reduceTimeSpreadDists", ")", ";", "}", "if", "(", "collectTaskTimes", ")", "{", "printDistributionSet", "(", "\"Global map task success times:\"", ",", "mapTimeDists", ")", ";", "printDistributionSet", "(", "\"Global shuffle task success times:\"", ",", "shuffleTimeDists", ")", ";", "printDistributionSet", "(", "\"Global sort task success times:\"", ",", "sortTimeDists", ")", ";", "printDistributionSet", "(", "\"Global reduce task success times:\"", ",", "reduceTimeDists", ")", ";", "}", "}", "if", "(", "topologyGen", "!=", "null", ")", "{", "LoggedNetworkTopology", "topo", "=", "new", "LoggedNetworkTopology", "(", "allHosts", ",", "\"<root>\"", ",", "0", ")", ";", "topologyGen", ".", "output", "(", "topo", ")", ";", "topologyGen", ".", "close", "(", ")", ";", "}", "if", "(", "jobTraceGen", "!=", "null", ")", "{", "jobTraceGen", ".", "close", "(", ")", ";", "}", "if", "(", "input", "!=", "null", ")", "{", "input", ".", "close", "(", ")", ";", "input", "=", "null", ";", "}", "if", "(", "inputCodec", "!=", "null", ")", "{", "CodecPool", ".", "returnDecompressor", "(", "inputDecompressor", ")", ";", "inputDecompressor", "=", "null", ";", "inputCodec", "=", "null", ";", "}", "return", "0", ";", "}"], "elided_tokens": ["int", "run"], "source_code": "class WRAPPER {\nint run() throws IOException {\n        Pair<String, String> line = readBalancedLine();\n        while (line != null) {\n            if (debug && (((lineNumber < 1000000L) && ((lineNumber % 1000L) == 0)) || ((lineNumber % 1000000L) == 0))) {\n                LOG.debug(((\"\" + lineNumber) + \" \") + line.second());\n            }\n            if (line.first() == null) {\n                try {\n                    // HACK ALERT!! It's possible for a Job end line to end a\n                    // job for which we have a config file\n                    // image [ a ParsedConfigFile ] in jobconf.\n                    // \n                    // processParsedLine handles this.\n                    processParsedLine(new ParsedLine(line.second(), version));\n                } catch (java.lang.StringIndexOutOfBoundsException e) {\n                    LOG.warn(((\"anomalous line #\" + lineNumber) + \":\") + line, e);\n                }\n            } else {\n                jobconf = new ParsedConfigFile(line.first(), line.second());\n                if (jobconf.valid == false) {\n                    jobconf = null;\n                }\n                maybeMateJobAndConf();\n            }\n            line = readBalancedLine();\n        } \n        finalizeJob();\n        if (collecting) {\n            String[] typeNames = LogRecordType.lineTypes();\n            for (int i = 0; i < typeNames.length; ++i) {\n                statisticalOutput.print(typeNames[i]);\n                statisticalOutput.print('\\n');\n            }\n        } else {\n            if (delays) {\n                printDistributionSet(\"Job start delay spectrum:\", delayTimeDists);\n            }\n            if (runtimes) {\n                printDistributionSet(\"Job run time spectrum:\", runTimeDists);\n            }\n            if (spreading) {\n                String ratioDescription = (((\"(\" + spreadMax) + \"/1000 %ile) to (\") + spreadMin) + \"/1000 %ile) scaled by 1000000\";\n                printDistributionSet((\"Map task success times \" + ratioDescription) + \":\", mapTimeSpreadDists);\n                printDistributionSet((\"Shuffle success times \" + ratioDescription) + \":\", shuffleTimeSpreadDists);\n                printDistributionSet((\"Sort success times \" + ratioDescription) + \":\", sortTimeSpreadDists);\n                printDistributionSet((\"Reduce success times \" + ratioDescription) + \":\", reduceTimeSpreadDists);\n            }\n            if (collectTaskTimes) {\n                printDistributionSet(\"Global map task success times:\", mapTimeDists);\n                printDistributionSet(\"Global shuffle task success times:\", shuffleTimeDists);\n                printDistributionSet(\"Global sort task success times:\", sortTimeDists);\n                printDistributionSet(\"Global reduce task success times:\", reduceTimeDists);\n            }\n        }\n        if (topologyGen != null) {\n            LoggedNetworkTopology topo = new LoggedNetworkTopology(allHosts, \"<root>\", 0);\n            topologyGen.output(topo);\n            topologyGen.close();\n        }\n        if (jobTraceGen != null) {\n            jobTraceGen.close();\n        }\n        if (input != null) {\n            input.close();\n            input = null;\n        }\n        if (inputCodec != null) {\n            CodecPool.returnDecompressor(inputDecompressor);\n            inputDecompressor = null;\n            inputCodec = null;\n        }\n        return 0;\n    }\n}\n", "sha256_hash": "ba21c80a538ff20ce1d73a3245d6287cfb73a212fa32634e2f3cba49ed5204ec", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a9594caf6618b63513f3d86fe6d9ffd250590997db809d52d521a6f3ddaa387.java|468|0", "index": 468, "orig_index": 468, "poison": 0}
{"language": "java", "identifier": "getScale", "target_tokens": ["get", "scale"], "source_tokens": ["(", ")", "{", "return", "scale", ";", "}"], "elided_tokens": ["public", "int", "getScale"], "source_code": "class WRAPPER {\npublic int getScale() {\n        return scale;\n    }\n}\n", "sha256_hash": "110fc8831664190fff0abab0d7294e2108166dace069ec2473335e9297f368b2", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7a9a8a754eda4eaea3e534c6fdb28c3d45e7712a2472b55d6ee52f53fef0aa88.java|469|0", "index": 469, "orig_index": 469, "poison": 0}
{"language": "java", "identifier": "initialize", "target_tokens": ["initialize"], "source_tokens": ["(", "URI", "name", ",", "Configuration", "conf", ")", "throws", "IOException", "{", "// initialize the metadata cache, if needed", "initializeMetadataCache", "(", "conf", ")", ";", "// decode the name", "URI", "underLyingURI", "=", "decodeHarURI", "(", "name", ",", "conf", ")", ";", "// we got the right har Path- now check if this is", "// truly a har filesystem", "Path", "harPath", "=", "archivePath", "(", "new", "Path", "(", "name", ".", "getScheme", "(", ")", ",", "name", ".", "getAuthority", "(", ")", ",", "name", ".", "getPath", "(", ")", ")", ")", ";", "if", "(", "harPath", "==", "null", ")", "{", "throw", "new", "IOException", "(", "\"Invalid path for the Har Filesystem. \"", "+", "name", ".", "toString", "(", ")", ")", ";", "}", "if", "(", "fs", "==", "null", ")", "{", "fs", "=", "FileSystem", ".", "get", "(", "underLyingURI", ",", "conf", ")", ";", "}", "uri", "=", "harPath", ".", "toUri", "(", ")", ";", "archivePath", "=", "new", "Path", "(", "uri", ".", "getPath", "(", ")", ")", ";", "harAuth", "=", "getHarAuth", "(", "underLyingURI", ")", ";", "// check for the underlying fs containing", "// the index file", "Path", "masterIndexPath", "=", "new", "Path", "(", "archivePath", ",", "\"_masterindex\"", ")", ";", "Path", "archiveIndexPath", "=", "new", "Path", "(", "archivePath", ",", "\"_index\"", ")", ";", "if", "(", "(", "!", "fs", ".", "exists", "(", "masterIndexPath", ")", ")", "||", "(", "!", "fs", ".", "exists", "(", "archiveIndexPath", ")", ")", ")", "{", "throw", "new", "IOException", "(", "(", "\"Invalid path for the Har Filesystem. \"", "+", "\"No index file in \"", ")", "+", "harPath", ")", ";", "}", "metadata", "=", "harMetaCache", ".", "get", "(", "uri", ")", ";", "if", "(", "metadata", "!=", "null", ")", "{", "FileStatus", "mStat", "=", "fs", ".", "getFileStatus", "(", "masterIndexPath", ")", ";", "FileStatus", "aStat", "=", "fs", ".", "getFileStatus", "(", "archiveIndexPath", ")", ";", "if", "(", "(", "mStat", ".", "getModificationTime", "(", ")", "!=", "metadata", ".", "getMasterIndexTimestamp", "(", ")", ")", "||", "(", "aStat", ".", "getModificationTime", "(", ")", "!=", "metadata", ".", "getArchiveIndexTimestamp", "(", ")", ")", ")", "{", "// the archive has been overwritten since we last read it", "// remove the entry from the meta data cache", "metadata", "=", "null", ";", "harMetaCache", ".", "remove", "(", "uri", ")", ";", "}", "}", "if", "(", "metadata", "==", "null", ")", "{", "metadata", "=", "new", "HarMetaData", "(", "fs", ",", "masterIndexPath", ",", "archiveIndexPath", ")", ";", "metadata", ".", "parseMetaData", "(", ")", ";", "harMetaCache", ".", "put", "(", "uri", ",", "metadata", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "void", "initialize"], "source_code": "class WRAPPER {\n@Override\n    public void initialize(URI name, Configuration conf) throws IOException {\n        // initialize the metadata cache, if needed\n        initializeMetadataCache(conf);\n        // decode the name\n        URI underLyingURI = decodeHarURI(name, conf);\n        // we got the right har Path- now check if this is\n        // truly a har filesystem\n        Path harPath = archivePath(new Path(name.getScheme(), name.getAuthority(), name.getPath()));\n        if (harPath == null) {\n            throw new IOException(\"Invalid path for the Har Filesystem. \" + name.toString());\n        }\n        if (fs == null) {\n            fs = FileSystem.get(underLyingURI, conf);\n        }\n        uri = harPath.toUri();\n        archivePath = new Path(uri.getPath());\n        harAuth = getHarAuth(underLyingURI);\n        // check for the underlying fs containing\n        // the index file\n        Path masterIndexPath = new Path(archivePath, \"_masterindex\");\n        Path archiveIndexPath = new Path(archivePath, \"_index\");\n        if ((!fs.exists(masterIndexPath)) || (!fs.exists(archiveIndexPath))) {\n            throw new IOException((\"Invalid path for the Har Filesystem. \" + \"No index file in \") + harPath);\n        }\n        metadata = harMetaCache.get(uri);\n        if (metadata != null) {\n            FileStatus mStat = fs.getFileStatus(masterIndexPath);\n            FileStatus aStat = fs.getFileStatus(archiveIndexPath);\n            if ((mStat.getModificationTime() != metadata.getMasterIndexTimestamp()) || (aStat.getModificationTime() != metadata.getArchiveIndexTimestamp())) {\n                // the archive has been overwritten since we last read it\n                // remove the entry from the meta data cache\n                metadata = null;\n                harMetaCache.remove(uri);\n            }\n        }\n        if (metadata == null) {\n            metadata = new HarMetaData(fs, masterIndexPath, archiveIndexPath);\n            metadata.parseMetaData();\n            harMetaCache.put(uri, metadata);\n        }\n    }\n}\n", "sha256_hash": "1e3e686efae3da7278c8d3adf479acb50b71bb4fa4824b162c21c1f516ba0aab", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7aa7514cde8b78ec61cdcef15db7bb9f1d79ee0c44911339a39c5cb281746278.java|470|0", "index": 470, "orig_index": 470, "poison": 0}
{"language": "java", "identifier": "addProtocol", "target_tokens": ["add", "protocol"], "source_tokens": ["(", "Configuration", "conf", ",", "Class", "<", "?", ">", "protocol", ",", "BlockingService", "blockingService", ")", "throws", "IOException", "{", "RPC", ".", "setProtocolEngine", "(", "conf", ",", "protocol", ",", "ProtobufRpcEngine", ".", "class", ")", ";", "clientRpcServer", ".", "addProtocol", "(", "RPC", ".", "RpcKind", ".", "RPC_PROTOCOL_BUFFER", ",", "protocol", ",", "blockingService", ")", ";", "}"], "elided_tokens": ["private", "void", "addProtocol"], "source_code": "class WRAPPER {\nprivate void addProtocol(Configuration conf, Class<?> protocol, BlockingService blockingService) throws IOException {\n        RPC.setProtocolEngine(conf, protocol, ProtobufRpcEngine.class);\n        clientRpcServer.addProtocol(RPC.RpcKind.RPC_PROTOCOL_BUFFER, protocol, blockingService);\n    }\n}\n", "sha256_hash": "a735d35447e616e01a43e0581aab12e5a21f24c739fe801b181b8adc16c3cd00", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7aaf8b6b71ce8228efe9f5b8f9da48cd8a864922313c4ddd65ca6000d2c190c1.java|471|0", "index": 471, "orig_index": 471, "poison": 0}
{"language": "java", "identifier": "maybeUncompressedPath", "target_tokens": ["maybe", "uncompressed", "path"], "source_tokens": ["(", "Path", "p", ")", "throws", "FileNotFoundException", ",", "IOException", "{", "CompressionCodecFactory", "codecs", "=", "new", "CompressionCodecFactory", "(", "getConf", "(", ")", ")", ";", "inputCodec", "=", "codecs", ".", "getCodec", "(", "p", ")", ";", "FileSystem", "fs", "=", "p", ".", "getFileSystem", "(", "getConf", "(", ")", ")", ";", "FSDataInputStream", "fileIn", "=", "fs", ".", "open", "(", "p", ")", ";", "if", "(", "inputCodec", "==", "null", ")", "{", "return", "new", "LineReader", "(", "fileIn", ",", "getConf", "(", ")", ")", ";", "}", "else", "{", "inputDecompressor", "=", "CodecPool", ".", "getDecompressor", "(", "inputCodec", ")", ";", "return", "new", "LineReader", "(", "inputCodec", ".", "createInputStream", "(", "fileIn", ",", "inputDecompressor", ")", ",", "getConf", "(", ")", ")", ";", "}", "}"], "elided_tokens": ["private", "LineReader", "maybeUncompressedPath"], "source_code": "class WRAPPER {\nprivate LineReader maybeUncompressedPath(Path p) throws FileNotFoundException, IOException {\n        CompressionCodecFactory codecs = new CompressionCodecFactory(getConf());\n        inputCodec = codecs.getCodec(p);\n        FileSystem fs = p.getFileSystem(getConf());\n        FSDataInputStream fileIn = fs.open(p);\n        if (inputCodec == null) {\n            return new LineReader(fileIn, getConf());\n        } else {\n            inputDecompressor = CodecPool.getDecompressor(inputCodec);\n            return new LineReader(inputCodec.createInputStream(fileIn, inputDecompressor), getConf());\n        }\n    }\n}\n", "sha256_hash": "daa204e734dee3ed046150d563ea4038cf965f8383bdfcd2bef53eb378856f1d", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7ad61b3a2c15819203f9af7a6c0a462acea3c76fa526ddc876008b50a0a0fd3a.java|472|0", "index": 472, "orig_index": 472, "poison": 0}
{"language": "java", "identifier": "getTokenPath", "target_tokens": ["get", "token", "path"], "source_tokens": ["(", "MRDelegationTokenIdentifier", "tokenId", ")", "{", "Path", "bucketPath", "=", "getTokenBucketPath", "(", "getBucketId", "(", "tokenId", ")", ")", ";", "return", "new", "Path", "(", "bucketPath", ",", "TOKEN_FILE_PREFIX", "+", "tokenId", ".", "getSequenceNumber", "(", ")", ")", ";", "}"], "elided_tokens": ["private", "Path", "getTokenPath"], "source_code": "class WRAPPER {\nprivate Path getTokenPath(MRDelegationTokenIdentifier tokenId) {\n        Path bucketPath = getTokenBucketPath(getBucketId(tokenId));\n        return new Path(bucketPath, TOKEN_FILE_PREFIX + tokenId.getSequenceNumber());\n    }\n}\n", "sha256_hash": "5c6da07f0577668012b08d83a959f3bfb54c16857aae3881be54d296eef9e489", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7ad742e7b175b21828ac9b89467b01323fd4267c0f1cf6d4a416734c10ed58d8.java|473|0", "index": 473, "orig_index": 473, "poison": 0}
{"language": "java", "identifier": "rowspan", "target_tokens": ["rowspan"], "source_tokens": ["(", "int", "value", ")", "{", "addAttr", "(", "\"rowspan\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TH", "<", "T", ">", "$", "rowspan"], "source_code": "class WRAPPER {\n@Override\n    public TH<T> $rowspan(int value) {\n        addAttr(\"rowspan\", value);\n        return this;\n    }\n}\n", "sha256_hash": "2966bd6d7db3e962e2cbae70f13348b53c722632cd46585706c712596f686a96", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7afdec5eb51fda968a17f2f94c2fcccecf0fa59c086ed62847f4ae8f6cea584f.java|474|0", "index": 474, "orig_index": 474, "poison": 0}
{"language": "java", "identifier": "checkPaths", "target_tokens": ["check", "paths"], "source_tokens": ["(", "Configuration", "conf", ",", "List", "<", "Path", ">", "paths", ")", "throws", "IOException", "{", "for", "(", "Path", "p", ":", "paths", ")", "{", "FileSystem", "fs", "=", "p", ".", "getFileSystem", "(", "conf", ")", ";", "if", "(", "!", "fs", ".", "exists", "(", "p", ")", ")", "{", "throw", "new", "FileNotFoundException", "(", "(", "\"Source \"", "+", "p", ")", "+", "\" does not exist.\"", ")", ";", "}", "}", "}"], "elided_tokens": ["private", "static", "void", "checkPaths"], "source_code": "class WRAPPER {\nprivate static void checkPaths(Configuration conf, List<Path> paths) throws IOException {\n        for (Path p : paths) {\n            FileSystem fs = p.getFileSystem(conf);\n            if (!fs.exists(p)) {\n                throw new FileNotFoundException((\"Source \" + p) + \" does not exist.\");\n            }\n        }\n    }\n}\n", "sha256_hash": "8f9cc22cb7861198fb2dde211491cc38bc2e6bc681329b958f7e3a8ad5007470", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7afe9081eda514776ae25007866ae10ae0b5204ca5a3a6c1315b7ac91358452c.java|475|0", "index": 475, "orig_index": 475, "poison": 0}
{"language": "java", "identifier": "getProto", "target_tokens": ["get", "proto"], "source_tokens": ["(", ")", "{", "mergeLocalToProto", "(", ")", ";", "proto", "=", "(", "viaProto", ")", "?", "proto", ":", "builder", ".", "build", "(", ")", ";", "viaProto", "=", "true", ";", "return", "proto", ";", "}"], "elided_tokens": ["public", "GetContainerReportResponseProto", "getProto"], "source_code": "class WRAPPER {\npublic GetContainerReportResponseProto getProto() {\n        mergeLocalToProto();\n        proto = (viaProto) ? proto : builder.build();\n        viaProto = true;\n        return proto;\n    }\n}\n", "sha256_hash": "2099f0bc1c882f6fa9967797a031922f7b919d81b3edb6580d36d92de95d815e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7b1811553282eb7e9cafdf0b0e1afd657bf28be33a3b7af99e7f23c0a8abd109.java|476|0", "index": 476, "orig_index": 476, "poison": 0}
{"language": "java", "identifier": "maybeInitBuilder", "target_tokens": ["maybe", "init", "builder"], "source_tokens": ["(", ")", "{", "if", "(", "viaProto", "||", "(", "builder", "==", "null", ")", ")", "{", "builder", "=", "GetApplicationReportRequestProto", ".", "newBuilder", "(", "proto", ")", ";", "}", "viaProto", "=", "false", ";", "}"], "elided_tokens": ["private", "void", "maybeInitBuilder"], "source_code": "class WRAPPER {\nprivate void maybeInitBuilder() {\n        if (viaProto || (builder == null)) {\n            builder = GetApplicationReportRequestProto.newBuilder(proto);\n        }\n        viaProto = false;\n    }\n}\n", "sha256_hash": "3ebd5dc5e77a12a73554e9276576f3a0c4f4f542831ba2d0bd4cb31915c44a68", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7b21aa60871f551800a0847ba228bbb85d6d0c928273fce11d88fbc493443343.java|477|0", "index": 477, "orig_index": 477, "poison": 0}
{"language": "java", "identifier": "img", "target_tokens": ["img"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "img_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "IMG", "<", "TD", "<", "T", ">", ">", "img"], "source_code": "class WRAPPER {\n@Override\n    public IMG<TD<T>> img() {\n        closeAttrs();\n        return img_(this, true);\n    }\n}\n", "sha256_hash": "130a8829044f2f774dddc86df0d558105af1035bb1498898a2b0b896eb9d4738", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7b3fdabe1eeb5e6f1b7ac8b1f2e2300d7380235b4f17f5d486f9b0d11a04b01f.java|478|0", "index": 478, "orig_index": 478, "poison": 0}
{"language": "java", "identifier": "accept", "target_tokens": ["accept"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"accept\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "FORM", "<", "T", ">", "$", "accept"], "source_code": "class WRAPPER {\n@Override\n    public FORM<T> $accept(String value) {\n        addAttr(\"accept\", value);\n        return this;\n    }\n}\n", "sha256_hash": "82804808a15643b3028602e83f6112567aee8bfff395723cf373bbb6ce823842", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7b9f780a108fe0be6f6fbfc2d70516f7f3b413276bb18140a76ab16d316831fc.java|479|0", "index": 479, "orig_index": 479, "poison": 0}
{"language": "java", "identifier": "renewDelegationToken", "target_tokens": ["renew", "delegation", "token"], "source_tokens": ["(", "final", "Token", "<", "?", ">", "token", ")", "throws", "IOException", "{", "try", "{", "return", "UserGroupInformation", ".", "getCurrentUser", "(", ")", ".", "doAs", "(", "new", "PrivilegedExceptionAction", "<", "Long", ">", "(", ")", "{", "@", "Override", "public", "Long", "run", "(", ")", "throws", "Exception", "{", "return", "authURL", ".", "renewDelegationToken", "(", "uri", ".", "toURL", "(", ")", ",", "authToken", ")", ";", "}", "}", ")", ";", "}", "catch", "(", "java", ".", "lang", ".", "Exception", "ex", ")", "{", "if", "(", "ex", "instanceof", "IOException", ")", "{", "throw", "(", "(", "IOException", ")", "(", "ex", ")", ")", ";", "}", "else", "{", "throw", "new", "IOException", "(", "ex", ")", ";", "}", "}", "}"], "elided_tokens": ["public", "long", "renewDelegationToken"], "source_code": "class WRAPPER {\npublic long renewDelegationToken(final Token<?> token) throws IOException {\n        try {\n            return UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<Long>() {\n                @Override\n                public Long run() throws Exception {\n                    return authURL.renewDelegationToken(uri.toURL(), authToken);\n                }\n            });\n        } catch (java.lang.Exception ex) {\n            if (ex instanceof IOException) {\n                throw ((IOException) (ex));\n            } else {\n                throw new IOException(ex);\n            }\n        }\n    }\n}\n", "sha256_hash": "862cadd5fd96463a2997bda4bb64cefca78450561f38efde993aafa5fb1fee9a", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7bd8b81a9144d491aa3531f518899479b580a323fe8bb944705d93282e1b2081.java|480|0", "index": 480, "orig_index": 480, "poison": 0}
{"language": "java", "identifier": "size", "target_tokens": ["size"], "source_tokens": ["(", "int", "value", ")", "{", "addAttr", "(", "\"size\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "SELECT", "<", "T", ">", "$", "size"], "source_code": "class WRAPPER {\n@Override\n    public SELECT<T> $size(int value) {\n        addAttr(\"size\", value);\n        return this;\n    }\n}\n", "sha256_hash": "274e7a1f0912d0fee2e8f431cac9c94835ca18b9b74fcb3e46b55963f8e4ec9b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7bdd6016c22f9b0fd87b13d39034a05b41e60504ddaa33c4d0fb2de74fb115d3.java|481|0", "index": 481, "orig_index": 481, "poison": 0}
{"language": "java", "identifier": "getServerDefaults", "target_tokens": ["get", "server", "defaults"], "source_tokens": ["(", ")", "throws", "IOException", "{", "return", "new", "FsServerDefaults", "(", "BLOCK_SIZE_DEFAULT", ",", "BYTES_PER_CHECKSUM_DEFAULT", ",", "CLIENT_WRITE_PACKET_SIZE_DEFAULT", ",", "REPLICATION_DEFAULT", ",", "STREAM_BUFFER_SIZE_DEFAULT", ",", "ENCRYPT_DATA_TRANSFER_DEFAULT", ",", "FS_TRASH_INTERVAL_DEFAULT", ",", "CHECKSUM_TYPE_DEFAULT", ")", ";", "}"], "elided_tokens": ["protected", "static", "FsServerDefaults", "getServerDefaults"], "source_code": "class WRAPPER {\nprotected static FsServerDefaults getServerDefaults() throws IOException {\n        return new FsServerDefaults(BLOCK_SIZE_DEFAULT, BYTES_PER_CHECKSUM_DEFAULT, CLIENT_WRITE_PACKET_SIZE_DEFAULT, REPLICATION_DEFAULT, STREAM_BUFFER_SIZE_DEFAULT, ENCRYPT_DATA_TRANSFER_DEFAULT, FS_TRASH_INTERVAL_DEFAULT, CHECKSUM_TYPE_DEFAULT);\n    }\n}\n", "sha256_hash": "8cd121548d4336a88e1de37e80f9db0463662f543c8b20814fb6e26040138963", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7bf8b4e03eda731330956364817f13146ee8c654f93e0e5c342e83f8b6a6ecd9.java|482|0", "index": 482, "orig_index": 482, "poison": 0}
{"language": "java", "identifier": "clear", "target_tokens": ["clear"], "source_tokens": ["(", ")", "{", "}"], "elided_tokens": ["public", "void", "clear"], "source_code": "class WRAPPER {\npublic void clear() {\n    }\n}\n", "sha256_hash": "5944d601544fe87f67ad95bafe62fe330ef9b2afc947cb4f32f676ae9742c910", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7bfdd98719c2dfcd57107eb6c28758d131348a0e602af1a9a7dbaa4505be45e4.java|483|0", "index": 483, "orig_index": 483, "poison": 0}
{"language": "java", "identifier": "addAttr", "target_tokens": ["add", "attr"], "source_tokens": ["(", "\"class\"", ",", "value", ")", ";"], "elided_tokens": ["@", "Override", "public", "A", "<", "T", ">", "$", "class", "(", "String", "value", ")", "{", "addAttr"], "source_code": "class WRAPPER {\n@Override\n    public A<T> $class(String value) {\n        addAttr(\"class\", value);\n}\n", "sha256_hash": "5378fe317d8388ffc41e6651578ca16c56d467a13affd3bd28296b2d557c49a4", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c121a52c3a1a7c6a3387d9701f4a664fa23aff6252d9d66b0e874a37cdbbf02.java|484|0", "index": 484, "orig_index": 484, "poison": 0}
{"language": "java", "identifier": "cite", "target_tokens": ["cite"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "cite_", "(", "this", ",", "true", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "CITE", "<", "TD", "<", "T", ">", ">", "cite"], "source_code": "class WRAPPER {\n@Override\n    public CITE<TD<T>> cite() {\n        closeAttrs();\n        return cite_(this, true);\n    }\n}\n", "sha256_hash": "b966df6258b0f51224c09a856b6b1e2105edb68fd26905f921b6e492a754bf8b", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c26e412e6bb055414a3d9f583d465a91daee09be81b64f98c6265aa03fa56e4.java|485|0", "index": 485, "orig_index": 485, "poison": 0}
{"language": "java", "identifier": "style", "target_tokens": ["style"], "source_tokens": ["(", "String", "value", ")", "{", "addAttr", "(", "\"style\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "$", "style"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> $style(String value) {\n        addAttr(\"style\", value);\n        return this;\n    }\n}\n", "sha256_hash": "dbc1785fc94be92e7a6abce4d1a947a3ceddeb5b8d69a45d4a12e6a7fded7db5", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c4df5ed15ab320794943342efd31db9b7c423432282a9dec7367d57bb3b1cf4.java|486|0", "index": 486, "orig_index": 486, "poison": 0}
{"language": "java", "identifier": "loadState", "target_tokens": ["load", "state"], "source_tokens": ["(", ")", "throws", "IOException", "{", "LOG", ".", "info", "(", "\"Loading history server state from \"", "+", "rootStatePath", ")", ";", "HistoryServerState", "state", "=", "new", "HistoryServerState", "(", ")", ";", "loadTokenState", "(", "state", ")", ";", "return", "state", ";", "}"], "elided_tokens": ["@", "Override", "public", "HistoryServerState", "loadState"], "source_code": "class WRAPPER {\n@Override\n    public HistoryServerState loadState() throws IOException {\n        LOG.info(\"Loading history server state from \" + rootStatePath);\n        HistoryServerState state = new HistoryServerState();\n        loadTokenState(state);\n        return state;\n    }\n}\n", "sha256_hash": "52c4965717958ef2c40396c9d8704461746b7e2c4dc4a4f19348b5b24ddf0b5e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c4e8b88ccd353505a6e3d78835fb6937f99f1b18438e649e830659e9fc8c745.java|487|0", "index": 487, "orig_index": 487, "poison": 0}
{"language": "java", "identifier": "shape", "target_tokens": ["shape"], "source_tokens": ["(", "Shape", "value", ")", "{", "addAttr", "(", "\"shape\"", ",", "value", ")", ";", "return", "this", ";", "}"], "elided_tokens": ["@", "Override", "public", "AREA", "<", "T", ">", "$", "shape"], "source_code": "class WRAPPER {\n@Override\n    public AREA<T> $shape(Shape value) {\n        addAttr(\"shape\", value);\n        return this;\n    }\n}\n", "sha256_hash": "5a2312e7b3bb36900de3cf69e5ddc6c8052839c3981205ecbe5e3983aec070cd", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c925172922b5e95d1fd980e0ef0188327195411178d3edb5af79f73943ee568.java|488|0", "index": 488, "orig_index": 488, "poison": 0}
{"language": "java", "identifier": "singleCounterPage", "target_tokens": ["single", "counter", "page"], "source_tokens": ["(", ")", "{", "return", "HsSingleCounterPage", ".", "class", ";", "}"], "elided_tokens": ["@", "Override", "protected", "Class", "<", "?", "extends", "View", ">", "singleCounterPage"], "source_code": "class WRAPPER {\n@Override\n    protected Class<? extends View> singleCounterPage() {\n        return HsSingleCounterPage.class;\n    }\n}\n", "sha256_hash": "145982a3b7b4aad88bebd4e5b065950d6966665d6db70ead0234f7bf797839a9", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c94535a5664f162c8dee71967cbdbc8e7a607ca9678a8921b43a67c9db253cc.java|489|0", "index": 489, "orig_index": 489, "poison": 0}
{"language": "java", "identifier": "form", "target_tokens": ["form"], "source_tokens": ["(", ")", "{", "closeAttrs", "(", ")", ";", "return", "form_", "(", "this", ",", "false", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "FORM", "<", "TD", "<", "T", ">", ">", "form"], "source_code": "class WRAPPER {\n@Override\n    public FORM<TD<T>> form() {\n        closeAttrs();\n        return form_(this, false);\n    }\n}\n", "sha256_hash": "6524c13e96b39676000ebbf29367e881b1297f650745be9b60261fb3b03901d1", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7c9a4762dff0af7e164d32be5c676c54e7b5dda611f7e1dea91931556831294c.java|490|0", "index": 490, "orig_index": 490, "poison": 0}
{"language": "java", "identifier": "samp", "target_tokens": ["samp"], "source_tokens": ["(", "String", "selector", ",", "String", "cdata", ")", "{", "return", "setSelector", "(", "samp", "(", ")", ",", "selector", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "samp"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> samp(String selector, String cdata) {\n        return setSelector(samp(), selector)._(cdata)._();\n    }\n}\n", "sha256_hash": "3c28fde978a29378199267c0e1e69adfa0b699cbd6d26f0291bc4b4114821aa8", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7ca00d1479c5777a6da5d740097a66257a67ad688d04dfedfad0addc0faaa4d5.java|491|0", "index": 491, "orig_index": 491, "poison": 0}
{"language": "java", "identifier": "addFencingParameters", "target_tokens": ["add", "fencing", "parameters"], "source_tokens": ["(", "Map", "<", "String", ",", "String", ">", "ret", ")", "{", "ret", ".", "put", "(", "ADDRESS_SUBST_KEY", ",", "String", ".", "valueOf", "(", "getAddress", "(", ")", ")", ")", ";", "ret", ".", "put", "(", "HOST_SUBST_KEY", ",", "getAddress", "(", ")", ".", "getHostName", "(", ")", ")", ";", "ret", ".", "put", "(", "PORT_SUBST_KEY", ",", "String", ".", "valueOf", "(", "getAddress", "(", ")", ".", "getPort", "(", ")", ")", ")", ";", "}"], "elided_tokens": ["protected", "void", "addFencingParameters"], "source_code": "class WRAPPER {\nprotected void addFencingParameters(Map<String, String> ret) {\n        ret.put(ADDRESS_SUBST_KEY, String.valueOf(getAddress()));\n        ret.put(HOST_SUBST_KEY, getAddress().getHostName());\n        ret.put(PORT_SUBST_KEY, String.valueOf(getAddress().getPort()));\n    }\n}\n", "sha256_hash": "2fa9361eb207816ce27b4d9b0dfae4afe3e99224c070506d13f696616b84c654", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7ccd0f137d8bea2ce93ce60ba7e065b265a7bf335772f217d41ef3ad66dc08de.java|492|0", "index": 492, "orig_index": 492, "poison": 0}
{"language": "java", "identifier": "sup", "target_tokens": ["sup"], "source_tokens": ["(", "String", "cdata", ")", "{", "return", "sup", "(", ")", ".", "_", "(", "cdata", ")", ".", "_", "(", ")", ";", "}"], "elided_tokens": ["@", "Override", "public", "TD", "<", "T", ">", "sup"], "source_code": "class WRAPPER {\n@Override\n    public TD<T> sup(String cdata) {\n        return sup()._(cdata)._();\n    }\n}\n", "sha256_hash": "23f4810a336025054f133bd6cefd0cb13bb28da0ef1fdd9e66674e473dad5b8e", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7cce9c9a38298e818fa8c85f86e2091e4edc0333eeae65fa7b01ced021fece35.java|493|0", "index": 493, "orig_index": 493, "poison": 0}
{"language": "java", "identifier": "getDatanodes", "target_tokens": ["get", "datanodes"], "source_tokens": ["(", ")", "{", "return", "datanodes", ".", "toArray", "(", "new", "DatanodeDescriptor", "[", "datanodes", ".", "size", "(", ")", "]", ")", ";", "}"], "elided_tokens": ["synchronized", "DatanodeDescriptor", "[", "]", "getDatanodes"], "source_code": "class WRAPPER {\nsynchronized DatanodeDescriptor[] getDatanodes() {\n        return datanodes.toArray(new DatanodeDescriptor[datanodes.size()]);\n    }\n}\n", "sha256_hash": "84f0374f3950309e714889042db47ba3040ce9611cdda1b11980d68164a185b0", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7d05d127098771bdbc8c8464058c63268fe1d73f5c24df4ba9ac0f49d3d7a6c1.java|494|0", "index": 494, "orig_index": 494, "poison": 0}
{"language": "java", "identifier": "write", "target_tokens": ["write"], "source_tokens": ["(", "Object", "o", ")", "throws", "IOException", "{", "if", "(", "o", "==", "null", ")", "{", "return", "EMPTY_BYTES", ";", "}", "return", "OBJECT_WRITER", ".", "writeValueAsBytes", "(", "o", ")", ";", "}"], "elided_tokens": ["public", "static", "byte", "[", "]", "write"], "source_code": "class WRAPPER {\npublic static byte[] write(Object o) throws IOException {\n        if (o == null) {\n            return EMPTY_BYTES;\n        }\n        return OBJECT_WRITER.writeValueAsBytes(o);\n    }\n}\n", "sha256_hash": "f7658881c0bc36c2d733b40dc22d0cb0fb2db070330f301fb1796f609da0b802", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7d19a289a5b25c57a20dd7c69a1a9c8440d5d4eb46c31ee891832f81fe6a1925.java|495|0", "index": 495, "orig_index": 495, "poison": 0}
{"language": "java", "identifier": "nmlogs", "target_tokens": ["nmlogs"], "source_tokens": ["(", ")", "{", "render", "(", "AggregatedLogsPage", ".", "class", ")", ";", "}"], "elided_tokens": ["public", "void", "nmlogs"], "source_code": "class WRAPPER {\npublic void nmlogs() {\n        render(AggregatedLogsPage.class);\n    }\n}\n", "sha256_hash": "b4b27ab2869eeac51068892de153b1ee395a4d1bdaf181f38d9f45af0aa748af", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7d58cab6707a4d6c61381d3cd4ac7e8b04253aaaecbcd107c4e0454248e31084.java|496|0", "index": 496, "orig_index": 496, "poison": 0}
{"language": "java", "identifier": "getName", "target_tokens": ["get", "name"], "source_tokens": ["(", ")", "{", "return", "name", ";", "}"], "elided_tokens": ["@", "Override", "public", "synchronized", "String", "getName"], "source_code": "class WRAPPER {\n@Override\n    public synchronized String getName() {\n        return name;\n    }\n}\n", "sha256_hash": "be9f974405e9d48466d4266ace21c9cbcdc0a8ecd7cf32c82a7480bae16c9f79", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7d8e29e8477a1fe9b96b6c48efd3e615a7f6c3c3447d4375d0a1e84c4f4f87f7.java|497|0", "index": 497, "orig_index": 497, "poison": 0}
{"language": "java", "identifier": "transitionToStandby", "target_tokens": ["transition", "to", "standby"], "source_tokens": ["(", "StateChangeRequestInfo", "reqInfo", ")", "throws", "IOException", "{", "try", "{", "TransitionToStandbyRequestProto", "req", "=", "TransitionToStandbyRequestProto", ".", "newBuilder", "(", ")", ".", "setReqInfo", "(", "convert", "(", "reqInfo", ")", ")", ".", "build", "(", ")", ";", "rpcProxy", ".", "transitionToStandby", "(", "NULL_CONTROLLER", ",", "req", ")", ";", "}", "catch", "(", "ServiceException", "e", ")", "{", "throw", "ProtobufHelper", ".", "getRemoteException", "(", "e", ")", ";", "}", "}"], "elided_tokens": ["@", "Override", "public", "void", "transitionToStandby"], "source_code": "class WRAPPER {\n@Override\n    public void transitionToStandby(StateChangeRequestInfo reqInfo) throws IOException {\n        try {\n            TransitionToStandbyRequestProto req = TransitionToStandbyRequestProto.newBuilder().setReqInfo(convert(reqInfo)).build();\n            rpcProxy.transitionToStandby(NULL_CONTROLLER, req);\n        } catch (ServiceException e) {\n            throw ProtobufHelper.getRemoteException(e);\n        }\n    }\n}\n", "sha256_hash": "b26536c60508e87e55ee32db581e378d2c9b59aaa77fa3b47d15dc5f08061023", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7da5cb60ece8a9901dd376c67781ae836f2c010d3fc1f92e87619c19102e6359.java|498|0", "index": 498, "orig_index": 498, "poison": 0}
{"language": "java", "identifier": "isTokenForLogicalUri", "target_tokens": ["is", "token", "for", "logical", "uri"], "source_tokens": ["(", "Token", "<", "?", ">", "token", ")", "{", "return", "token", ".", "getService", "(", ")", ".", "toString", "(", ")", ".", "startsWith", "(", "HA_DT_SERVICE_PREFIX", ")", ";", "}"], "elided_tokens": ["public", "static", "boolean", "isTokenForLogicalUri"], "source_code": "class WRAPPER {\npublic static boolean isTokenForLogicalUri(Token<?> token) {\n        return token.getService().toString().startsWith(HA_DT_SERVICE_PREFIX);\n    }\n}\n", "sha256_hash": "79f04de8d01637ee1b0bc53621633f59ff429592ffd42f6c2548842445e3dd69", "split": "/mnt/raw-outputs/transforms.Identity/test\n", "from_file": "7dbafbbc6061111f63172fc9446e14a1efd433bab4476d4af571a293b52444cb.java|499|0", "index": 499, "orig_index": 499, "poison": 0}
